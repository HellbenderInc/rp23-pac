var searchIndex = JSON.parse('{\
"bare_metal":{"doc":"Abstractions common to bare metal systems","t":"DDIDLLLLLLLLLLLLLLLLLLLKLLLLLLLLL","n":["CriticalSection","Mutex","Nr","Peripheral","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","fmt","from","from","from","get","into","into","into","new","new","new","nr","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id"],"q":[[0,"bare_metal"]],"d":["Critical section token","A “mutex” based on critical sections","Interrupt number","A peripheral","","","Borrows the data for the duration of the critical section","Borrows the peripheral for the duration of a critical …","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns a pointer to the register block","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Creates a critical section token","Creates a new mutex","Creates a new peripheral","Returns the number associated with an interrupt","","","","","","","","",""],"i":[0,0,0,0,2,1,1,3,3,2,1,3,3,2,1,3,3,2,1,3,2,1,3,11,2,1,3,2,1,3,2,1,3],"f":[0,0,0,0,[[]],[[]],[[1,2]],[[3,2]],[[]],[[]],[[]],[[]],[[[3,[4]],5],6],[[]],[[]],[[]],[3],[[]],[[]],[[]],[[],2],[[],1],[7,3],[[],8],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],10],[[],10],[[],10]],"c":[],"p":[[3,"Mutex"],[3,"CriticalSection"],[3,"Peripheral"],[8,"Debug"],[3,"Formatter"],[6,"Result"],[15,"usize"],[15,"u8"],[4,"Result"],[3,"TypeId"],[8,"Nr"]]},\
"bitfield":{"doc":"This crate provides macros to generate bitfield-like …","t":"IIKKOOOOKK","n":["Bit","BitRange","bit","bit_range","bitfield","bitfield_bitrange","bitfield_debug","bitfield_fields","set_bit","set_bit_range"],"q":[[0,"bitfield"]],"d":["A trait to get or set a single bit.","A trait to get or set ranges of bits.","Get a single bit.","Get a range of bits.","Combines <code>bitfield_bitrange</code> and <code>bitfield_fields</code>.","Implements <code>BitRange</code> for a tuple struct (or “newtype”).","Generates a <code>fmt::Debug</code> implementation.","Declares the fields of struct.","Set a single bit.","Set a range of bits."],"i":[0,0,3,4,0,0,0,0,3,4],"f":[0,0,[1,2],[[1,1]],0,0,0,0,[[1,2]],[[1,1]]],"c":[],"p":[[15,"usize"],[15,"bool"],[8,"Bit"],[8,"BitRange"]]},\
"cortex_m":{"doc":"Low level access to Cortex-M processors","t":"CAAAOOAAAAOFFFFFFFFFFFFFDLLLLLLLLLLLLLLLLLLLLDIDILLLLLFFFLLLLLLKKLLLLLLDLLLLLLLFFFFDMDMDMDMDMDMDMDMDMDMSSSSSSSSSSSSSDDMDMDMDMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLALLLLLLLLLLLLALLLALLLLLLLLLLLLLLLLLLLLLLLLLLLLLALLLLLLLLLAALLLLLLLLLLLLLLLLLLLLLLLLLLLLLALLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLALLALALLLLLLLLLLLLLLLALLLLLLLLLLLLLLLLLLALALLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDLLMMMMMMMMLMMLLLLENNDMMLLLLMMLMMMLLLLLLMMMLLLLLLDLLMMMMLLLLLDDLLLLMMMMMMMLLMLLMMMMMMLLLLLLDLLMMLLMMMLLLDLLMMMLLMLLLDMLLLMLLLLDDLLLLLLLLLMMMMMMLLLLLLLLLDMLLMLLMMMMMMMMMLLLDLLLMMMLMMMMLLLNNNNENNNNNNNNDNNNNNNENNNEMMMLLLLLLLLMMLLLMMLLLLLLLLLLLMMLLLLLMMMMLLLLLLLLLLLLMMNNDELLLLMLMMLLLLLLMLLLLLLDMMLLMMLLMMMMLLLQQQQQQQQQQQIIIIIIIIIIIIIIKKKKKKKKKKKKKKKKKKKKKKKLAAAAAAAFFFNDENNENNENLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLFLLLLLLLLLLLLLLLLFNENLLLLLLLLLFLLLFFNNELLLLLLLLLFLLLFF","n":["Peripherals","asm","delay","interrupt","iprint","iprintln","itm","peripheral","prelude","register","singleton","bkpt","bootload","bootstrap","delay","dmb","dsb","isb","nop","semihosting_syscall","sev","udf","wfe","wfi","Delay","borrow","borrow_mut","delay_ms","delay_ms","delay_ms","delay_ms","delay_ms","delay_us","delay_us","delay_us","delay_us","delay_us","free","from","into","new","try_from","try_into","type_id","with_source","CriticalSection","InterruptNumber","Mutex","Nr","borrow","borrow","borrow","borrow_mut","borrow_mut","disable","enable","free","from","from","into","into","new","new","nr","number","try_from","try_from","try_into","try_into","type_id","type_id","Aligned","borrow","borrow_mut","from","into","try_from","try_into","type_id","write_aligned","write_all","write_fmt","write_str","CBP","CBP","CPUID","CPUID","DCB","DCB","DWT","DWT","FPB","FPB","FPU","FPU","ICB","ICB","ITM","ITM","MPU","MPU","NVIC","NVIC","PTR","PTR","PTR","PTR","PTR","PTR","PTR","PTR","PTR","PTR","PTR","PTR","PTR","Peripherals","SAU","SAU","SCB","SCB","SYST","SYST","TPIU","TPIU","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","bpiall","cache_dminline","cache_iminline","cache_num_sets_ways","cbp","clean_dcache","clean_dcache_by_address","clean_dcache_by_ref","clean_dcache_by_slice","clean_invalidate_dcache","clean_invalidate_dcache_by_address","clear_current","clear_pendst","clear_pendsv","clear_sleepdeep","clear_sleeponexit","cpi_count","cpuid","cycle_count","cycle_counter_enabled","dcache_enabled","dcb","dccimvac","dccisw","dccmvac","dccmvau","dccsw","dcimvac","dcisw","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","disable","disable_counter","disable_cycle_counter","disable_dcache","disable_icache","disable_interrupt","disable_trace","dwt","enable","enable_counter","enable_cycle_counter","enable_dcache","enable_icache","enable_interrupt","enable_trace","exception_count","fold_count","fpb","fpu","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","get_clock_source","get_current","get_cycle_count","get_priority","get_priority","get_reload","get_ticks_per_10ms","has_cycle_counter","has_exception_trace","has_external_match","has_profiling_counter","has_reference_clock","has_wrapped","icache_enabled","icb","iciallu","icimvau","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","invalidate_dcache_by_address","invalidate_dcache_by_ref","invalidate_dcache_by_slice","invalidate_icache","is_active","is_counter_enabled","is_debugger_attached","is_enabled","is_enabled","is_interrupt_enabled","is_pending","is_pendst_pending","is_pendsv_pending","is_precise","itm","lsu_count","mask","mpu","num_comp","nvic","pend","ptr","ptr","ptr","ptr","ptr","ptr","ptr","ptr","ptr","ptr","ptr","ptr","ptr","request","scb","select_cache","set_clock_source","set_cpi_count","set_cycle_count","set_exception_count","set_fold_count","set_lsu_count","set_pendst","set_pendsv","set_priority","set_priority","set_reload","set_sleep_count","set_sleepdeep","set_sleeponexit","sleep_count","steal","sys_reset","syst","take","tpiu","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","unlock","unmask","unpend","vect_active","RegisterBlock","borrow","borrow_mut","bpiall","dccimvac","dccisw","dccmvac","dccmvau","dccsw","dcimvac","dcisw","from","iciallu","icimvau","into","try_from","try_into","type_id","CsselrCacheType","DataOrUnified","Instruction","RegisterBlock","afr","base","borrow","borrow","borrow_mut","borrow_mut","ccsidr","clidr","clone","csselr","ctr","dfr","eq","fmt","from","from","into","into","isar","mmfr","pfr","try_from","try_from","try_into","try_into","type_id","type_id","RegisterBlock","borrow","borrow_mut","dcrdr","dcrsr","demcr","dhcsr","from","into","try_from","try_into","type_id","Comparator","RegisterBlock","borrow","borrow","borrow_mut","borrow_mut","c","comp","cpicnt","ctrl","cyccnt","exccnt","foldcnt","from","from","function","into","into","lar","lsr","lsucnt","mask","pcsr","sleepcnt","try_from","try_from","try_into","try_into","type_id","type_id","RegisterBlock","borrow","borrow_mut","comp","ctrl","from","into","lar","lsr","remap","try_from","try_into","type_id","RegisterBlock","borrow","borrow_mut","fpcar","fpccr","fpdscr","from","into","mvfr","try_from","try_into","type_id","RegisterBlock","actlr","borrow","borrow_mut","from","ictr","into","try_from","try_into","type_id","RegisterBlock","Stim","borrow","borrow","borrow_mut","borrow_mut","from","from","into","into","is_fifo_ready","lar","lsr","stim","tcr","ter","tpr","try_from","try_from","try_into","try_into","type_id","type_id","write_u16","write_u32","write_u8","RegisterBlock","_type","borrow","borrow_mut","ctrl","from","into","rasr","rasr_a1","rasr_a2","rasr_a3","rbar","rbar_a1","rbar_a2","rbar_a3","rnr","try_from","try_into","type_id","RegisterBlock","borrow","borrow_mut","from","iabr","icer","icpr","into","ipr","iser","ispr","stir","try_from","try_into","type_id","BusFault","BusFault","DebugMonitor","DebugMonitor","Exception","Exception","HardFault","Interrupt","MemoryManagement","MemoryManagement","NonMaskableInt","PendSV","PendSV","RegisterBlock","SVCall","SVCall","SecureFault","SecureFault","SysTick","SysTick","SystemHandler","ThreadMode","UsageFault","UsageFault","VectActive","afsr","aircr","bfar","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","ccr","cfsr","clone","clone","clone","cpacr","dfsr","eq","eq","eq","fmt","fmt","fmt","from","from","from","from","from","hfsr","icsr","into","into","into","into","irqn","mmfar","scr","shcsr","shpr","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","vtor","irqn","Core","External","RegisterBlock","SystClkSource","borrow","borrow","borrow_mut","borrow_mut","calib","clone","csr","cvr","eq","fmt","from","from","into","into","rvr","try_from","try_from","try_into","try_into","type_id","type_id","RegisterBlock","_type","acpr","borrow","borrow_mut","cspsr","ffcr","from","into","lar","lsr","sppr","sspsr","try_from","try_into","type_id","Duty","Error","Error","Error","Error","Error","Error","Error","Error","Error","Time","_embedded_hal_PwmPin","_embedded_hal_blocking_delay_DelayMs","_embedded_hal_blocking_delay_DelayUs","_embedded_hal_blocking_i2c_Read","_embedded_hal_blocking_i2c_Write","_embedded_hal_blocking_i2c_WriteRead","_embedded_hal_blocking_serial_Write","_embedded_hal_blocking_spi_Transfer","_embedded_hal_blocking_spi_Write","_embedded_hal_digital_OutputPin","_embedded_hal_serial_Read","_embedded_hal_serial_Write","_embedded_hal_spi_FullDuplex","_embedded_hal_timer_CountDown","bflush","bwrite_all","delay_ms","delay_us","disable","enable","flush","get_duty","get_max_duty","read","read","read","send","set_duty","set_high","set_low","start","transfer","wait","write","write","write","write_read","write_str","basepri","basepri_max","control","faultmask","msp","primask","psp","read","write","write","Active","Control","Fpca","Msp","NotActive","Npriv","Privileged","Psp","Spsel","Unprivileged","bits","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","eq","eq","eq","fmt","fmt","fmt","fmt","fpca","from","from","from","from","from_bits","into","into","into","into","is_active","is_msp","is_not_active","is_privileged","is_psp","is_unprivileged","npriv","read","set_fpca","set_npriv","set_spsel","spsel","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","write","Active","Faultmask","Inactive","borrow","borrow_mut","clone","eq","fmt","from","into","is_active","is_inactive","read","try_from","try_into","type_id","read","write","Active","Inactive","Primask","borrow","borrow_mut","clone","eq","fmt","from","into","is_active","is_inactive","read","try_from","try_into","type_id","read","write"],"q":[[0,"cortex_m"],[11,"cortex_m::asm"],[24,"cortex_m::delay"],[45,"cortex_m::interrupt"],[71,"cortex_m::itm"],[83,"cortex_m::peripheral"],[371,"cortex_m::peripheral::cbp"],[389,"cortex_m::peripheral::cpuid"],[420,"cortex_m::peripheral::dcb"],[432,"cortex_m::peripheral::dwt"],[462,"cortex_m::peripheral::fpb"],[475,"cortex_m::peripheral::fpu"],[487,"cortex_m::peripheral::icb"],[497,"cortex_m::peripheral::itm"],[523,"cortex_m::peripheral::mpu"],[542,"cortex_m::peripheral::nvic"],[557,"cortex_m::peripheral::scb"],[635,"cortex_m::peripheral::scb::VectActive"],[636,"cortex_m::peripheral::syst"],[661,"cortex_m::peripheral::tpiu"],[677,"cortex_m::prelude"],[726,"cortex_m::register"],[733,"cortex_m::register::basepri"],[735,"cortex_m::register::basepri_max"],[736,"cortex_m::register::control"],[801,"cortex_m::register::faultmask"],[817,"cortex_m::register::msp"],[819,"cortex_m::register::primask"],[835,"cortex_m::register::psp"]],"d":["","Miscellaneous assembly instructions","A delay driver based on SysTick.","Interrupts","Macro for sending a formatted string through an ITM channel","Macro for sending a formatted string through an ITM …","Instrumentation Trace Macrocell","Core peripherals.","Prelude","Processor core registers","Macro to create a mutable reference to a statically …","Puts the processor in Debug state. Debuggers can pick this …","Bootload.","Bootstrap.","Blocks the program for <em>at least</em> <code>cycles</code> CPU cycles.","Data Memory Barrier","Data Synchronization Barrier","Instruction Synchronization Barrier","A no-operation. Useful to prevent delay loops from being …","Semihosting syscall.","Send Event","Generate an Undefined Instruction exception.","Wait For Event","Wait For Interrupt","System timer (SysTick) as a delay provider.","","","","Delay using the Cortex-M systick for a certain duration, …","","","","Delay using the Cortex-M systick for a certain duration, …","","","","","Releases the system timer (SysTick) resource.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Configures the system timer (SysTick) as a delay provider.","","","","Configures the system timer (SysTick) as a delay provider …","Critical section token","Trait for enums of external interrupt numbers.","A “mutex” based on critical sections","Interrupt number","","","Borrows the data for the duration of the critical section","","","Disables all interrupts","Enables all the interrupts","Execute closure <code>f</code> in an interrupt-free context.","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Creates a critical section token","Creates a new mutex","Returns the number associated with an interrupt","Return the interrupt number associated with this variant.","","","","","","","A wrapper type that aligns its contents on a 4-Byte …","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","Writes a 4-byte aligned <code>buffer</code> to an ITM port.","Writes <code>buffer</code> to an ITM port.","Writes <code>fmt::Arguments</code> to the ITM <code>port</code>","Writes a string to the ITM <code>port</code>","Cache and branch predictor maintenance operations","Cache and branch predictor maintenance operations. Not …","CPUID","CPUID","Debug Control Block","Debug Control Block","Data Watchpoint and Trace unit","Data Watchpoint and Trace unit","Flash Patch and Breakpoint unit","Flash Patch and Breakpoint unit. Not available on Armv6-M.","Floating Point Unit","Floating Point Unit.","Implementation Control Block.","Implementation Control Block.","Instrumentation Trace Macrocell","Instrumentation Trace Macrocell. Not available on Armv6-M …","Memory Protection Unit","Memory Protection Unit","Nested Vector Interrupt Controller","Nested Vector Interrupt Controller","Pointer to the register block","Pointer to the register block","Pointer to the register block","Pointer to the register block","Pointer to the register block","Pointer to the register block","Pointer to the register block","Pointer to the register block","Pointer to the register block","Pointer to the register block","Pointer to the register block","Pointer to the register block","Pointer to the register block","Core peripherals","Security Attribution Unit","Security Attribution Unit","System Control Block","System Control Block","SysTick: System Timer","SysTick: System Timer","Trace Port Interface Unit","Trace Port Interface Unit. Not available on Armv6-M.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Branch predictor invalidate all","Returns log2 of the number of words in the smallest cache …","Returns log2 of the number of words in the smallest cache …","Returns the number of sets and ways in the selected cache","Cache and branch predictor maintenance operations","Cleans the entire D-cache.","Cleans D-cache by address.","Cleans an object from the D-cache.","Cleans a slice from D-cache.","Cleans and invalidates the entire D-cache.","Cleans and invalidates D-cache by address.","Clears current value to 0","Set the PENDSTCLR bit in the ICSR register which will …","Set the PENDSVCLR bit in the ICSR register which will …","Clear the SLEEPDEEP bit in the SCR register","Clear the SLEEPONEXIT bit in the SCR register","Get the CPI count","CPUID","Returns the current clock cycle count","Returns <code>true</code> if the cycle counter is enabled","Returns whether the D-cache is currently enabled.","Debug Control Block","D-cache clean and invalidate by MVA to PoC","D-cache clean and invalidate by set-way","D-cache clean by MVA to PoC","D-cache clean by MVA to PoU","D-cache clean by set-way","D-cache invalidate by MVA to PoC","D-cache invalidate by set-way","","","","","","","","","","","","","","","","Disable the exception","Disables counter","Disables the cycle counter","Disables D-cache if currently enabled.","Disables I-cache if currently enabled.","Disables SysTick interrupt","Disables TRACE. See <code>DCB::enable_trace()</code> for more details","Data Watchpoint and Trace unit","Enable the exception","Enables counter","Enables the cycle counter","Enables D-cache if currently disabled.","Enables I-cache if currently disabled.","Enables SysTick interrupt","Enables TRACE. This is for example required by the …","Get the total cycles spent in exception processing","Get the folded instruction count","Flash Patch and Breakpoint unit","Floating Point Unit","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Gets clock source","Gets current value","Returns the current clock cycle count","Returns the NVIC priority of <code>interrupt</code>","Returns the hardware priority of <code>system_handler</code>","Gets reload value","Returns the reload value with which the counter would wrap …","Returns <code>true</code> if the implementation supports a cycle counter","Returns <code>true</code> if the the implementation supports sampling …","Returns <code>true</code> if the implementation includes external match …","Returns <code>true</code> if the implementation the profiling counters","Checks if an external reference clock is available","Checks if the counter wrapped (underflowed) since the last …","Returns whether the I-cache is currently enabled.","Implementation Control Block","I-cache invalidate all to PoU","I-cache invalidate by MVA to PoU","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Invalidates D-cache by address.","Invalidates an object from the D-cache.","Invalidates a slice from the D-cache.","Invalidates the entire I-cache.","Is <code>interrupt</code> active or pre-empted and stacked","Checks if counter is enabled","Is there a debugger attached? (see note)","Checks if <code>interrupt</code> is enabled","Check if an exception is enabled","Checks if SysTick interrupt is enabled","Checks if <code>interrupt</code> is pending","Check if PENDSTSET bit in the ICSR register is set meaning …","Check if PENDSVSET bit in the ICSR register is set meaning …","Checks if the calibration value is precise","Instrumentation Trace Macrocell","Get the additional cycles required to execute all load or …","Disables <code>interrupt</code>","Memory Protection Unit","Number of comparators implemented","Nested Vector Interrupt Controller","Forces <code>interrupt</code> into pending state","Returns a pointer to the register block","Returns a pointer to the register block","Returns a pointer to the register block","Returns a pointer to the register block","Returns a pointer to the register block","Returns a pointer to the register block","Returns a pointer to the register block","Returns a pointer to the register block","Returns a pointer to the register block","Returns a pointer to the register block","Returns a pointer to the register block","Returns a pointer to the register block","Returns a pointer to the register block","Request an IRQ in software","System Control Block","Selects the current CCSIDR","Sets clock source","Set the CPI count","Set the cycle count","Set the exception count","Set the folded instruction count","Set the lsu count","Set the PENDSTSET bit in the ICSR register which will pend …","Set the PENDSVSET bit in the ICSR register which will pend …","Sets the “priority” of <code>interrupt</code> to <code>prio</code>","Sets the hardware priority of <code>system_handler</code> to <code>prio</code>","Sets reload value","Set the sleep count","Set the SLEEPDEEP bit in the SCR register","Set the SLEEPONEXIT bit in the SCR register","Get the total number of cycles that the processor is …","Unchecked version of <code>Peripherals::take</code>","Initiate a system reset request to reset the MCU","SysTick: System Timer","Returns all the core peripherals <em>once</em>","Trace Port Interface Unit;","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Removes the software lock on the DWT","Enables <code>interrupt</code>","Clears <code>interrupt</code>’s pending state","Returns the active exception number","Register block","","","Branch predictor invalidate all","D-cache clean and invalidate by MVA to PoC","D-cache clean and invalidate by set-way","D-cache clean by MVA to PoC","D-cache clean by MVA to PoU","D-cache clean by set-way","D-cache invalidate by MVA to PoC","D-cache invalidate by set-way","Returns the argument unchanged.","I-cache invalidate all to PoU","I-cache invalidate by MVA to PoU","Calls <code>U::from(self)</code>.","","","","Type of cache to select on CSSELR writes.","Select DCache or unified cache","Select ICache","Register block","Auxiliary Feature (not present on Cortex-M0 variants)","CPUID base","","","","","Cache Size ID (only present on Cortex-M7)","Cache Level ID (only present on Cortex-M7)","","Cache Size Selection (only present on Cortex-M7)","Cache Type (only present on Cortex-M7)","Debug Feature (not present on Cortex-M0 variants)","","","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Instruction Set Attribute (not present on Cortex-M0 …","Memory Model Feature (not present on Cortex-M0 variants)","Processor Feature (not present on Cortex-M0 variants)","","","","","","","Register block","","","Debug Core Register Data","Debug Core Register Selector","Debug Exception and Monitor Control","Debug Halting Control and Status","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","Comparator","Register block","","","","","Comparators","Comparator","CPI Count","Control","Cycle Count","Exception Overhead Count","Folded-instruction Count","Returns the argument unchanged.","Returns the argument unchanged.","Comparator Function","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Lock Access","Lock Status","LSU Count","Comparator Mask","Program Counter Sample","Sleep Count","","","","","","","Register block","","","Comparator","Control","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Lock Access","Lock Status","Remap","","","","Register block","","","Floating Point Context Address","Floating Point Context Control","Floating Point Default Status Control","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Media and FP Feature","","","","Register block","Auxiliary Control Register","","","Returns the argument unchanged.","Interrupt Controller Type Register","Calls <code>U::from(self)</code>.","","","","Register block","Stimulus Port","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Returns <code>true</code> if the stimulus port is ready to accept more …","Lock Access","Lock Status","Stimulus Port","Trace Control","Trace Enable","Trace Privilege","","","","","","","Writes an <code>u16</code> payload into the stimulus port","Writes an <code>u32</code> payload into the stimulus port","Writes an <code>u8</code> payload into the stimulus port","Register block for ARMv7-M","Type","","","Control","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Region Attribute and Size","Alias 1 of RASR","Alias 2 of RASR","Alias 3 of RASR","Region Base Address","Alias 1 of RBAR","Alias 2 of RBAR","Alias 3 of RBAR","Region Number","","","","Register block","","","Returns the argument unchanged.","Interrupt Active Bit (not present on Cortex-M0 variants)","Interrupt Clear-Enable","Interrupt Clear-Pending","Calls <code>U::from(self)</code>.","Interrupt Priority","Interrupt Set-Enable","Interrupt Set-Pending","Software Trigger Interrupt","","","","Bus fault interrupt (not present on Cortex-M0 variants)","Bus fault interrupt (not present on Cortex-M0 variants)","Debug monitor interrupt (not present on Cortex-M0 variants)","Debug monitor interrupt (not present on Cortex-M0 variants)","Processor core exceptions (internal interrupts)","Processor core exception (internal interrupts)","Hard fault interrupt","Device specific exception (external interrupts)","Memory management interrupt (not present on Cortex-M0 …","Memory management interrupt (not present on Cortex-M0 …","Non maskable interrupt","Pend SV interrupt","Pend SV interrupt","Register block","SV call interrupt","SV call interrupt","Secure fault interrupt (only on ARMv8-M)","Secure fault interrupt (only on ARMv8-M)","System Tick interrupt","System Tick interrupt","System handlers, exceptions with configurable priority","Thread mode","Usage fault interrupt (not present on Cortex-M0 variants)","Usage fault interrupt (not present on Cortex-M0 variants)","Active exception number","Auxiliary Fault Status (not present on Cortex-M0 variants)","Application Interrupt and Reset Control","BusFault Address (not present on Cortex-M0 variants)","","","","","","","","","Configuration and Control","Configurable Fault Status (not present on Cortex-M0 …","","","","Coprocessor Access Control (not present on Cortex-M0 …","Debug Fault Status (not present on Cortex-M0 variants)","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Converts a <code>byte</code> into <code>VectActive</code>","Returns the argument unchanged.","Returns the argument unchanged.","HardFault Status (not present on Cortex-M0 variants)","Interrupt Control and State","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Returns the IRQ number of this <code>Exception</code>","MemManage Fault Address (not present on Cortex-M0 variants)","System Control","System Handler Control and State","System Handler Priority (word accessible only on Cortex-M0 …","","","","","","","","","","","","","Vector Table Offset (not present on Cortex-M0 variants)","Interrupt number. This number is always within half open …","Core-provided clock","External reference clock","Register block","SysTick clock source","","","","","Calibration Value","","Control and Status","Current Value","","","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Reload Value","","","","","","","Register block","TPIU Type","Asynchronous Clock Prescaler","","","Current Parallel Port Size","Formatter and Flush Control","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Lock Access","Lock Status","Selected Pin Control","Supported Parallel Port Sizes","","","","Type for the <code>duty</code> methods","Error type","Error type","Error type","The type of error that can occur when writing","Error type","Error type","Read error","Write error","An enumeration of SPI errors","The unit of time used by this timer","A single PWM channel / pin","Millisecond delay","Microsecond delay","Blocking read","Blocking write","Blocking write + read","Write half of a serial interface (blocking variant)","Blocking transfer","Blocking write","Single digital push-pull output pin","Read half of a serial interface","Write half of a serial interface","Full duplex (master mode)","A count down timer","Block until the serial interface has sent all buffered …","Writes a slice, blocking until everything has been written","Pauses execution for <code>ms</code> milliseconds","Pauses execution for <code>us</code> microseconds","Disables a PWM <code>channel</code>","Enables a PWM <code>channel</code>","Ensures that none of the previously written words are …","Returns the current duty cycle","Returns the maximum duty cycle value","Reads enough bytes from slave with <code>address</code> to fill <code>buffer</code>","Reads a single word from the serial interface","Reads the word stored in the shift register","Sends a word to the slave","Sets a new duty cycle","Drives the pin high","Drives the pin low","Starts a new count down","Sends <code>words</code> to the slave. Returns the <code>words</code> received from …","Non-blockingly “waits” until the count down finishes","Writes bytes to slave with address <code>address</code>","Sends <code>words</code> to the slave, ignoring all the incoming words","Writes a single word to the serial interface","Writes bytes to slave with address <code>address</code> and then reads …","","Base Priority Mask Register","Base Priority Mask Register (conditional write)","Control register","Fault Mask Register","Main Stack Pointer","Priority mask register","Process Stack Pointer","Reads the CPU register","Writes to the CPU register","Writes to BASEPRI <em>if</em>","Floating-point context active.","Control register","Whether context floating-point is currently active","MSP is the current stack pointer","No floating-point context active","Thread mode privilege level","Privileged","PSP is the current stack pointer","Currently active stack pointer","Unprivileged","Returns the contents of the register as raw bits","","","","","","","","","","","","","","","","","","","","Whether context floating-point is currently active","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Creates a <code>Control</code> value from raw bits.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Is a floating-point context active?","Is MSP the current stack pointer?","Is a floating-point context not active?","Is in privileged thread mode?","Is PSP the current stack pointer?","Is in unprivileged thread mode?","Thread mode privilege level","Reads the CPU register","Sets the FPCA value.","Sets the thread mode privilege level value (nPRIV).","Sets the SPSEL value.","Currently active stack pointer","","","","","","","","","","","","","Writes to the CPU register.","Active","All exceptions are …","Inactive, expect for NMI","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","All exceptions are active","All exceptions, except for NMI, are inactive","Reads the CPU register","","","","Reads the CPU register","Writes <code>bits</code> to the CPU register","Active","Inactive","All exceptions with configurable priority are …","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","All exceptions with configurable priority are active","All exceptions with configurable priority are inactive","Reads the CPU register","","","","Reads the CPU register","Writes <code>bits</code> to the CPU register"],"i":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,0,0,0,0,12,11,11,12,11,0,0,0,12,11,12,11,12,11,66,34,12,11,12,11,12,11,0,15,15,15,15,15,15,15,0,0,0,0,0,49,0,49,0,49,0,49,0,49,0,49,0,49,0,49,0,49,0,49,18,19,24,25,26,27,28,29,30,31,21,7,32,0,0,49,0,49,0,49,0,49,49,18,19,24,25,26,27,28,29,30,31,67,21,7,32,49,18,19,24,25,26,27,28,29,30,31,67,21,7,32,18,19,19,19,0,21,21,21,21,21,21,7,21,21,21,21,25,0,25,25,21,0,18,18,18,18,18,18,18,18,19,24,25,26,27,28,29,30,31,21,7,32,28,29,21,7,25,21,21,7,24,0,21,7,25,21,21,7,24,25,25,0,0,49,18,19,24,25,26,27,28,29,30,31,67,21,7,32,7,7,25,31,21,7,7,25,25,25,25,7,7,21,0,18,18,49,18,19,24,25,26,27,28,29,30,31,67,21,7,32,21,21,21,21,31,7,24,31,21,7,31,21,21,7,0,25,31,0,25,0,31,18,19,24,25,26,27,28,29,30,31,21,7,32,31,0,19,7,25,25,25,25,25,21,21,31,21,7,25,21,21,25,49,21,0,49,0,49,18,19,24,25,26,27,28,29,30,31,67,21,7,32,49,18,19,24,25,26,27,28,29,30,31,67,21,7,32,49,18,19,24,25,26,27,28,29,30,31,67,21,7,32,25,31,31,21,0,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,0,20,20,0,37,37,37,20,37,20,37,37,20,37,37,37,20,20,37,20,37,20,37,37,37,37,20,37,20,37,20,0,38,38,38,38,38,38,38,38,38,38,38,0,0,39,68,39,68,39,68,39,39,39,39,39,39,68,68,39,68,39,39,39,68,39,39,39,68,39,68,39,68,0,40,40,40,40,40,40,40,40,40,40,40,40,0,41,41,41,41,41,41,41,41,41,41,41,0,42,42,42,42,42,42,42,42,42,0,0,43,14,43,14,43,14,43,14,14,43,43,43,43,43,43,43,14,43,14,43,14,14,14,14,0,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,0,45,45,45,45,45,45,45,45,45,45,45,45,45,45,33,35,33,35,0,51,33,51,33,35,33,33,35,0,33,35,33,35,33,35,0,51,33,35,0,46,46,46,46,33,51,35,46,33,51,35,46,46,33,51,35,46,46,33,51,35,33,51,35,46,33,51,51,35,46,46,46,33,51,35,33,46,46,46,46,46,33,51,35,46,33,51,35,46,33,51,35,46,69,10,10,0,0,47,10,47,10,47,10,47,47,10,10,47,10,47,10,47,47,10,47,10,47,10,0,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,70,71,72,73,74,75,76,77,58,78,79,0,0,0,0,0,0,0,0,0,0,0,0,0,0,74,74,80,81,70,70,58,70,70,71,77,78,78,70,82,82,79,75,79,72,76,58,73,58,0,0,0,0,0,0,0,0,0,0,63,0,0,62,63,0,61,62,0,61,60,60,61,62,63,60,61,62,63,60,61,62,63,61,62,63,60,61,62,63,60,60,61,62,63,60,60,61,62,63,63,62,63,61,62,61,60,0,60,60,60,60,60,61,62,63,60,61,62,63,60,61,62,63,0,64,0,64,64,64,64,64,64,64,64,64,64,0,64,64,64,0,0,65,65,0,65,65,65,65,65,65,65,65,65,0,65,65,65,0,0],"f":[0,0,0,0,0,0,0,0,0,0,0,[[]],[1,2],[[1,1],2],[1],[[]],[[]],[[]],[[]],[[1,1],1],[[]],[[],2],[[]],[[]],0,[[]],[[]],[[3,4]],[[3,1]],[[3,1]],[[3,5]],[[3,6]],[[3,1]],[[3,1]],[[3,6]],[[3,5]],[[3,4]],[3,7],[[]],[[]],[[7,1],3],[[],8],[[],8],[[],9],[[7,1,10],3],0,0,0,0,[[]],[[]],[[11,12]],[[]],[[]],[[]],[[]],[13],[[]],[[]],[[]],[[]],[[],12],[[],11],[[],5],[[],4],[[],8],[[],8],[[],8],[[],8],[[],9],[[],9],0,[[]],[[]],[[]],[[]],[[],8],[[],8],[[],9],[[14,15]],[14],[[14,16]],[[14,17]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[18],[[],1],[[],1],[[19,5,20]],0,[[21,19]],[[21,22,22]],[21],[21],[[21,19]],[[21,22,22]],[7],[[]],[[]],[21],[21],[[],5],0,[[],1],[[],23],[[],23],0,[[18,1]],[[18,4,4]],[[18,1]],[[18,1]],[[18,4,4]],[[18,1]],[[18,4,4]],[18],[19],[24],[25],[26],[27],[28],[29],[30],[31],[21],[7],[32],[28],[29],[[21,33]],[7],[25],[[21,19]],[21],[7],[24],0,[[21,33]],[7],[25],[[21,19]],[21],[7],[24],[[],5],[[],5],0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[7,10],[[],1],[[],1],[34,5],[35,5],[[],1],[[],1],[[],23],[[],23],[[],23],[[],23],[[],23],[7,23],[[],23],0,[18],[[18,1]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[21,22,22]],[21],[21],[21],[34,23],[7,23],[[],23],[34,23],[[21,33],23],[7,23],[34,23],[[],23],[[],23],[[],23],0,[[],5],[34],0,[[],5],0,[34],[[],36],[[],37],[[],38],[[],39],[[],40],[[],41],[[],42],[[],43],[[],44],[[],45],[[],46],[[],47],[[],48],[[31,34]],0,[[19,5,20]],[[7,10]],[[25,5]],[[25,1]],[[25,5]],[[25,5]],[[25,5]],[[]],[[]],[[31,34,5]],[[21,35,5]],[[7,1]],[[25,5]],[21],[21],[[],5],[[],49],[[],2],0,[[],[[50,[49]]]],0,[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[]],[34],[34],[[],51],0,[[]],[[]],0,0,0,0,0,0,0,0,[[]],0,0,[[]],[[],8],[[],8],[[],9],0,0,0,0,0,0,[[]],[[]],[[]],[[]],0,0,[20,20],0,0,0,[[20,20],23],[[20,52],53],[[]],[[]],[[]],[[]],0,0,0,[[],8],[[],8],[[],8],[[],8],[[],9],[[],9],0,[[]],[[]],0,0,0,0,[[]],[[]],[[],8],[[],8],[[],9],0,0,[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,[[]],[[]],0,[[]],[[]],0,0,0,0,0,0,[[],8],[[],8],[[],8],[[],8],[[],9],[[],9],0,[[]],[[]],0,0,[[]],[[]],0,0,0,[[],8],[[],8],[[],9],0,[[]],[[]],0,0,0,[[]],[[]],0,[[],8],[[],8],[[],9],0,0,[[]],[[]],[[]],0,[[]],[[],8],[[],8],[[],9],0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[14,23],0,0,0,0,0,0,[[],8],[[],8],[[],8],[[],8],[[],9],[[],9],[[14,4]],[[14,1]],[[14,5]],0,0,[[]],[[]],0,[[]],[[]],0,0,0,0,0,0,0,0,0,[[],8],[[],8],[[],9],0,[[]],[[]],[[]],0,0,0,[[]],0,0,0,0,[[],8],[[],8],[[],9],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,[33,33],[51,51],[35,35],0,0,[[33,33],23],[[51,51],23],[[35,35],23],[[33,52],53],[[51,52],53],[[35,52],53],[[]],[[]],[5,[[50,[51]]]],[[]],[[]],0,0,[[]],[[]],[[]],[[]],[33,54],0,0,0,0,[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],9],[[],9],[[],9],[[],9],0,0,0,0,0,0,[[]],[[]],[[]],[[]],0,[10,10],0,0,[[10,10],23],[[10,52],53],[[]],[[]],[[]],[[]],0,[[],8],[[],8],[[],8],[[],8],[[],9],[[],9],0,0,0,[[]],[[]],0,0,[[]],[[]],0,0,0,0,[[],8],[[],8],[[],9],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],8],[[],8],[[]],[[]],[[]],[[]],[[],[[8,[55]]]],[[]],[[]],[[],8],[[],[[8,[55]]]],[[],[[8,[55]]]],[[],[[8,[55]]]],[[]],[[]],[[]],[56],[[],8],[[],[[8,[[55,[57]]]]]],[[],8],[[],8],[[],[[8,[55]]]],[[],8],[[58,17],[[8,[59]]]],0,0,0,0,0,0,0,[[],5],[5],[5],0,0,0,0,0,0,0,0,0,0,[60,1],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[60,60],[61,61],[62,62],[63,63],[[61,61],23],[[62,62],23],[[63,63],23],[[60,52],53],[[61,52],53],[[62,52],53],[[63,52],53],[60,63],[[]],[[]],[[]],[[]],[1,60],[[]],[[]],[[]],[[]],[63,23],[62,23],[63,23],[61,23],[62,23],[61,23],[60,61],[[],60],[[60,63]],[[60,61]],[[60,62]],[60,62],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],9],[[],9],[[],9],[[],9],[60],0,0,0,[[]],[[]],[64,64],[[64,64],23],[[64,52],53],[[]],[[]],[64,23],[64,23],[[],64],[[],8],[[],8],[[],9],[[],1],[1],0,0,0,[[]],[[]],[65,65],[[65,65],23],[[65,52],53],[[]],[[]],[65,23],[65,23],[[],65],[[],8],[[],8],[[],9],[[],1],[1]],"c":[235,286,287,288,289,290,291,292,293,294,295,296,297,298,697,716,717,818],"p":[[15,"u32"],[15,"never"],[3,"Delay"],[15,"u16"],[15,"u8"],[15,"i32"],[3,"SYST"],[4,"Result"],[3,"TypeId"],[4,"SystClkSource"],[3,"Mutex"],[3,"CriticalSection"],[8,"FnOnce"],[3,"Stim"],[3,"Aligned"],[3,"Arguments"],[15,"str"],[3,"CBP"],[3,"CPUID"],[4,"CsselrCacheType"],[3,"SCB"],[15,"usize"],[15,"bool"],[3,"DCB"],[3,"DWT"],[3,"FPB"],[3,"FPU"],[3,"ICB"],[3,"ITM"],[3,"MPU"],[3,"NVIC"],[3,"TPIU"],[4,"Exception"],[8,"InterruptNumber"],[4,"SystemHandler"],[3,"RegisterBlock"],[3,"RegisterBlock"],[3,"RegisterBlock"],[3,"RegisterBlock"],[3,"RegisterBlock"],[3,"RegisterBlock"],[3,"RegisterBlock"],[3,"RegisterBlock"],[3,"RegisterBlock"],[3,"RegisterBlock"],[3,"RegisterBlock"],[3,"RegisterBlock"],[3,"RegisterBlock"],[3,"Peripherals"],[4,"Option"],[4,"VectActive"],[3,"Formatter"],[6,"Result"],[15,"i8"],[4,"Error"],[8,"Into"],[4,"Void"],[8,"_embedded_hal_serial_Write"],[3,"Error"],[3,"Control"],[4,"Npriv"],[4,"Spsel"],[4,"Fpca"],[4,"Faultmask"],[4,"Primask"],[8,"Nr"],[3,"SAU"],[3,"Comparator"],[13,"Interrupt"],[8,"_embedded_hal_PwmPin"],[8,"_embedded_hal_blocking_i2c_Read"],[8,"_embedded_hal_blocking_i2c_Write"],[8,"_embedded_hal_blocking_i2c_WriteRead"],[8,"_embedded_hal_blocking_serial_Write"],[8,"_embedded_hal_blocking_spi_Transfer"],[8,"_embedded_hal_blocking_spi_Write"],[8,"_embedded_hal_serial_Read"],[8,"_embedded_hal_spi_FullDuplex"],[8,"_embedded_hal_timer_CountDown"],[8,"_embedded_hal_blocking_delay_DelayMs"],[8,"_embedded_hal_blocking_delay_DelayUs"],[8,"_embedded_hal_digital_OutputPin"]]},\
"embedded_hal":{"doc":"A Hardware Abstraction Layer (HAL) for embedded systems","t":"QIAAAAKKAKKAAKAAAAAAAAAIQQKKIIKKIQQQQQQQEINGGIIINIIILLLKKLLLKLLLKKKKQIKKAIQQQEIININLLLKLLLAKLLLAKIINNNIENDNIESSNNNDNSSLLLLLLLLLLLLLLLKKLLLLLLLLLLLLLLLLKLLLLLKKLKLAKLLKLLLLLLLLLLLLLLLLIQQKKAAAAIKKDLLLLLLLLLLLLLQNNIELLLLLLLLLKKLLLLCCCCCCCCCCCCCCQQIIKKKLNNQINNRRRRDEELLLLLLLLLLLLLLLLLLMMKKLLLLLLLLLIIQIQKKK","n":["Duty","PwmPin","adc","blocking","can","digital","disable","enable","fmt","get_duty","get_max_duty","prelude","serial","set_duty","spi","timer","watchdog","can","delay","i2c","rng","serial","spi","Can","Error","Frame","receive","transmit","DelayMs","DelayUs","delay_ms","delay_us","AddressMode","Error","Error","Error","Error","Error","Error","Error","Operation","Read","Read","SevenBitAddress","TenBitAddress","Transactional","TransactionalIter","Write","Write","WriteIter","WriteIterRead","WriteRead","borrow","borrow_mut","eq","exec","exec_iter","fmt","from","into","read","try_from","try_into","type_id","write","write","write_iter_read","write_read","Error","Write","bflush","bwrite_all","write","Default","Error","Error","Error","Operation","Transactional","Transfer","Transfer","Write","Write","borrow","borrow_mut","eq","exec","fmt","from","into","transfer","transfer","try_from","try_into","type_id","write","write","Default","Default","Acknowledge","Bit","Crc","Error","ErrorKind","Extended","ExtendedId","Form","Frame","Id","MAX","MAX","Other","Overrun","Standard","StandardId","Stuff","ZERO","ZERO","as_raw","as_raw","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","cmp","data","dlc","eq","eq","eq","eq","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","hash","id","into","into","into","into","is_data_frame","is_extended","is_remote_frame","is_standard","kind","kind","nb","new","new","new","new_remote","new_unchecked","new_unchecked","partial_cmp","standard_id","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","Can","Error","Frame","receive","transmit","v1","v1_compat","v2","v2_compat","OutputPin","set_high","set_low","OldOutputPin","borrow","borrow_mut","from","from","into","new","set_high","set_high","set_low","set_low","try_from","try_into","type_id","Error","High","Low","OutputPin","PinState","borrow","borrow_mut","clone","eq","fmt","from","from","into","not","set_high","set_low","set_state","try_from","try_into","type_id","_embedded_hal_PwmPin","_embedded_hal_blocking_delay_DelayMs","_embedded_hal_blocking_delay_DelayUs","_embedded_hal_blocking_i2c_Read","_embedded_hal_blocking_i2c_Write","_embedded_hal_blocking_i2c_WriteRead","_embedded_hal_blocking_serial_Write","_embedded_hal_blocking_spi_Transfer","_embedded_hal_blocking_spi_Write","_embedded_hal_digital_OutputPin","_embedded_hal_serial_Read","_embedded_hal_serial_Write","_embedded_hal_spi_FullDuplex","_embedded_hal_timer_CountDown","Error","Error","Read","Write","flush","read","write","write_str","CaptureOnFirstTransition","CaptureOnSecondTransition","Error","FullDuplex","IdleHigh","IdleLow","MODE_0","MODE_1","MODE_2","MODE_3","Mode","Phase","Polarity","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","eq","eq","eq","from","from","from","into","into","into","phase","polarity","read","send","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","Cancel","CountDown","Error","Periodic","Time","cancel","start","wait"],"q":[[0,"embedded_hal"],[17,"embedded_hal::blocking"],[23,"embedded_hal::blocking::can"],[28,"embedded_hal::blocking::delay"],[32,"embedded_hal::blocking::i2c"],[68,"embedded_hal::blocking::serial"],[73,"embedded_hal::blocking::serial::write"],[74,"embedded_hal::blocking::spi"],[97,"embedded_hal::blocking::spi::transfer"],[98,"embedded_hal::blocking::spi::write"],[99,"embedded_hal::can"],[183,"embedded_hal::can::nb"],[188,"embedded_hal::digital"],[192,"embedded_hal::digital::v1"],[195,"embedded_hal::digital::v1_compat"],[209,"embedded_hal::digital::v2"],[229,"embedded_hal::prelude"],[243,"embedded_hal::serial"],[251,"embedded_hal::spi"],[295,"embedded_hal::timer"]],"d":["Type for the <code>duty</code> methods","A single PWM channel / pin","Analog-digital conversion traits","Blocking API","Controller Area Network","Digital I/O","Disables a PWM <code>channel</code>","Enables a PWM <code>channel</code>","Implementation of <code>core::fmt::Write</code> for the HAL’s …","Returns the current duty cycle","Returns the maximum duty cycle value","The prelude is a collection of all the traits in this crate","Serial interface","Sets a new duty cycle","Serial Peripheral Interface","Timers","Traits for interactions with a processors watchdog timer.","Blocking CAN API","Delays","Blocking I2C API","Blocking hardware random number generator","Blocking serial API","Blocking SPI API","A blocking CAN interface that is able to transmit and …","Associated error type.","Associated frame type.","Blocks until a frame was received or an error occured.","Puts a frame in the transmit buffer. Blocks until space is …","Millisecond delay","Microsecond delay","Pauses execution for <code>ms</code> milliseconds","Pauses execution for <code>us</code> microseconds","Address mode (7-bit / 10-bit)","Error type","Error type","Error type","Error type","Error type","Error type","Error type","Transactional I2C operation.","Blocking read","Read data into the provided buffer","7-bit address mode type","10-bit address mode type","Transactional I2C interface.","Transactional I2C interface (iterator version).","Blocking write","Write data from the provided buffer","Blocking write (iterator version)","Blocking write (iterator version) + read","Blocking write + read","","","","Execute the provided operations on the I2C bus.","Execute the provided operations on the I2C bus (iterator …","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Reads enough bytes from slave with <code>address</code> to fill <code>buffer</code>","","","","Writes bytes to slave with address <code>address</code>","Writes bytes to slave with address <code>address</code>","Writes bytes to slave with address <code>address</code> and then reads …","Writes bytes to slave with address <code>address</code> and then reads …","The type of error that can occur when writing","Write half of a serial interface (blocking variant)","Block until the serial interface has sent all buffered …","Writes a slice, blocking until everything has been written","Blocking serial write","Marker trait to opt into default blocking write …","Error type","Error type","Associated error type","Operation for transactional SPI trait","Transactional trait allows multiple actions to be executed …","Blocking transfer","Write data out while reading data into the provided buffer","Blocking write","Write data from the provided buffer, discarding read data","","","","Execute the provided transactions","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Blocking transfer","Sends <code>words</code> to the slave. Returns the <code>words</code> received from …","","","","Blocking write","Sends <code>words</code> to the slave, ignoring all the incoming words","Default implementation of <code>blocking::spi::Transfer&lt;W&gt;</code> for …","Default implementation of <code>blocking::spi::Write&lt;W&gt;</code> for …","An ACK  error shall be detected by a transmitter whenever …","A bit error is detected at that bit time when the bit …","Calculated CRC sequence does not equal the received one.","CAN error","CAN error kind","Extended 29-bit Identifier (<code>0..=0x1FFF_FFFF</code>).","Extended 29-bit CAN Identifier (<code>0..=1FFF_FFFF</code>).","A form error shall be detected when a fixed-form bit field …","A CAN2.0 Frame","A CAN Identifier (standard or extended).","CAN ID <code>0x7FF</code>, the lowest priority.","CAN ID <code>0x1FFFFFFF</code>, the lowest priority.","A different error occurred. The original error may contain …","The peripheral receive buffer was overrun.","Standard 11-bit Identifier (<code>0..=0x7FF</code>).","Standard 11-bit CAN Identifier (<code>0..=0x7FF</code>).","A stuff error is detected at the bit time of the sixth …","CAN ID <code>0</code>, the highest priority.","CAN ID <code>0</code>, the highest priority.","Returns this CAN Identifier as a raw 16-bit integer.","Returns this CAN Identifier as a raw 32-bit integer.","","","","","","","","","","","","","","Returns the frame data (0..8 bytes in length).","Returns the data length code (DLC) which is in the range …","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the frame identifier.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Returns true if this frame is a data frame.","Returns true if this frame is a extended frame.","Returns true if this frame is a remote frame.","Returns true if this frame is a standard frame.","Convert error to a generic CAN error kind","","Non-blocking CAN API","Creates a new frame.","Tries to create a <code>StandardId</code> from a raw 16-bit integer.","Tries to create a <code>ExtendedId</code> from a raw 32-bit integer.","Creates a new remote frame (RTR bit set).","Creates a new <code>StandardId</code> without checking if it is inside …","Creates a new <code>ExtendedId</code> without checking if it is inside …","","Returns the Base ID part of this extended identifier.","","","","","","","","","","","","","A CAN interface that is able to transmit and receive …","Associated error type.","Associated frame type.","Returns a received frame if available.","Puts a frame in the transmit buffer to be sent on the bus.","Digital I/O","v1 compatibility wrappers","Digital I/O","v2 compatibility shims","Single digital push-pull output pin","Drives the pin high","Drives the pin low","Wrapper to allow fallible <code>v2::OutputPin</code> traits to be …","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","Create a new OldOutputPin wrapper around a <code>v2::OutputPin</code>","","","","","","","","Error type","High pin state","Low pin state","Single digital push-pull output pin","Digital output pin state","","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","Drives the pin high","Drives the pin low","Drives the pin high or low depending on the provided value","","","","","","","","","","","","","","","","","","Read error","Write error","Read half of a serial interface","Write half of a serial interface","Ensures that none of the previously written words are …","Reads a single word from the serial interface","Writes a single word to the serial interface","","Data in “captured” on the first clock transition","Data in “captured” on the second clock transition","An enumeration of SPI errors","Full duplex (master mode)","Clock signal high when idle","Clock signal low when idle","Helper for CPOL = 0, CPHA = 0","Helper for CPOL = 0, CPHA = 1","Helper for CPOL = 1, CPHA = 0","Helper for CPOL = 1, CPHA = 1","SPI mode","Clock phase","Clock polarity","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Clock phase","Clock polarity","Reads the word stored in the shift register","Sends a word to the slave","","","","","","","","","","Trait for cancelable countdowns.","A count down timer","Error returned when a countdown can’t be canceled.","Marker trait that indicates that a timer is periodic","The unit of time used by this timer","Tries to cancel this countdown.","Starts a new count down","Non-blockingly “waits” until the count down finishes"],"i":[32,0,0,0,0,0,32,32,0,32,32,0,0,32,0,0,0,0,0,0,0,0,0,0,33,33,33,33,0,0,34,35,0,36,37,38,39,40,41,42,0,0,2,0,0,0,0,0,2,0,0,0,2,2,2,41,42,2,2,2,36,2,2,2,37,38,40,39,43,0,43,43,0,0,44,45,46,0,0,0,9,0,9,9,9,9,46,9,9,9,0,44,9,9,9,0,45,0,0,16,16,16,0,0,15,0,16,0,0,11,13,16,16,15,0,16,11,13,11,13,11,13,15,16,11,13,15,16,11,13,15,16,16,47,47,11,13,15,16,11,13,15,16,16,11,13,15,15,15,16,16,47,11,13,15,16,47,47,47,47,48,16,0,47,11,13,47,11,13,16,13,11,13,15,16,11,13,15,16,11,13,15,16,0,49,49,49,49,0,0,0,0,0,50,50,0,24,24,24,24,24,24,24,24,24,24,24,24,24,23,25,25,0,0,25,25,25,25,25,25,25,25,25,23,23,23,25,25,25,0,0,0,0,0,0,0,0,0,0,0,0,0,0,51,26,0,0,26,51,26,26,29,29,52,0,28,28,0,0,0,0,0,0,0,28,29,30,28,29,30,28,29,30,28,29,30,28,29,30,28,29,30,30,30,52,52,28,29,30,28,29,30,28,29,30,0,0,53,0,54,53,54,54],"f":[0,0,0,0,0,0,[[]],[[]],0,[[]],[[]],0,0,[[]],0,0,0,0,0,0,0,0,0,0,0,0,[[],1],[[],1],0,0,[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[2,2],3],[[],1],[4,1],[[2,5],6],[[]],[[]],[[],1],[[],1],[[],1],[[],7],[[],1],[4,1],[4,1],[[],1],0,0,[[],1],[[],1],0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[[9,[8]],[9,[8]]],3],[[],1],[[[9,[10]],5],6],[[]],[[]],0,[[],1],[[],1],[[],1],[[],7],0,[[],1],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[11,12],[13,14],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[11,11],[13,13],[15,15],[16,16],[[16,16],17],[[]],[[],18],[[11,11],3],[[13,13],3],[[15,15],3],[[16,16],3],[[11,5],6],[[13,5],6],[[15,5],6],[[16,5],6],[[16,5],6],[[]],[[]],[11,15],[13,15],[[]],[[]],[[16,19]],[[],15],[[]],[[]],[[]],[[]],[[],3],[[],3],[[],3],[[],3],[[],16],[16,16],0,[[[20,[15]]],21],[12,[[21,[11]]]],[14,[[21,[13]]]],[[[20,[15]],18],21],[12,11],[14,13],[[16,16],[[21,[17]]]],[13,11],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],7],[[],7],[[],7],[[],7],0,0,0,[[],22],[[],[[22,[21]]]],0,0,0,0,0,[[]],[[]],0,[[]],[[]],[[]],[23,[[24,[23]]]],[[]],[23,[[24,[23]]]],[[],1],[[[24,[23]]]],[[[24,[23]]]],[[],1],[[],1],[[],1],[[],7],0,0,0,0,0,[[]],[[]],[25,25],[[25,25],3],[[25,5],6],[3,25],[[]],[[]],[25],[[],1],[[],1],[25,1],[[],1],[[],1],[[],7],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],22],[[],22],[[],22],[[26,27],6],0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[28,28],[29,29],[30,30],[[28,28],3],[[29,29],3],[[30,30],3],[[]],[[]],[[]],[[]],[[]],[[]],0,0,[[],22],[[],22],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],7],[[],7],[[],7],0,0,0,0,0,[[],1],[20],[[],[[22,[31]]]]],"c":[188,192,193,194],"p":[[4,"Result"],[4,"Operation"],[15,"bool"],[8,"IntoIterator"],[3,"Formatter"],[6,"Result"],[3,"TypeId"],[8,"PartialEq"],[4,"Operation"],[8,"Debug"],[3,"StandardId"],[15,"u16"],[3,"ExtendedId"],[15,"u32"],[4,"Id"],[4,"ErrorKind"],[4,"Ordering"],[15,"usize"],[8,"Hasher"],[8,"Into"],[4,"Option"],[6,"Result"],[8,"OutputPin"],[3,"OldOutputPin"],[4,"PinState"],[8,"Write"],[15,"str"],[4,"Polarity"],[4,"Phase"],[3,"Mode"],[4,"Void"],[8,"PwmPin"],[8,"Can"],[8,"DelayMs"],[8,"DelayUs"],[8,"Read"],[8,"Write"],[8,"WriteIter"],[8,"WriteRead"],[8,"WriteIterRead"],[8,"Transactional"],[8,"TransactionalIter"],[8,"Write"],[8,"Transfer"],[8,"Write"],[8,"Transactional"],[8,"Frame"],[8,"Error"],[8,"Can"],[8,"OutputPin"],[8,"Read"],[8,"FullDuplex"],[8,"Cancel"],[8,"CountDown"]]},\
"rp_pac":{"doc":"rp-pac","t":"RNRRNRNNRNRNRNNRERRRNNRNNRRRRNRRRNRNNRNRNRRRRNNNNRNRNRNRRRRNRRALLAALAALLLALALAAAAAAAAAAAAAALLLAAAAAAAADLLLLLLLLLLLLLLALLLLDDDDDDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDLLLLLLLLLLALLLADDDDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLSSSSDSSSSSSSSSSSSSSSSLLLLLLLLLLLDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLALLLLLALLDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSDDDDDDDDDDDDDSSSSSSSSSSSSSSSSSSSSSSSSSSLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLIDDIDDILLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLALLLLLLLLLLALDDDDDDDDDDDDDDDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLSSSSDDSSSSSSSSSSDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLALLLADDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLSSSDLLLLLLLLLLLDDDLLLLLLLLLLLLLLLLLLLLLLLLLLALLLLLLLLLLADDDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLSSSSSSSSDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSDDSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSDDSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDLLLLLLLALLLALDDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDDSSSSSSLLLLLLLLLLLLLLLLLLLLLLDDDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLALLLLLLLLLLLLLADDDDDDDDDDDDDDDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLSDSLLLLLLLLLLLDLLLLLLLLLLALLLDDDDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDLLLLLLLLLALLLLDDDDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDDLLLLLLLLLLLLLLLLLLLLLLALLLLLLLADDDDDDDDDDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLSDSSSLLLLLLLLLLLDLLLLLLALLLLLLDDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDLLLLLLLLLLLLLLALLLLADDDDDDDDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLSDSDDSSSSSDSLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDLLLLLLLLLLLLLLALLLLLLLDDDDDDDDDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDDDDDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLALLLLLLLLLLLLLLLLLLLLLLLLLLLLDDDDDDDDDDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDLLLLLLLLLLLLLLLLLLLLLLALLLLLDDDDDDDDDDDDDDDDDDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDLLLLLLLLLLLLLALLLDDDDDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDLLLLLLLLLALLLDDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDLLLLLLLALLLDLLLLLLLLLLLLLLDLLLLLLLLLLLLLLALLLLLLLLLDDDDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDLLLLLLALLLLLLLLLLLLLLLLLLLLLLLLLDDDDDDDDDDDDDDDDDDDDDDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDLLLLLLLLLLLLLLLLLLLLLALLLLLLLLLLLLDDDDDDDDDDDDDDDDDDDDDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDLLLLLLLLLLALLLLLADDDDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLSSDDSSSSSSLLLLLLLLLLLLLLLLLLLLLLDLLLLLLLLALLLLDDDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDLLLLLLLLLALLLLLLLLLLLLDDDDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDLLLLLLLLLLALLLLLLLDDDDDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDLLLLLLLLLLLLLLLLLLLALLLLLLLLLLLLLLLLLLADDDDDDDDDDDDDDDDDDDDDDDDDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLSSDSSSSDSSDDSSSSSSLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDLLLLLLLLLALLLLLADDDDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDSSDSSSSSSDSSLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL","n":["ADC","ADC_IRQ_FIFO","BUSCTRL","CLOCKS","CLOCKS_IRQ","DMA","DMA_IRQ_0","DMA_IRQ_1","I2C0","I2C0_IRQ","I2C1","I2C1_IRQ","IO_BANK0","IO_IRQ_BANK0","IO_IRQ_QSPI","IO_QSPI","Interrupt","PADS_BANK0","PADS_QSPI","PIO0","PIO0_IRQ_0","PIO0_IRQ_1","PIO1","PIO1_IRQ_0","PIO1_IRQ_1","PLL_SYS","PLL_USB","PSM","PWM","PWM_IRQ_WRAP","RESETS","ROSC","RTC","RTC_IRQ","SIO","SIO_IRQ_PROC0","SIO_IRQ_PROC1","SPI0","SPI0_IRQ","SPI1","SPI1_IRQ","SYSCFG","SYSINFO","TBMAN","TIMER","TIMER_IRQ_0","TIMER_IRQ_1","TIMER_IRQ_2","TIMER_IRQ_3","UART0","UART0_IRQ","UART1","UART1_IRQ","USBCTRL_DPRAM","USBCTRL_IRQ","USBCTRL_REGS","VREG_AND_CHIP_RESET","WATCHDOG","XIP_CTRL","XIP_IRQ","XIP_SSI","XOSC","adc","borrow","borrow_mut","busctrl","clocks","clone","common","dma","eq","fmt","from","i2c","into","io","number","pads","pio","pll","psm","pwm","resets","rosc","rtc","sio","spi","syscfg","sysinfo","tbman","timer","try_from","try_into","type_id","uart","usb","usb_dpram","vreg_and_chip_reset","watchdog","xip_ctrl","xip_ssi","xosc","Adc","borrow","borrow_mut","clone","cs","div","eq","fcs","fifo","from","inte","intf","into","intr","ints","regs","result","try_from","try_into","type_id","Cs","Div","Fcs","Fifo","Int","Result","ainsel","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone","default","default","default","default","default","default","dreq_en","empty","en","en","eq","eq","eq","eq","eq","eq","err","err","err","err_sticky","fifo","frac","from","from","from","from","from","from","full","int","into","into","into","into","into","into","level","over","ready","result","rrobin","set_ainsel","set_dreq_en","set_empty","set_en","set_en","set_err","set_err","set_err","set_err_sticky","set_fifo","set_frac","set_full","set_int","set_level","set_over","set_ready","set_result","set_rrobin","set_shift","set_start_many","set_start_once","set_thresh","set_ts_en","set_under","set_val","shift","start_many","start_once","thresh","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","ts_en","type_id","type_id","type_id","type_id","type_id","type_id","under","val","Busctrl","borrow","borrow_mut","bus_priority","bus_priority_ack","clone","eq","from","into","perfctr","perfsel","regs","try_from","try_into","type_id","vals","BusPriority","BusPriorityAck","Perfctr","Perfsel","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","bus_priority_ack","clone","clone","clone","clone","default","default","default","default","dma_r","dma_w","eq","eq","eq","eq","from","from","from","from","into","into","into","into","perfctr","perfsel","proc0","proc1","set_bus_priority_ack","set_dma_r","set_dma_w","set_perfctr","set_perfsel","set_proc0","set_proc1","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","APB","APB_CONTESTED","FASTPERI","FASTPERI_CONTESTED","Perfsel","ROM","ROM_CONTESTED","SRAM0","SRAM0_CONTESTED","SRAM1","SRAM1_CONTESTED","SRAM2","SRAM2_CONTESTED","SRAM3","SRAM3_CONTESTED","SRAM4","SRAM4_CONTESTED","SRAM5","SRAM5_CONTESTED","XIP_MAIN","XIP_MAIN_CONTESTED","borrow","borrow_mut","clone","cmp","eq","from","into","partial_cmp","try_from","try_into","type_id","Clocks","borrow","borrow_mut","clk_adc_ctrl","clk_adc_div","clk_adc_selected","clk_gpout0_ctrl","clk_gpout0_div","clk_gpout0_selected","clk_gpout1_ctrl","clk_gpout1_div","clk_gpout1_selected","clk_gpout2_ctrl","clk_gpout2_div","clk_gpout2_selected","clk_gpout3_ctrl","clk_gpout3_div","clk_gpout3_selected","clk_peri_ctrl","clk_peri_selected","clk_ref_ctrl","clk_ref_div","clk_ref_selected","clk_rtc_ctrl","clk_rtc_div","clk_rtc_selected","clk_sys_ctrl","clk_sys_div","clk_sys_resus_ctrl","clk_sys_resus_status","clk_sys_selected","clk_usb_ctrl","clk_usb_div","clk_usb_selected","clone","enabled0","enabled1","eq","fc0_delay","fc0_interval","fc0_max_khz","fc0_min_khz","fc0_ref_khz","fc0_result","fc0_src","fc0_status","from","inte","intf","into","intr","ints","regs","sleep_en0","sleep_en1","try_from","try_into","type_id","vals","wake_en0","wake_en1","ClkAdcCtrl","ClkAdcDiv","ClkGpout0ctrl","ClkGpout0div","ClkGpout1ctrl","ClkGpout1div","ClkGpout2ctrl","ClkGpout2div","ClkGpout3ctrl","ClkGpout3div","ClkPeriCtrl","ClkRefCtrl","ClkRefDiv","ClkRtcCtrl","ClkRtcDiv","ClkSysCtrl","ClkSysDiv","ClkSysResusCtrl","ClkSysResusStatus","ClkUsbCtrl","ClkUsbDiv","Enabled0","Enabled1","Fc0delay","Fc0interval","Fc0maxKhz","Fc0minKhz","Fc0refKhz","Fc0result","Fc0src","Fc0status","Int","SleepEn0","SleepEn1","WakeEn0","WakeEn1","auxsrc","auxsrc","auxsrc","auxsrc","auxsrc","auxsrc","auxsrc","auxsrc","auxsrc","auxsrc","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clear","clk_adc_adc","clk_adc_adc","clk_adc_adc","clk_peri_spi0","clk_peri_spi0","clk_peri_spi0","clk_peri_spi1","clk_peri_spi1","clk_peri_spi1","clk_peri_uart0","clk_peri_uart0","clk_peri_uart0","clk_peri_uart1","clk_peri_uart1","clk_peri_uart1","clk_rtc_rtc","clk_rtc_rtc","clk_rtc_rtc","clk_sys_adc","clk_sys_adc","clk_sys_adc","clk_sys_busctrl","clk_sys_busctrl","clk_sys_busctrl","clk_sys_busfabric","clk_sys_busfabric","clk_sys_busfabric","clk_sys_clocks","clk_sys_clocks","clk_sys_clocks","clk_sys_dma","clk_sys_dma","clk_sys_dma","clk_sys_i2c0","clk_sys_i2c0","clk_sys_i2c0","clk_sys_i2c1","clk_sys_i2c1","clk_sys_i2c1","clk_sys_io","clk_sys_io","clk_sys_io","clk_sys_jtag","clk_sys_jtag","clk_sys_jtag","clk_sys_pads","clk_sys_pads","clk_sys_pads","clk_sys_pio0","clk_sys_pio0","clk_sys_pio0","clk_sys_pio1","clk_sys_pio1","clk_sys_pio1","clk_sys_pll_sys","clk_sys_pll_sys","clk_sys_pll_sys","clk_sys_pll_usb","clk_sys_pll_usb","clk_sys_pll_usb","clk_sys_psm","clk_sys_psm","clk_sys_psm","clk_sys_pwm","clk_sys_pwm","clk_sys_pwm","clk_sys_resets","clk_sys_resets","clk_sys_resets","clk_sys_resus","clk_sys_rom","clk_sys_rom","clk_sys_rom","clk_sys_rosc","clk_sys_rosc","clk_sys_rosc","clk_sys_rtc","clk_sys_rtc","clk_sys_rtc","clk_sys_sio","clk_sys_sio","clk_sys_sio","clk_sys_spi0","clk_sys_spi0","clk_sys_spi0","clk_sys_spi1","clk_sys_spi1","clk_sys_spi1","clk_sys_sram0","clk_sys_sram0","clk_sys_sram0","clk_sys_sram1","clk_sys_sram1","clk_sys_sram1","clk_sys_sram2","clk_sys_sram2","clk_sys_sram2","clk_sys_sram3","clk_sys_sram3","clk_sys_sram3","clk_sys_sram4","clk_sys_sram4","clk_sys_sram4","clk_sys_sram5","clk_sys_sram5","clk_sys_sram5","clk_sys_syscfg","clk_sys_syscfg","clk_sys_syscfg","clk_sys_sysinfo","clk_sys_sysinfo","clk_sys_sysinfo","clk_sys_tbman","clk_sys_tbman","clk_sys_tbman","clk_sys_timer","clk_sys_timer","clk_sys_timer","clk_sys_uart0","clk_sys_uart0","clk_sys_uart0","clk_sys_uart1","clk_sys_uart1","clk_sys_uart1","clk_sys_usbctrl","clk_sys_usbctrl","clk_sys_usbctrl","clk_sys_vreg_and_chip_reset","clk_sys_vreg_and_chip_reset","clk_sys_vreg_and_chip_reset","clk_sys_watchdog","clk_sys_watchdog","clk_sys_watchdog","clk_sys_xip","clk_sys_xip","clk_sys_xip","clk_sys_xosc","clk_sys_xosc","clk_sys_xosc","clk_usb_usbctrl","clk_usb_usbctrl","clk_usb_usbctrl","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","dc50","dc50","dc50","dc50","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","died","done","enable","enable","enable","enable","enable","enable","enable","enable","enable","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","fail","fast","fc0_delay","fc0_interval","fc0_max_khz","fc0_min_khz","fc0_ref_khz","fc0_src","frac","frac","frac","frac","frac","frac","frac","frce","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","int","int","int","int","int","int","int","int","int","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","khz","kill","kill","kill","kill","kill","kill","kill","kill","nudge","nudge","nudge","nudge","nudge","nudge","nudge","pass","phase","phase","phase","phase","phase","phase","phase","resussed","running","set_auxsrc","set_auxsrc","set_auxsrc","set_auxsrc","set_auxsrc","set_auxsrc","set_auxsrc","set_auxsrc","set_auxsrc","set_auxsrc","set_clear","set_clk_adc_adc","set_clk_adc_adc","set_clk_adc_adc","set_clk_peri_spi0","set_clk_peri_spi0","set_clk_peri_spi0","set_clk_peri_spi1","set_clk_peri_spi1","set_clk_peri_spi1","set_clk_peri_uart0","set_clk_peri_uart0","set_clk_peri_uart0","set_clk_peri_uart1","set_clk_peri_uart1","set_clk_peri_uart1","set_clk_rtc_rtc","set_clk_rtc_rtc","set_clk_rtc_rtc","set_clk_sys_adc","set_clk_sys_adc","set_clk_sys_adc","set_clk_sys_busctrl","set_clk_sys_busctrl","set_clk_sys_busctrl","set_clk_sys_busfabric","set_clk_sys_busfabric","set_clk_sys_busfabric","set_clk_sys_clocks","set_clk_sys_clocks","set_clk_sys_clocks","set_clk_sys_dma","set_clk_sys_dma","set_clk_sys_dma","set_clk_sys_i2c0","set_clk_sys_i2c0","set_clk_sys_i2c0","set_clk_sys_i2c1","set_clk_sys_i2c1","set_clk_sys_i2c1","set_clk_sys_io","set_clk_sys_io","set_clk_sys_io","set_clk_sys_jtag","set_clk_sys_jtag","set_clk_sys_jtag","set_clk_sys_pads","set_clk_sys_pads","set_clk_sys_pads","set_clk_sys_pio0","set_clk_sys_pio0","set_clk_sys_pio0","set_clk_sys_pio1","set_clk_sys_pio1","set_clk_sys_pio1","set_clk_sys_pll_sys","set_clk_sys_pll_sys","set_clk_sys_pll_sys","set_clk_sys_pll_usb","set_clk_sys_pll_usb","set_clk_sys_pll_usb","set_clk_sys_psm","set_clk_sys_psm","set_clk_sys_psm","set_clk_sys_pwm","set_clk_sys_pwm","set_clk_sys_pwm","set_clk_sys_resets","set_clk_sys_resets","set_clk_sys_resets","set_clk_sys_resus","set_clk_sys_rom","set_clk_sys_rom","set_clk_sys_rom","set_clk_sys_rosc","set_clk_sys_rosc","set_clk_sys_rosc","set_clk_sys_rtc","set_clk_sys_rtc","set_clk_sys_rtc","set_clk_sys_sio","set_clk_sys_sio","set_clk_sys_sio","set_clk_sys_spi0","set_clk_sys_spi0","set_clk_sys_spi0","set_clk_sys_spi1","set_clk_sys_spi1","set_clk_sys_spi1","set_clk_sys_sram0","set_clk_sys_sram0","set_clk_sys_sram0","set_clk_sys_sram1","set_clk_sys_sram1","set_clk_sys_sram1","set_clk_sys_sram2","set_clk_sys_sram2","set_clk_sys_sram2","set_clk_sys_sram3","set_clk_sys_sram3","set_clk_sys_sram3","set_clk_sys_sram4","set_clk_sys_sram4","set_clk_sys_sram4","set_clk_sys_sram5","set_clk_sys_sram5","set_clk_sys_sram5","set_clk_sys_syscfg","set_clk_sys_syscfg","set_clk_sys_syscfg","set_clk_sys_sysinfo","set_clk_sys_sysinfo","set_clk_sys_sysinfo","set_clk_sys_tbman","set_clk_sys_tbman","set_clk_sys_tbman","set_clk_sys_timer","set_clk_sys_timer","set_clk_sys_timer","set_clk_sys_uart0","set_clk_sys_uart0","set_clk_sys_uart0","set_clk_sys_uart1","set_clk_sys_uart1","set_clk_sys_uart1","set_clk_sys_usbctrl","set_clk_sys_usbctrl","set_clk_sys_usbctrl","set_clk_sys_vreg_and_chip_reset","set_clk_sys_vreg_and_chip_reset","set_clk_sys_vreg_and_chip_reset","set_clk_sys_watchdog","set_clk_sys_watchdog","set_clk_sys_watchdog","set_clk_sys_xip","set_clk_sys_xip","set_clk_sys_xip","set_clk_sys_xosc","set_clk_sys_xosc","set_clk_sys_xosc","set_clk_usb_usbctrl","set_clk_usb_usbctrl","set_clk_usb_usbctrl","set_dc50","set_dc50","set_dc50","set_dc50","set_died","set_done","set_enable","set_enable","set_enable","set_enable","set_enable","set_enable","set_enable","set_enable","set_enable","set_fail","set_fast","set_fc0_delay","set_fc0_interval","set_fc0_max_khz","set_fc0_min_khz","set_fc0_ref_khz","set_fc0_src","set_frac","set_frac","set_frac","set_frac","set_frac","set_frac","set_frac","set_frce","set_int","set_int","set_int","set_int","set_int","set_int","set_int","set_int","set_int","set_khz","set_kill","set_kill","set_kill","set_kill","set_kill","set_kill","set_kill","set_kill","set_nudge","set_nudge","set_nudge","set_nudge","set_nudge","set_nudge","set_nudge","set_pass","set_phase","set_phase","set_phase","set_phase","set_phase","set_phase","set_phase","set_resussed","set_running","set_slow","set_src","set_src","set_timeout","set_waiting","slow","src","src","timeout","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","waiting","CLKSRC_CLK_REF_AUX","CLKSRC_CLK_SYS_AUX","CLKSRC_GPIN0","CLKSRC_GPIN0","CLKSRC_GPIN0","CLKSRC_GPIN0","CLKSRC_GPIN0","CLKSRC_GPIN0","CLKSRC_GPIN0","CLKSRC_GPIN0","CLKSRC_GPIN0","CLKSRC_GPIN0","CLKSRC_GPIN0","CLKSRC_GPIN1","CLKSRC_GPIN1","CLKSRC_GPIN1","CLKSRC_GPIN1","CLKSRC_GPIN1","CLKSRC_GPIN1","CLKSRC_GPIN1","CLKSRC_GPIN1","CLKSRC_GPIN1","CLKSRC_GPIN1","CLKSRC_GPIN1","CLKSRC_PLL_SYS","CLKSRC_PLL_SYS","CLKSRC_PLL_SYS","CLKSRC_PLL_SYS","CLKSRC_PLL_SYS","CLKSRC_PLL_SYS","CLKSRC_PLL_SYS","CLKSRC_PLL_SYS","CLKSRC_PLL_SYS","CLKSRC_PLL_USB","CLKSRC_PLL_USB","CLKSRC_PLL_USB","CLKSRC_PLL_USB","CLKSRC_PLL_USB","CLKSRC_PLL_USB","CLKSRC_PLL_USB","CLKSRC_PLL_USB","CLKSRC_PLL_USB","CLKSRC_PLL_USB","CLK_ADC","CLK_ADC","CLK_ADC","CLK_ADC","CLK_ADC","CLK_PERI","CLK_REF","CLK_REF","CLK_REF","CLK_REF","CLK_REF","CLK_REF","CLK_RTC","CLK_RTC","CLK_RTC","CLK_RTC","CLK_RTC","CLK_SYS","CLK_SYS","CLK_SYS","CLK_SYS","CLK_SYS","CLK_SYS","CLK_USB","CLK_USB","CLK_USB","CLK_USB","CLK_USB","ClkAdcCtrlAuxsrc","ClkGpout0ctrlAuxsrc","ClkGpout1ctrlAuxsrc","ClkGpout2ctrlAuxsrc","ClkGpout3ctrlAuxsrc","ClkPeriCtrlAuxsrc","ClkRefCtrlAuxsrc","ClkRefCtrlSrc","ClkRtcCtrlAuxsrc","ClkSysCtrlAuxsrc","ClkSysCtrlSrc","ClkUsbCtrlAuxsrc","Fc0src","NULL","PLL_SYS_CLKSRC_PRIMARY","PLL_USB_CLKSRC_PRIMARY","ROSC_CLKSRC","ROSC_CLKSRC","ROSC_CLKSRC","ROSC_CLKSRC","ROSC_CLKSRC_PH","ROSC_CLKSRC_PH","ROSC_CLKSRC_PH","ROSC_CLKSRC_PH","ROSC_CLKSRC_PH","ROSC_CLKSRC_PH","ROSC_CLKSRC_PH","ROSC_CLKSRC_PH","XOSC_CLKSRC","XOSC_CLKSRC","XOSC_CLKSRC","XOSC_CLKSRC","XOSC_CLKSRC","XOSC_CLKSRC","XOSC_CLKSRC","XOSC_CLKSRC","XOSC_CLKSRC","XOSC_CLKSRC","XOSC_CLKSRC","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","from","from","from","from","from","from","from","from","from","from","from","from","from","into","into","into","into","into","into","into","into","into","into","into","into","into","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","Access","R","RW","Read","Reg","W","Write","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","eq","eq","eq","eq","from","from","from","from","from_ptr","into","into","into","into","modify","ptr","read","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","write","write_value","Channel","Dma","al1_ctrl","al1_read_addr","al1_trans_count_trig","al1_write_addr","al2_ctrl","al2_read_addr","al2_trans_count","al2_write_addr_trig","al3_ctrl","al3_read_addr_trig","al3_trans_count","al3_write_addr","borrow","borrow","borrow_mut","borrow_mut","ch","chan_abort","clone","clone","ctrl_trig","dbg_ctdreq","dbg_tcr","eq","eq","fifo_levels","from","from","inte0","inte1","intf0","intf1","into","into","intr","ints0","ints1","multi_chan_trigger","n_channels","read_addr","regs","sniff_ctrl","sniff_data","timer","trans_count","try_from","try_from","try_into","try_into","type_id","type_id","vals","write_addr","ChanAbort","CtrlTrig","DbgCtdreq","FifoLevels","Inte0","Inte1","Intf0","Intf1","Intr","Ints0","Ints1","MultiChanTrigger","Nchannels","SniffCtrl","Timer","ahb_error","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","bswap","bswap","busy","calc","ch7_dbg_ctdreq","chain_to","chan_abort","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","data_size","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","dmach","en","en","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","high_priority","incr_read","incr_write","inte0","inte1","intf0","intf1","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","intr","ints0","ints1","irq_quiet","multi_chan_trigger","n_channels","out_inv","out_rev","raf_lvl","read_error","ring_sel","ring_size","set_ahb_error","set_bswap","set_bswap","set_busy","set_calc","set_ch7_dbg_ctdreq","set_chain_to","set_chan_abort","set_data_size","set_dmach","set_en","set_en","set_high_priority","set_incr_read","set_incr_write","set_inte0","set_inte1","set_intf0","set_intf1","set_intr","set_ints0","set_ints1","set_irq_quiet","set_multi_chan_trigger","set_n_channels","set_out_inv","set_out_rev","set_raf_lvl","set_read_error","set_ring_sel","set_ring_size","set_sniff_en","set_tdf_lvl","set_treq_sel","set_waf_lvl","set_write_error","set_x","set_y","sniff_en","tdf_lvl","treq_sel","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","waf_lvl","write_error","x","y","CRC16","CRC16R","CRC32","CRC32R","Calc","DataSize","EVEN","PERMANENT","SIZE_BYTE","SIZE_HALFWORD","SIZE_WORD","SUM","TIMER0","TIMER1","TIMER2","TIMER3","TreqSel","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","cmp","cmp","cmp","eq","eq","eq","from","from","from","into","into","into","partial_cmp","partial_cmp","partial_cmp","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","I2c","borrow","borrow_mut","clone","eq","from","ic_ack_general_call","ic_clr_activity","ic_clr_gen_call","ic_clr_intr","ic_clr_rd_req","ic_clr_restart_det","ic_clr_rx_done","ic_clr_rx_over","ic_clr_rx_under","ic_clr_start_det","ic_clr_stop_det","ic_clr_tx_abrt","ic_clr_tx_over","ic_comp_param_1","ic_comp_type","ic_comp_version","ic_con","ic_data_cmd","ic_dma_cr","ic_dma_rdlr","ic_dma_tdlr","ic_enable","ic_enable_status","ic_fs_scl_hcnt","ic_fs_scl_lcnt","ic_fs_spklen","ic_intr_mask","ic_intr_stat","ic_raw_intr_stat","ic_rx_tl","ic_rxflr","ic_sar","ic_sda_hold","ic_sda_setup","ic_slv_data_nack_only","ic_ss_scl_hcnt","ic_ss_scl_lcnt","ic_status","ic_tar","ic_tx_abrt_source","ic_tx_tl","ic_txflr","into","regs","try_from","try_into","type_id","vals","IcAckGeneralCall","IcClrActivity","IcClrGenCall","IcClrIntr","IcClrRdReq","IcClrRestartDet","IcClrRxDone","IcClrRxOver","IcClrRxUnder","IcClrStartDet","IcClrStopDet","IcClrTxAbrt","IcClrTxOver","IcCompParam1","IcCon","IcDataCmd","IcDmaCr","IcDmaRdlr","IcDmaTdlr","IcEnable","IcEnableStatus","IcFsSclHcnt","IcFsSclLcnt","IcFsSpklen","IcIntrMask","IcIntrStat","IcRawIntrStat","IcRxTl","IcRxflr","IcSar","IcSdaHold","IcSdaSetup","IcSlvDataNackOnly","IcSsSclHcnt","IcSsSclLcnt","IcStatus","IcTar","IcTxAbrtSource","IcTxTl","IcTxflr","abort","abrt_10addr1_noack","abrt_10addr2_noack","abrt_10b_rd_norstrt","abrt_7b_addr_noack","abrt_gcall_noack","abrt_gcall_read","abrt_hs_ackdet","abrt_hs_norstrt","abrt_master_dis","abrt_sbyte_ackdet","abrt_sbyte_norstrt","abrt_slv_arblost","abrt_slvflush_txfifo","abrt_slvrd_intx","abrt_txdata_noack","abrt_user_abrt","ack_gen_call","activity","activity","add_encoded_params","apb_data_width","arb_lost","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clr_activity","clr_gen_call","clr_intr","clr_rd_req","clr_restart_det","clr_rx_done","clr_rx_over","clr_rx_under","clr_start_det","clr_stop_det","clr_tx_abrt","clr_tx_over","cmd","dat","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","dmardl","dmatdl","enable","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","first_data_byte","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","gc_or_start","gen_call","has_dma","hc_count_values","ic_10bitaddr_master","ic_10bitaddr_slave","ic_en","ic_fs_scl_hcnt","ic_fs_scl_lcnt","ic_fs_spklen","ic_restart_en","ic_sar","ic_sda_rx_hold","ic_sda_tx_hold","ic_slave_disable","ic_ss_scl_hcnt","ic_ss_scl_lcnt","ic_tar","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","intr_io","m_activity","m_gen_call","m_rd_req","m_restart_det","m_rx_done","m_rx_full","m_rx_over","m_rx_under","m_start_det","m_stop_det","m_tx_abrt","m_tx_empty","m_tx_over","master_mode","max_speed_mode","mst_activity","nack","r_activity","r_gen_call","r_rd_req","r_restart_det","r_rx_done","r_rx_full","r_rx_over","r_rx_under","r_start_det","r_stop_det","r_tx_abrt","r_tx_empty","r_tx_over","rd_req","rdmae","restart","restart_det","rff","rfne","rx_buffer_depth","rx_done","rx_fifo_full_hld_ctrl","rx_full","rx_over","rx_tl","rx_under","rxflr","sda_setup","set_abort","set_abrt_10addr1_noack","set_abrt_10addr2_noack","set_abrt_10b_rd_norstrt","set_abrt_7b_addr_noack","set_abrt_gcall_noack","set_abrt_gcall_read","set_abrt_hs_ackdet","set_abrt_hs_norstrt","set_abrt_master_dis","set_abrt_sbyte_ackdet","set_abrt_sbyte_norstrt","set_abrt_slv_arblost","set_abrt_slvflush_txfifo","set_abrt_slvrd_intx","set_abrt_txdata_noack","set_abrt_user_abrt","set_ack_gen_call","set_activity","set_activity","set_add_encoded_params","set_apb_data_width","set_arb_lost","set_clr_activity","set_clr_gen_call","set_clr_intr","set_clr_rd_req","set_clr_restart_det","set_clr_rx_done","set_clr_rx_over","set_clr_rx_under","set_clr_start_det","set_clr_stop_det","set_clr_tx_abrt","set_clr_tx_over","set_cmd","set_dat","set_dmardl","set_dmatdl","set_enable","set_first_data_byte","set_gc_or_start","set_gen_call","set_has_dma","set_hc_count_values","set_ic_10bitaddr_master","set_ic_10bitaddr_slave","set_ic_en","set_ic_fs_scl_hcnt","set_ic_fs_scl_lcnt","set_ic_fs_spklen","set_ic_restart_en","set_ic_sar","set_ic_sda_rx_hold","set_ic_sda_tx_hold","set_ic_slave_disable","set_ic_ss_scl_hcnt","set_ic_ss_scl_lcnt","set_ic_tar","set_intr_io","set_m_activity","set_m_gen_call","set_m_rd_req","set_m_restart_det","set_m_rx_done","set_m_rx_full","set_m_rx_over","set_m_rx_under","set_m_start_det","set_m_stop_det","set_m_tx_abrt","set_m_tx_empty","set_m_tx_over","set_master_mode","set_max_speed_mode","set_mst_activity","set_nack","set_r_activity","set_r_gen_call","set_r_rd_req","set_r_restart_det","set_r_rx_done","set_r_rx_full","set_r_rx_over","set_r_rx_under","set_r_start_det","set_r_stop_det","set_r_tx_abrt","set_r_tx_empty","set_r_tx_over","set_rd_req","set_rdmae","set_restart","set_restart_det","set_rff","set_rfne","set_rx_buffer_depth","set_rx_done","set_rx_fifo_full_hld_ctrl","set_rx_full","set_rx_over","set_rx_tl","set_rx_under","set_rxflr","set_sda_setup","set_slv_activity","set_slv_disabled_while_busy","set_slv_rx_data_lost","set_special","set_speed","set_start_det","set_stop","set_stop_det","set_stop_det_if_master_active","set_stop_det_ifaddressed","set_tdmae","set_tfe","set_tfnf","set_tx_abrt","set_tx_buffer_depth","set_tx_cmd_block","set_tx_empty","set_tx_empty_ctrl","set_tx_flush_cnt","set_tx_over","set_tx_tl","set_txflr","slv_activity","slv_disabled_while_busy","slv_rx_data_lost","special","speed","start_det","stop","stop_det","stop_det_if_master_active","stop_det_ifaddressed","tdmae","tfe","tfnf","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","tx_abrt","tx_buffer_depth","tx_cmd_block","tx_empty","tx_empty_ctrl","tx_flush_cnt","tx_over","tx_tl","txflr","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","FAST","HIGH","STANDARD","Speed","borrow","borrow_mut","clone","cmp","eq","from","into","partial_cmp","try_from","try_into","type_id","Gpio","Int","Io","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","ctrl","eq","eq","eq","from","from","from","gpio","int_dormant_wake","int_proc","inte","intf","into","into","into","intr","ints","regs","status","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","vals","GpioCtrl","GpioStatus","Int","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","default","default","default","edge_high","edge_low","eq","eq","eq","from","from","from","funcsel","infrompad","inover","into","into","into","intoperi","irqfrompad","irqover","irqtoproc","level_high","level_low","oefromperi","oeover","oetopad","outfromperi","outover","outtopad","set_edge_high","set_edge_low","set_funcsel","set_infrompad","set_inover","set_intoperi","set_irqfrompad","set_irqover","set_irqtoproc","set_level_high","set_level_low","set_oefromperi","set_oeover","set_oetopad","set_outfromperi","set_outover","set_outtopad","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","CLOCKS_GPIN_0","CLOCKS_GPIN_1","CLOCKS_GPOUT_0","CLOCKS_GPOUT_1","CLOCKS_GPOUT_2","CLOCKS_GPOUT_3","DISABLE","ENABLE","Gpio0ctrlFuncsel","Gpio10ctrlFuncsel","Gpio11ctrlFuncsel","Gpio12ctrlFuncsel","Gpio13ctrlFuncsel","Gpio14ctrlFuncsel","Gpio15ctrlFuncsel","Gpio16ctrlFuncsel","Gpio17ctrlFuncsel","Gpio18ctrlFuncsel","Gpio19ctrlFuncsel","Gpio1ctrlFuncsel","Gpio20ctrlFuncsel","Gpio21ctrlFuncsel","Gpio22ctrlFuncsel","Gpio23ctrlFuncsel","Gpio24ctrlFuncsel","Gpio25ctrlFuncsel","Gpio26ctrlFuncsel","Gpio27ctrlFuncsel","Gpio28ctrlFuncsel","Gpio29ctrlFuncsel","Gpio2ctrlFuncsel","Gpio3ctrlFuncsel","Gpio4ctrlFuncsel","Gpio5ctrlFuncsel","Gpio6ctrlFuncsel","Gpio7ctrlFuncsel","Gpio8ctrlFuncsel","Gpio9ctrlFuncsel","HIGH","HIGH","HIGH","I2C0_SCL","I2C0_SCL","I2C0_SCL","I2C0_SCL","I2C0_SCL","I2C0_SCL","I2C0_SCL","I2C0_SCL","I2C0_SDA","I2C0_SDA","I2C0_SDA","I2C0_SDA","I2C0_SDA","I2C0_SDA","I2C0_SDA","I2C0_SDA","I2C1_SCL","I2C1_SCL","I2C1_SCL","I2C1_SCL","I2C1_SCL","I2C1_SCL","I2C1_SCL","I2C1_SDA","I2C1_SDA","I2C1_SDA","I2C1_SDA","I2C1_SDA","I2C1_SDA","I2C1_SDA","INVERT","INVERT","INVERT","INVERT","Inover","Irqover","JTAG_TCK","JTAG_TDI","JTAG_TDO","JTAG_TMS","LOW","LOW","LOW","NORMAL","NORMAL","NORMAL","NORMAL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","Oeover","Outover","PIO0_0","PIO0_1","PIO0_10","PIO0_11","PIO0_12","PIO0_13","PIO0_14","PIO0_15","PIO0_16","PIO0_17","PIO0_18","PIO0_19","PIO0_2","PIO0_20","PIO0_21","PIO0_22","PIO0_23","PIO0_24","PIO0_25","PIO0_26","PIO0_27","PIO0_28","PIO0_29","PIO0_3","PIO0_4","PIO0_5","PIO0_6","PIO0_7","PIO0_8","PIO0_9","PIO1_0","PIO1_1","PIO1_10","PIO1_11","PIO1_12","PIO1_13","PIO1_14","PIO1_15","PIO1_16","PIO1_17","PIO1_18","PIO1_19","PIO1_2","PIO1_20","PIO1_21","PIO1_22","PIO1_23","PIO1_24","PIO1_25","PIO1_26","PIO1_27","PIO1_28","PIO1_29","PIO1_3","PIO1_4","PIO1_5","PIO1_6","PIO1_7","PIO1_8","PIO1_9","PWM_A_0","PWM_A_0","PWM_A_1","PWM_A_1","PWM_A_2","PWM_A_2","PWM_A_3","PWM_A_3","PWM_A_4","PWM_A_4","PWM_A_5","PWM_A_5","PWM_A_6","PWM_A_6","PWM_A_7","PWM_B_0","PWM_B_0","PWM_B_1","PWM_B_1","PWM_B_2","PWM_B_2","PWM_B_3","PWM_B_3","PWM_B_4","PWM_B_4","PWM_B_5","PWM_B_5","PWM_B_6","PWM_B_6","PWM_B_7","SIO_0","SIO_1","SIO_10","SIO_11","SIO_12","SIO_13","SIO_14","SIO_15","SIO_16","SIO_17","SIO_18","SIO_19","SIO_2","SIO_20","SIO_21","SIO_22","SIO_23","SIO_24","SIO_25","SIO_26","SIO_27","SIO_28","SIO_29","SIO_3","SIO_4","SIO_5","SIO_6","SIO_7","SIO_8","SIO_9","SPI0_RX","SPI0_RX","SPI0_RX","SPI0_RX","SPI0_SCLK","SPI0_SCLK","SPI0_SCLK","SPI0_SCLK","SPI0_SS_N","SPI0_SS_N","SPI0_SS_N","SPI0_SS_N","SPI0_TX","SPI0_TX","SPI0_TX","SPI0_TX","SPI1_RX","SPI1_RX","SPI1_RX","SPI1_RX","SPI1_SCLK","SPI1_SCLK","SPI1_SCLK","SPI1_SS_N","SPI1_SS_N","SPI1_SS_N","SPI1_SS_N","SPI1_TX","SPI1_TX","SPI1_TX","UART0_CTS","UART0_CTS","UART0_CTS","UART0_RTS","UART0_RTS","UART0_RTS","UART0_RX","UART0_RX","UART0_RX","UART0_RX","UART0_TX","UART0_TX","UART0_TX","UART0_TX","UART1_CTS","UART1_CTS","UART1_CTS","UART1_CTS","UART1_RTS","UART1_RTS","UART1_RTS","UART1_RTS","UART1_RX","UART1_RX","UART1_RX","UART1_RX","UART1_TX","UART1_TX","UART1_TX","UART1_TX","USB_MUXING_DIGITAL_DM","USB_MUXING_DIGITAL_DP","USB_MUXING_EXTPHY_OE_N","USB_MUXING_EXTPHY_RCV","USB_MUXING_EXTPHY_SOFTCON","USB_MUXING_EXTPHY_SPEED","USB_MUXING_EXTPHY_SUSPND","USB_MUXING_EXTPHY_VM","USB_MUXING_EXTPHY_VMO","USB_MUXING_EXTPHY_VP","USB_MUXING_EXTPHY_VPO","USB_MUXING_OVERCURR_DETECT","USB_MUXING_OVERCURR_DETECT","USB_MUXING_OVERCURR_DETECT","USB_MUXING_OVERCURR_DETECT","USB_MUXING_OVERCURR_DETECT","USB_MUXING_OVERCURR_DETECT","USB_MUXING_OVERCURR_DETECT","USB_MUXING_OVERCURR_DETECT","USB_MUXING_OVERCURR_DETECT","USB_MUXING_OVERCURR_DETECT","USB_MUXING_VBUS_DETECT","USB_MUXING_VBUS_DETECT","USB_MUXING_VBUS_DETECT","USB_MUXING_VBUS_DETECT","USB_MUXING_VBUS_DETECT","USB_MUXING_VBUS_DETECT","USB_MUXING_VBUS_DETECT","USB_MUXING_VBUS_DETECT","USB_MUXING_VBUS_DETECT","USB_MUXING_VBUS_DETECT","USB_MUXING_VBUS_EN","USB_MUXING_VBUS_EN","USB_MUXING_VBUS_EN","USB_MUXING_VBUS_EN","USB_MUXING_VBUS_EN","USB_MUXING_VBUS_EN","USB_MUXING_VBUS_EN","USB_MUXING_VBUS_EN","USB_MUXING_VBUS_EN","USB_MUXING_VBUS_EN","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","Pads","borrow","borrow_mut","clone","eq","from","gpio","into","regs","try_from","try_into","type_id","vals","voltage_select","GpioCtrl","VoltageSelect","borrow","borrow","borrow_mut","borrow_mut","clone","clone","default","default","drive","eq","eq","from","from","ie","into","into","od","pde","pue","schmitt","set_drive","set_ie","set_od","set_pde","set_pue","set_schmitt","set_slewfast","set_voltage_select","slewfast","try_from","try_from","try_into","try_into","type_id","type_id","voltage_select","Drive","VoltageSelect","_12MA","_1V8","_2MA","_3V3","_4MA","_8MA","borrow","borrow","borrow_mut","borrow_mut","clone","clone","cmp","cmp","eq","eq","from","from","into","into","partial_cmp","partial_cmp","try_from","try_from","try_into","try_into","type_id","type_id","Irq","Pio","StateMachine","addr","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clkdiv","clone","clone","clone","ctrl","dbg_cfginfo","dbg_padoe","dbg_padout","eq","eq","eq","execctrl","fdebug","flevel","from","from","from","fstat","input_sync_bypass","instr","instr_mem","inte","intf","into","into","into","intr","ints","irq","irq_force","irqs","pinctrl","regs","rxf","shiftctrl","sm","try_from","try_from","try_from","try_into","try_into","try_into","txf","type_id","type_id","type_id","vals","Ctrl","DbgCfginfo","Fdebug","Flevel","Fstat","InstrMem","Intr","Irq","IrqForce","SmAddr","SmClkdiv","SmExecctrl","SmInstr","SmPinctrl","SmShiftctrl","addr","autopull","autopush","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clkdiv_restart","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","exec_stalled","fifo_depth","fjoin_rx","fjoin_tx","frac","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","imem_size","in_base","in_shiftdir","inline_out_en","instr","instr_mem","int","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","irq","irq_force","jmp_pin","out_base","out_count","out_en_sel","out_shiftdir","out_sticky","pull_thresh","push_thresh","rx0","rx1","rx2","rx3","rxempty","rxfull","rxstall","rxunder","set_addr","set_autopull","set_autopush","set_base","set_clkdiv_restart","set_count","set_exec_stalled","set_fifo_depth","set_fjoin_rx","set_fjoin_tx","set_frac","set_imem_size","set_in_base","set_in_shiftdir","set_inline_out_en","set_instr","set_instr_mem","set_int","set_irq","set_irq_force","set_jmp_pin","set_out_base","set_out_count","set_out_en_sel","set_out_shiftdir","set_out_sticky","set_pull_thresh","set_push_thresh","set_rx0","set_rx1","set_rx2","set_rx3","set_rxempty","set_rxfull","set_rxstall","set_rxunder","set_set_base","set_set_count","set_side_en","set_side_pindir","set_sideset_base","set_sideset_count","set_sm0","set_sm0_rxnempty","set_sm0_txnfull","set_sm1","set_sm1_rxnempty","set_sm1_txnfull","set_sm2","set_sm2_rxnempty","set_sm2_txnfull","set_sm3","set_sm3_rxnempty","set_sm3_txnfull","set_sm_count","set_sm_enable","set_sm_restart","set_status_n","set_status_sel","set_tx0","set_tx1","set_tx2","set_tx3","set_txempty","set_txfull","set_txover","set_txstall","set_wrap_bottom","set_wrap_top","side_en","side_pindir","sideset_base","sideset_count","sm0","sm0_rxnempty","sm0_txnfull","sm1","sm1_rxnempty","sm1_txnfull","sm2","sm2_rxnempty","sm2_txnfull","sm3","sm3_rxnempty","sm3_txnfull","sm_count","sm_enable","sm_restart","status_n","status_sel","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","tx0","tx1","tx2","tx3","txempty","txfull","txover","txstall","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","wrap_bottom","wrap_top","RXLEVEL","SmExecctrlStatusSel","TXLEVEL","borrow","borrow_mut","clone","cmp","eq","from","into","partial_cmp","try_from","try_into","type_id","Pll","borrow","borrow_mut","clone","cs","eq","fbdiv_int","from","into","prim","pwr","regs","try_from","try_into","type_id","Cs","FbdivInt","Prim","Pwr","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","bypass","clone","clone","clone","clone","default","default","default","default","dsmpd","eq","eq","eq","eq","fbdiv_int","from","from","from","from","into","into","into","into","lock","pd","postdiv1","postdiv2","postdivpd","refdiv","set_bypass","set_dsmpd","set_fbdiv_int","set_lock","set_pd","set_postdiv1","set_postdiv2","set_postdivpd","set_refdiv","set_vcopd","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","vcopd","Psm","borrow","borrow_mut","clone","done","eq","frce_off","frce_on","from","into","regs","try_from","try_into","type_id","wdsel","Done","FrceOff","FrceOn","Wdsel","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","busfabric","busfabric","busfabric","busfabric","clocks","clocks","clocks","clocks","clone","clone","clone","clone","default","default","default","default","eq","eq","eq","eq","from","from","from","from","into","into","into","into","proc0","proc0","proc0","proc0","proc1","proc1","proc1","proc1","resets","resets","resets","resets","rom","rom","rom","rom","rosc","rosc","rosc","rosc","set_busfabric","set_busfabric","set_busfabric","set_busfabric","set_clocks","set_clocks","set_clocks","set_clocks","set_proc0","set_proc0","set_proc0","set_proc0","set_proc1","set_proc1","set_proc1","set_proc1","set_resets","set_resets","set_resets","set_resets","set_rom","set_rom","set_rom","set_rom","set_rosc","set_rosc","set_rosc","set_rosc","set_sio","set_sio","set_sio","set_sio","set_sram0","set_sram0","set_sram0","set_sram0","set_sram1","set_sram1","set_sram1","set_sram1","set_sram2","set_sram2","set_sram2","set_sram2","set_sram3","set_sram3","set_sram3","set_sram3","set_sram4","set_sram4","set_sram4","set_sram4","set_sram5","set_sram5","set_sram5","set_sram5","set_vreg_and_chip_reset","set_vreg_and_chip_reset","set_vreg_and_chip_reset","set_vreg_and_chip_reset","set_xip","set_xip","set_xip","set_xip","set_xosc","set_xosc","set_xosc","set_xosc","sio","sio","sio","sio","sram0","sram0","sram0","sram0","sram1","sram1","sram1","sram1","sram2","sram2","sram2","sram2","sram3","sram3","sram3","sram3","sram4","sram4","sram4","sram4","sram5","sram5","sram5","sram5","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","vreg_and_chip_reset","vreg_and_chip_reset","vreg_and_chip_reset","vreg_and_chip_reset","xip","xip","xip","xip","xosc","xosc","xosc","xosc","Channel","Pwm","borrow","borrow","borrow_mut","borrow_mut","cc","ch","clone","clone","csr","ctr","div","en","eq","eq","from","from","inte","intf","into","into","intr","ints","regs","top","try_from","try_from","try_into","try_into","type_id","type_id","vals","ChCc","ChCsr","ChCtr","ChDiv","ChTop","En","Inte","Intf","Intr","Ints","a","a_inv","b","b_inv","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","ch0","ch0","ch0","ch0","ch0","ch1","ch1","ch1","ch1","ch1","ch2","ch2","ch2","ch2","ch2","ch3","ch3","ch3","ch3","ch3","ch4","ch4","ch4","ch4","ch4","ch5","ch5","ch5","ch5","ch5","ch6","ch6","ch6","ch6","ch6","ch7","ch7","ch7","ch7","ch7","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","ctr","default","default","default","default","default","default","default","default","default","default","divmode","en","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","frac","from","from","from","from","from","from","from","from","from","from","int","into","into","into","into","into","into","into","into","into","into","ph_adv","ph_correct","ph_ret","set_a","set_a_inv","set_b","set_b_inv","set_ch0","set_ch0","set_ch0","set_ch0","set_ch0","set_ch1","set_ch1","set_ch1","set_ch1","set_ch1","set_ch2","set_ch2","set_ch2","set_ch2","set_ch2","set_ch3","set_ch3","set_ch3","set_ch3","set_ch3","set_ch4","set_ch4","set_ch4","set_ch4","set_ch4","set_ch5","set_ch5","set_ch5","set_ch5","set_ch5","set_ch6","set_ch6","set_ch6","set_ch6","set_ch6","set_ch7","set_ch7","set_ch7","set_ch7","set_ch7","set_ctr","set_divmode","set_en","set_frac","set_int","set_ph_adv","set_ph_correct","set_ph_ret","set_top","top","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","DIV","Divmode","FALL","LEVEL","RISE","borrow","borrow_mut","clone","cmp","eq","from","into","partial_cmp","try_from","try_into","type_id","Resets","borrow","borrow_mut","clone","eq","from","into","regs","reset","reset_done","try_from","try_into","type_id","wdsel","Peripherals","Wdsel","adc","adc","borrow","borrow","borrow_mut","borrow_mut","busctrl","busctrl","clone","clone","default","default","dma","dma","eq","eq","from","from","i2c0","i2c0","i2c1","i2c1","into","into","io_bank0","io_bank0","io_qspi","io_qspi","jtag","jtag","pads_bank0","pads_bank0","pads_qspi","pads_qspi","pio0","pio0","pio1","pio1","pll_sys","pll_sys","pll_usb","pll_usb","pwm","pwm","rtc","rtc","set_adc","set_adc","set_busctrl","set_busctrl","set_dma","set_dma","set_i2c0","set_i2c0","set_i2c1","set_i2c1","set_io_bank0","set_io_bank0","set_io_qspi","set_io_qspi","set_jtag","set_jtag","set_pads_bank0","set_pads_bank0","set_pads_qspi","set_pads_qspi","set_pio0","set_pio0","set_pio1","set_pio1","set_pll_sys","set_pll_sys","set_pll_usb","set_pll_usb","set_pwm","set_pwm","set_rtc","set_rtc","set_spi0","set_spi0","set_spi1","set_spi1","set_syscfg","set_syscfg","set_sysinfo","set_sysinfo","set_tbman","set_tbman","set_timer","set_timer","set_uart0","set_uart0","set_uart1","set_uart1","set_usbctrl","set_usbctrl","spi0","spi0","spi1","spi1","syscfg","syscfg","sysinfo","sysinfo","tbman","tbman","timer","timer","try_from","try_from","try_into","try_into","type_id","type_id","uart0","uart0","uart1","uart1","usbctrl","usbctrl","Rosc","borrow","borrow_mut","clone","count","ctrl","div","dormant","eq","freqa","freqb","from","into","phase","randombit","regs","status","try_from","try_into","type_id","vals","Count","Ctrl","Div","Freqa","Freqb","Phase","Randombit","Status","badwrite","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone","clone","clone","count","default","default","default","default","default","default","default","default","div","div_running","ds0","ds1","ds2","ds3","ds4","ds5","ds6","ds7","enable","enable","enabled","eq","eq","eq","eq","eq","eq","eq","eq","flip","freq_range","from","from","from","from","from","from","from","from","into","into","into","into","into","into","into","into","passwd","passwd","passwd","randombit","set_badwrite","set_count","set_div","set_div_running","set_ds0","set_ds1","set_ds2","set_ds3","set_ds4","set_ds5","set_ds6","set_ds7","set_enable","set_enable","set_enabled","set_flip","set_freq_range","set_passwd","set_passwd","set_passwd","set_randombit","set_shift","set_stable","shift","stable","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","DISABLE","Div","ENABLE","Enable","FreqRange","HIGH","LOW","MEDIUM","PASS","PASS","Passwd","TOOHIGH","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","cmp","cmp","cmp","cmp","eq","eq","eq","eq","from","from","from","from","into","into","into","into","partial_cmp","partial_cmp","partial_cmp","partial_cmp","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","Rtc","borrow","borrow_mut","clkdiv_m1","clone","ctrl","eq","from","inte","intf","into","intr","ints","irq_setup_0","irq_setup_1","regs","rtc_0","rtc_1","setup_0","setup_1","try_from","try_into","type_id","ClkdivM1","Ctrl","Int","IrqSetup0","IrqSetup1","Rtc0","Rtc1","Setup0","Setup1","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clkdiv_m1","clone","clone","clone","clone","clone","clone","clone","clone","clone","day","day","day","day_ena","default","default","default","default","default","default","default","default","default","dotw","dotw","dotw","dotw_ena","eq","eq","eq","eq","eq","eq","eq","eq","eq","force_notleapyear","from","from","from","from","from","from","from","from","from","hour","hour","hour","hour_ena","into","into","into","into","into","into","into","into","into","load","match_active","match_ena","min","min","min","min_ena","month","month","month","month_ena","rtc","rtc_active","rtc_enable","sec","sec","sec","sec_ena","set_clkdiv_m1","set_day","set_day","set_day","set_day_ena","set_dotw","set_dotw","set_dotw","set_dotw_ena","set_force_notleapyear","set_hour","set_hour","set_hour","set_hour_ena","set_load","set_match_active","set_match_ena","set_min","set_min","set_min","set_min_ena","set_month","set_month","set_month","set_month_ena","set_rtc","set_rtc_active","set_rtc_enable","set_sec","set_sec","set_sec","set_sec_ena","set_year","set_year","set_year","set_year_ena","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","year","year","year","year_ena","Div","Fifo","Gpio","Interp","Sio","accum0","accum0_add","accum1","accum1_add","base0","base1","base2","base_1and0","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","cpuid","csr","ctrl_lane0","ctrl_lane1","div","eq","eq","eq","eq","eq","fifo","from","from","from","from","from","gpio_in","gpio_oe","gpio_out","interp","into","into","into","into","into","peek_full","peek_lane0","peek_lane1","pop_full","pop_lane0","pop_lane1","quotient","rd","regs","remainder","sdividend","sdivisor","spinlock","spinlock_st","st","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","udividend","udivisor","value","value_clr","value_set","value_xor","wr","DivCsr","FifoSt","Interp0accum0add","Interp0accum1add","Interp0ctrlLane0","Interp0ctrlLane1","Interp1accum0add","Interp1accum1add","Interp1ctrlLane0","Interp1ctrlLane1","add_raw","add_raw","add_raw","add_raw","blend","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clamp","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","cross_input","cross_input","cross_input","cross_input","cross_result","cross_result","cross_result","cross_result","default","default","default","default","default","default","default","default","default","default","dirty","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","force_msb","force_msb","force_msb","force_msb","from","from","from","from","from","from","from","from","from","from","interp0_accum0_add","interp0_accum1_add","interp1_accum0_add","interp1_accum1_add","into","into","into","into","into","into","into","into","into","into","mask_lsb","mask_lsb","mask_lsb","mask_lsb","mask_msb","mask_msb","mask_msb","mask_msb","overf","overf","overf0","overf0","overf1","overf1","rdy","ready","roe","set_add_raw","set_add_raw","set_add_raw","set_add_raw","set_blend","set_clamp","set_cross_input","set_cross_input","set_cross_input","set_cross_input","set_cross_result","set_cross_result","set_cross_result","set_cross_result","set_dirty","set_force_msb","set_force_msb","set_force_msb","set_force_msb","set_interp0_accum0_add","set_interp0_accum1_add","set_interp1_accum0_add","set_interp1_accum1_add","set_mask_lsb","set_mask_lsb","set_mask_lsb","set_mask_lsb","set_mask_msb","set_mask_msb","set_mask_msb","set_mask_msb","set_overf","set_overf","set_overf0","set_overf0","set_overf1","set_overf1","set_rdy","set_ready","set_roe","set_shift","set_shift","set_shift","set_shift","set_signed","set_signed","set_signed","set_signed","set_vld","set_wof","shift","shift","shift","shift","signed","signed","signed","signed","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","vld","wof","Spi","borrow","borrow_mut","clone","cpsr","cr0","cr1","dmacr","dr","eq","from","icr","imsc","into","mis","pcellid0","pcellid1","pcellid2","pcellid3","periphid0","periphid1","periphid2","periphid3","regs","ris","sr","try_from","try_into","type_id","Cpsr","Cr0","Cr1","Dmacr","Dr","Icr","Imsc","Mis","Pcellid0","Pcellid1","Pcellid2","Pcellid3","Periphid0","Periphid1","Periphid2","Periphid3","Ris","Sr","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","bsy","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","configuration","cpsdvsr","data","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","designer0","designer1","dss","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","frf","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","lbm","ms","partnumber0","partnumber1","revision","rff","rne","roric","rorim","rormis","rorris","rtic","rtim","rtmis","rtris","rxdmae","rxim","rxmis","rxris","scr","set_bsy","set_configuration","set_cpsdvsr","set_data","set_designer0","set_designer1","set_dss","set_frf","set_lbm","set_ms","set_partnumber0","set_partnumber1","set_revision","set_rff","set_rne","set_roric","set_rorim","set_rormis","set_rorris","set_rtic","set_rtim","set_rtmis","set_rtris","set_rxdmae","set_rxim","set_rxmis","set_rxris","set_scr","set_sod","set_sph","set_spo","set_sse","set_ssppcellid0","set_ssppcellid1","set_ssppcellid2","set_ssppcellid3","set_tfe","set_tnf","set_txdmae","set_txim","set_txmis","set_txris","sod","sph","spo","sse","ssppcellid0","ssppcellid1","ssppcellid2","ssppcellid3","tfe","tnf","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","txdmae","txim","txmis","txris","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","Syscfg","borrow","borrow_mut","clone","dbgforce","eq","from","into","mempowerdown","proc0_nmi_mask","proc1_nmi_mask","proc_config","proc_in_sync_bypass","proc_in_sync_bypass_hi","regs","try_from","try_into","type_id","Dbgforce","Mempowerdown","ProcConfig","ProcInSyncBypass","ProcInSyncBypassHi","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","default","default","default","default","default","eq","eq","eq","eq","eq","from","from","from","from","from","into","into","into","into","into","proc0_attach","proc0_dap_instid","proc0_halted","proc0_swclk","proc0_swdi","proc0_swdo","proc1_attach","proc1_dap_instid","proc1_halted","proc1_swclk","proc1_swdi","proc1_swdo","proc_in_sync_bypass","proc_in_sync_bypass_hi","rom","set_proc0_attach","set_proc0_dap_instid","set_proc0_halted","set_proc0_swclk","set_proc0_swdi","set_proc0_swdo","set_proc1_attach","set_proc1_dap_instid","set_proc1_halted","set_proc1_swclk","set_proc1_swdi","set_proc1_swdo","set_proc_in_sync_bypass","set_proc_in_sync_bypass_hi","set_rom","set_sram0","set_sram1","set_sram2","set_sram3","set_sram4","set_sram5","set_usb","sram0","sram1","sram2","sram3","sram4","sram5","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","usb","Sysinfo","borrow","borrow_mut","chip_id","clone","eq","from","gitref_rp2040","into","platform","regs","try_from","try_into","type_id","ChipId","Platform","asic","borrow","borrow","borrow_mut","borrow_mut","clone","clone","default","default","eq","eq","fpga","from","from","into","into","manufacturer","part","revision","set_asic","set_fpga","set_manufacturer","set_part","set_revision","try_from","try_from","try_into","try_into","type_id","type_id","Tbman","borrow","borrow_mut","clone","eq","from","into","platform","regs","try_from","try_into","type_id","Platform","asic","borrow","borrow_mut","clone","default","eq","fpga","from","into","set_asic","set_fpga","try_from","try_into","type_id","Timer","alarm","armed","borrow","borrow_mut","clone","dbgpause","eq","from","inte","intf","into","intr","ints","pause","regs","timehr","timehw","timelr","timelw","timerawh","timerawl","try_from","try_into","type_id","Armed","Dbgpause","Int","Pause","alarm","armed","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","dbg0","dbg1","default","default","default","default","eq","eq","eq","eq","from","from","from","from","into","into","into","into","pause","set_alarm","set_armed","set_dbg0","set_dbg1","set_pause","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","Uart","borrow","borrow_mut","clone","eq","from","into","regs","try_from","try_into","type_id","uartcr","uartdmacr","uartdr","uartfbrd","uartfr","uartibrd","uarticr","uartifls","uartilpr","uartimsc","uartlcr_h","uartmis","uartpcellid0","uartpcellid1","uartpcellid2","uartpcellid3","uartperiphid0","uartperiphid1","uartperiphid2","uartperiphid3","uartris","uartrsr","Uartcr","Uartdmacr","Uartdr","Uartfbrd","Uartfr","Uartibrd","Uarticr","Uartifls","Uartilpr","Uartimsc","UartlcrH","Uartmis","Uartpcellid0","Uartpcellid1","Uartpcellid2","Uartpcellid3","Uartperiphid0","Uartperiphid1","Uartperiphid2","Uartperiphid3","Uartris","Uartrsr","baud_divfrac","baud_divint","be","be","beic","beim","bemis","beris","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","brk","busy","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","configuration","cts","ctsen","ctsmic","ctsmim","ctsmmis","ctsrmis","data","dcd","dcdmic","dcdmim","dcdmmis","dcdrmis","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","designer0","designer1","dmaonerr","dsr","dsrmic","dsrmim","dsrmmis","dsrrmis","dtr","eps","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","fe","fe","feic","feim","femis","fen","feris","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","ilpdvsr","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","lbe","oe","oe","oeic","oeim","oemis","oeris","out1","out2","partnumber0","partnumber1","pe","pe","peic","peim","pemis","pen","peris","revision","ri","rimic","rimim","rimmis","rirmis","rtic","rtim","rtmis","rtris","rts","rtsen","rxdmae","rxe","rxfe","rxff","rxic","rxiflsel","rxim","rxmis","rxris","set_baud_divfrac","set_baud_divint","set_be","set_be","set_beic","set_beim","set_bemis","set_beris","set_brk","set_busy","set_configuration","set_cts","set_ctsen","set_ctsmic","set_ctsmim","set_ctsmmis","set_ctsrmis","set_data","set_dcd","set_dcdmic","set_dcdmim","set_dcdmmis","set_dcdrmis","set_designer0","set_designer1","set_dmaonerr","set_dsr","set_dsrmic","set_dsrmim","set_dsrmmis","set_dsrrmis","set_dtr","set_eps","set_fe","set_fe","set_feic","set_feim","set_femis","set_fen","set_feris","set_ilpdvsr","set_lbe","set_oe","set_oe","set_oeic","set_oeim","set_oemis","set_oeris","set_out1","set_out2","set_partnumber0","set_partnumber1","set_pe","set_pe","set_peic","set_peim","set_pemis","set_pen","set_peris","set_revision","set_ri","set_rimic","set_rimim","set_rimmis","set_rirmis","set_rtic","set_rtim","set_rtmis","set_rtris","set_rts","set_rtsen","set_rxdmae","set_rxe","set_rxfe","set_rxff","set_rxic","set_rxiflsel","set_rxim","set_rxmis","set_rxris","set_siren","set_sirlp","set_sps","set_stp2","set_txdmae","set_txe","set_txfe","set_txff","set_txic","set_txiflsel","set_txim","set_txmis","set_txris","set_uarten","set_uartpcellid0","set_uartpcellid1","set_uartpcellid2","set_uartpcellid3","set_wlen","siren","sirlp","sps","stp2","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","txdmae","txe","txfe","txff","txic","txiflsel","txim","txmis","txris","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","uarten","uartpcellid0","uartpcellid1","uartpcellid2","uartpcellid3","wlen","Usb","addr_endp","addr_endp_x","borrow","borrow_mut","buff_cpu_should_handle","buff_status","clone","ep_abort","ep_abort_done","ep_stall_arm","ep_status_stall_nak","eq","from","int_ep_ctrl","inte","intf","into","intr","ints","main_ctrl","nak_poll","regs","sie_ctrl","sie_status","sof_rd","sof_wr","try_from","try_into","type_id","usb_muxing","usb_pwr","usbphy_direct","usbphy_direct_override","usbphy_trim","AddrEndp","AddrEndpX","BuffCpuShouldHandle","BuffStatus","EpAbort","EpAbortDone","EpStallArm","EpStatusStallNak","Int","IntEpCtrl","MainCtrl","NakPoll","SieCtrl","SieStatus","SofRd","SofWr","UsbMuxing","UsbPwr","UsbphyDirect","UsbphyDirectOverride","UsbphyTrim","abort_done","ack_rec","address","address","bit_stuff_error","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","buff_status","bus_reset","bus_reset","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","connected","controller_en","count","count","crc_error","data_seq_error","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","delay_fs","delay_ls","dev_conn_dis","dev_resume_from_host","dev_sof","dev_suspend","direct_dm","direct_dp","direct_en","dm_ovcn","dm_ovv","dm_pulldn_en","dm_pulldn_en_override_en","dm_pulldn_trim","dm_pullup_en","dm_pullup_hisel","dm_pullup_hisel_override_en","dm_pullup_override_en","dp_ovcn","dp_ovv","dp_pulldn_en","dp_pulldn_en_override_en","dp_pulldn_trim","dp_pullup_en","dp_pullup_en_override_en","dp_pullup_hisel","dp_pullup_hisel_override_en","endpoint","endpoint","ep0_double_buf","ep0_in","ep0_int_1buf","ep0_int_2buf","ep0_int_nak","ep0_int_stall","ep0_out","ep_in","ep_in","ep_in","ep_in","ep_in","ep_out","ep_out","ep_out","ep_out","ep_out","ep_stall_nak","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","error_bit_stuff","error_crc","error_data_seq","error_rx_overflow","error_rx_timeout","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","host_conn_dis","host_ndevice","host_resume","host_sof","int_ep_active","intep_dir","intep_preamble","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","keep_alive_en","line_state","nak_rec","overcurr_detect","overcurr_detect_en","preamble_en","pulldown_en","pullup_en","receive_data","reset_bus","resume","resume","rpu_opt","rx_dd","rx_dm","rx_dp","rx_overflow","rx_pd","rx_pd_override_en","rx_timeout","send_data","send_setup","set_abort_done","set_ack_rec","set_address","set_address","set_bit_stuff_error","set_buff_status","set_bus_reset","set_bus_reset","set_connected","set_controller_en","set_count","set_count","set_crc_error","set_data_seq_error","set_delay_fs","set_delay_ls","set_dev_conn_dis","set_dev_resume_from_host","set_dev_sof","set_dev_suspend","set_direct_dm","set_direct_dp","set_direct_en","set_dm_ovcn","set_dm_ovv","set_dm_pulldn_en","set_dm_pulldn_en_override_en","set_dm_pulldn_trim","set_dm_pullup_en","set_dm_pullup_hisel","set_dm_pullup_hisel_override_en","set_dm_pullup_override_en","set_dp_ovcn","set_dp_ovv","set_dp_pulldn_en","set_dp_pulldn_en_override_en","set_dp_pulldn_trim","set_dp_pullup_en","set_dp_pullup_en_override_en","set_dp_pullup_hisel","set_dp_pullup_hisel_override_en","set_endpoint","set_endpoint","set_ep0_double_buf","set_ep0_in","set_ep0_int_1buf","set_ep0_int_2buf","set_ep0_int_nak","set_ep0_int_stall","set_ep0_out","set_ep_in","set_ep_in","set_ep_in","set_ep_in","set_ep_in","set_ep_out","set_ep_out","set_ep_out","set_ep_out","set_ep_out","set_ep_stall_nak","set_error_bit_stuff","set_error_crc","set_error_data_seq","set_error_rx_overflow","set_error_rx_timeout","set_host_conn_dis","set_host_ndevice","set_host_resume","set_host_sof","set_int_ep_active","set_intep_dir","set_intep_preamble","set_keep_alive_en","set_line_state","set_nak_rec","set_overcurr_detect","set_overcurr_detect_en","set_preamble_en","set_pulldown_en","set_pullup_en","set_receive_data","set_reset_bus","set_resume","set_resume","set_rpu_opt","set_rx_dd","set_rx_dm","set_rx_dp","set_rx_overflow","set_rx_pd","set_rx_pd_override_en","set_rx_timeout","set_send_data","set_send_setup","set_setup_rec","set_setup_req","set_sim_timing","set_sof_en","set_sof_sync","set_softcon","set_speed","set_stall","set_stall_rec","set_start_trans","set_stop_trans","set_suspended","set_to_digital_pad","set_to_extphy","set_to_phy","set_trans_complete","set_trans_complete","set_transceiver_pd","set_tx_diffmode","set_tx_diffmode_override_en","set_tx_dm","set_tx_dm_oe","set_tx_dm_oe_override_en","set_tx_dm_override_en","set_tx_dp","set_tx_dp_oe","set_tx_dp_oe_override_en","set_tx_dp_override_en","set_tx_fsslew","set_tx_fsslew_override_en","set_tx_pd","set_tx_pd_override_en","set_vbus_detect","set_vbus_detect","set_vbus_detect_override_en","set_vbus_detected","set_vbus_en","set_vbus_en","set_vbus_en_override_en","set_vbus_over_curr","setup_rec","setup_req","sim_timing","sof_en","sof_sync","softcon","speed","stall","stall_rec","start_trans","stop_trans","suspended","to_digital_pad","to_extphy","to_phy","trans_complete","trans_complete","transceiver_pd","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","tx_diffmode","tx_diffmode_override_en","tx_dm","tx_dm_oe","tx_dm_oe_override_en","tx_dm_override_en","tx_dp","tx_dp_oe","tx_dp_oe_override_en","tx_dp_override_en","tx_fsslew","tx_fsslew_override_en","tx_pd","tx_pd_override_en","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","vbus_detect","vbus_detect","vbus_detect_override_en","vbus_detected","vbus_en","vbus_en","vbus_en_override_en","vbus_over_curr","UsbDpram","borrow","borrow_mut","clone","ep_in_buffer_control","ep_in_control","ep_out_buffer_control","ep_out_control","eq","from","into","regs","setup_packet_high","setup_packet_low","try_from","try_into","type_id","vals","EpBufferControl","EpControl","SetupPacketHigh","SetupPacketLow","available","bmrequesttype","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","brequest","buffer_address","clone","clone","clone","clone","default","default","default","default","double_buffer_iso_offset","double_buffered","enable","endpoint_type","eq","eq","eq","eq","from","from","from","from","full","interrupt_on_nak","interrupt_on_stall","interrupt_per_buff","interrupt_per_double_buff","into","into","into","into","last","length","pid","reset","set_available","set_bmrequesttype","set_brequest","set_buffer_address","set_double_buffer_iso_offset","set_double_buffered","set_enable","set_endpoint_type","set_full","set_interrupt_on_nak","set_interrupt_on_stall","set_interrupt_per_buff","set_interrupt_per_double_buff","set_last","set_length","set_pid","set_reset","set_stall","set_windex","set_wlength","set_wvalue","stall","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","windex","wlength","wvalue","BULK","CONTROL","EpBufferControlDoubleBufferIsoOffset","EpControlEndpointType","INTERRUPT","ISOCHRONOUS","_1024","_128","_256","_512","borrow","borrow","borrow_mut","borrow_mut","clone","clone","cmp","cmp","eq","eq","from","from","into","into","partial_cmp","partial_cmp","try_from","try_from","try_into","try_into","type_id","type_id","VregAndChipReset","bod","borrow","borrow_mut","chip_reset","clone","eq","from","into","regs","try_from","try_into","type_id","vreg","Bod","ChipReset","Vreg","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","default","default","default","en","en","eq","eq","eq","from","from","from","had_por","had_psm_restart","had_run","hiz","into","into","into","psm_restart_flag","rok","set_en","set_en","set_had_por","set_had_psm_restart","set_had_run","set_hiz","set_psm_restart_flag","set_rok","set_vsel","set_vsel","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","vsel","vsel","Watchdog","borrow","borrow_mut","clone","ctrl","eq","from","into","load","reason","regs","scratch0","scratch1","scratch2","scratch3","scratch4","scratch5","scratch6","scratch7","tick","try_from","try_into","type_id","Ctrl","Load","Reason","Tick","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","count","cycles","default","default","default","default","enable","enable","eq","eq","eq","eq","force","from","from","from","from","into","into","into","into","load","pause_dbg0","pause_dbg1","pause_jtag","running","set_count","set_cycles","set_enable","set_enable","set_force","set_load","set_pause_dbg0","set_pause_dbg1","set_pause_jtag","set_running","set_time","set_timer","set_trigger","time","timer","trigger","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","XipCtrl","borrow","borrow_mut","clone","ctr_acc","ctr_hit","ctrl","eq","flush","from","into","regs","stat","stream_addr","stream_ctr","stream_fifo","try_from","try_into","type_id","Ctrl","Flush","Stat","StreamAddr","StreamCtr","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","default","default","default","default","default","en","eq","eq","eq","eq","eq","err_badwrite","fifo_empty","fifo_full","flush","flush_ready","from","from","from","from","from","into","into","into","into","into","power_down","set_en","set_err_badwrite","set_fifo_empty","set_fifo_full","set_flush","set_flush_ready","set_power_down","set_stream_addr","set_stream_ctr","stream_addr","stream_ctr","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","XipSsi","baudr","borrow","borrow_mut","clone","ctrlr0","ctrlr1","dmacr","dmardlr","dmatdlr","dr0","eq","from","icr","idr","imr","into","isr","msticr","mwcr","regs","risr","rx_sample_dly","rxflr","rxftlr","rxoicr","rxuicr","ser","spi_ctrlr0","sr","ssi_version_id","ssienr","try_from","try_into","txd_drive_edge","txflr","txftlr","txoicr","type_id","vals","Baudr","Ctrlr0","Ctrlr1","Dmacr","Dmardlr","Dmatdlr","Icr","Imr","Isr","Msticr","Mwcr","Risr","RxSampleDly","Rxflr","Rxftlr","Rxoicr","Rxuicr","Ser","SpiCtrlr0","Sr","Ssienr","TxdDriveEdge","Txflr","Txftlr","Txoicr","addr_l","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","busy","cfs","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","dcol","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","dfs","dfs_32","dmardl","dmatdl","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","frf","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","icr","inst_ddr_en","inst_l","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","mdd","mhs","msticr","mstim","mstir","mstis","mwmod","ndf","rdmae","rff","rfne","rft","rsd","rxfim","rxfir","rxfis","rxoicr","rxoim","rxoir","rxois","rxtfl","rxuicr","rxuim","rxuir","rxuis","sckdv","scph","scpol","ser","set_addr_l","set_busy","set_cfs","set_dcol","set_dfs","set_dfs_32","set_dmardl","set_dmatdl","set_frf","set_icr","set_inst_ddr_en","set_inst_l","set_mdd","set_mhs","set_msticr","set_mstim","set_mstir","set_mstis","set_mwmod","set_ndf","set_rdmae","set_rff","set_rfne","set_rft","set_rsd","set_rxfim","set_rxfir","set_rxfis","set_rxoicr","set_rxoim","set_rxoir","set_rxois","set_rxtfl","set_rxuicr","set_rxuim","set_rxuir","set_rxuis","set_sckdv","set_scph","set_scpol","set_ser","set_slv_oe","set_spi_ddr_en","set_spi_frf","set_spi_rxds_en","set_srl","set_ssi_en","set_sste","set_tde","set_tdmae","set_tfe","set_tfnf","set_tft","set_tftfl","set_tmod","set_trans_type","set_txe","set_txeim","set_txeir","set_txeis","set_txoicr","set_txoim","set_txoir","set_txois","set_wait_cycles","set_xip_cmd","slv_oe","spi_ddr_en","spi_frf","spi_rxds_en","srl","ssi_en","sste","tde","tdmae","tfe","tfnf","tft","tftfl","tmod","trans_type","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","txe","txeim","txeir","txeis","txoicr","txoim","txoir","txois","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","wait_cycles","xip_cmd","DUAL","EEPROM_READ","InstL","NONE","QUAD","RX_ONLY","STD","SpiFrf","TX_AND_RX","TX_ONLY","Tmod","TransType","_16B","_1C1A","_1C2A","_2C2A","_4B","_8B","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","cmp","cmp","cmp","cmp","eq","eq","eq","eq","from","from","from","from","into","into","into","into","partial_cmp","partial_cmp","partial_cmp","partial_cmp","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","Xosc","borrow","borrow_mut","clone","count","ctrl","dormant","eq","from","into","regs","startup","status","try_from","try_into","type_id","vals","Count","Ctrl","Startup","Status","badwrite","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","count","default","default","default","default","delay","enable","enabled","eq","eq","eq","eq","freq_range","freq_range","from","from","from","from","into","into","into","into","set_badwrite","set_count","set_delay","set_enable","set_enabled","set_freq_range","set_freq_range","set_stable","set_x4","stable","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","x4","CtrlFreqRange","DISABLE","ENABLE","Enable","RESERVED_1","RESERVED_1","RESERVED_2","RESERVED_2","RESERVED_3","RESERVED_3","StatusFreqRange","_1_15MHZ","_1_15MHZ","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","cmp","cmp","cmp","eq","eq","eq","from","from","from","into","into","into","partial_cmp","partial_cmp","partial_cmp","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id"],"q":[[0,"rp_pac"],[102,"rp_pac::adc"],[122,"rp_pac::adc::regs"],[238,"rp_pac::busctrl"],[254,"rp_pac::busctrl::regs"],[312,"rp_pac::busctrl::vals"],[344,"rp_pac::clocks"],[405,"rp_pac::clocks::regs"],[1249,"rp_pac::clocks::vals"],[1502,"rp_pac::common"],[1551,"rp_pac::dma"],[1606,"rp_pac::dma::regs"],[1847,"rp_pac::dma::vals"],[1897,"rp_pac::i2c"],[1951,"rp_pac::i2c::regs"],[2645,"rp_pac::i2c::vals"],[2660,"rp_pac::io"],[2701,"rp_pac::io::regs"],[2768,"rp_pac::io::vals"],[3483,"rp_pac::pads"],[3497,"rp_pac::pads::regs"],[3535,"rp_pac::pads::vals"],[3565,"rp_pac::pio"],[3622,"rp_pac::pio::regs"],[3921,"rp_pac::pio::vals"],[3935,"rp_pac::pll"],[3950,"rp_pac::pll::regs"],[4014,"rp_pac::psm"],[4029,"rp_pac::psm::regs"],[4209,"rp_pac::pwm"],[4242,"rp_pac::pwm::regs"],[4458,"rp_pac::pwm::vals"],[4474,"rp_pac::resets"],[4488,"rp_pac::resets::regs"],[4610,"rp_pac::rosc"],[4631,"rp_pac::rosc::regs"],[4765,"rp_pac::rosc::vals"],[4821,"rp_pac::rtc"],[4844,"rp_pac::rtc::regs"],[5015,"rp_pac::sio"],[5105,"rp_pac::sio::regs"],[5315,"rp_pac::spi"],[5344,"rp_pac::spi::regs"],[5626,"rp_pac::syscfg"],[5644,"rp_pac::syscfg::regs"],[5743,"rp_pac::sysinfo"],[5757,"rp_pac::sysinfo::regs"],[5789,"rp_pac::tbman"],[5801,"rp_pac::tbman::regs"],[5816,"rp_pac::timer"],[5841,"rp_pac::timer::regs"],[5895,"rp_pac::uart"],[5928,"rp_pac::uart::regs"],[6368,"rp_pac::usb"],[6403,"rp_pac::usb::regs"],[6904,"rp_pac::usb_dpram"],[6922,"rp_pac::usb_dpram::regs"],[7008,"rp_pac::usb_dpram::vals"],[7040,"rp_pac::vreg_and_chip_reset"],[7054,"rp_pac::vreg_and_chip_reset::regs"],[7107,"rp_pac::watchdog"],[7130,"rp_pac::watchdog::regs"],[7200,"rp_pac::xip_ctrl"],[7219,"rp_pac::xip_ctrl::regs"],[7292,"rp_pac::xip_ssi"],[7332,"rp_pac::xip_ssi::regs"],[7739,"rp_pac::xip_ssi::vals"],[7801,"rp_pac::xosc"],[7818,"rp_pac::xosc::regs"],[7880,"rp_pac::xosc::vals"]],"d":["Control and data interface to SAR ADC","22 - ADC_IRQ_FIFO","Register block for busfabric control signals and …","","17 - CLOCKS_IRQ","DMA with separate read and write masters","11 - DMA_IRQ_0","12 - DMA_IRQ_1","DW_apb_i2c address block List of configuration constants …","23 - I2C0_IRQ","","24 - I2C1_IRQ","","13 - IO_IRQ_BANK0","14 - IO_IRQ_QSPI","","","","","Programmable IO block","7 - PIO0_IRQ_0","8 - PIO0_IRQ_1","","9 - PIO1_IRQ_0","10 - PIO1_IRQ_1","","","","Simple PWM","4 - PWM_IRQ_WRAP","","","Register block to control RTC","25 - RTC_IRQ","Single-cycle IO block Provides core-local and inter-core …","15 - SIO_IRQ_PROC0","16 - SIO_IRQ_PROC1","","18 - SPI0_IRQ","","19 - SPI1_IRQ","Register block for various chip control signals","","Testbench manager. Allows the programmer to know what …","Controls time and alarms time is a 64 bit value indicating …","0 - TIMER_IRQ_0","1 - TIMER_IRQ_1","2 - TIMER_IRQ_2","3 - TIMER_IRQ_3","","20 - UART0_IRQ","","21 - UART1_IRQ","DPRAM layout for USB device.","5 - USBCTRL_IRQ","USB FS/LS controller device registers","control and status for on-chip voltage regulator and chip …","","QSPI flash execute-in-place block","6 - XIP_IRQ","DW_apb_ssi has the following features: * APB interface – …","Controls the crystal oscillator","","","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","Control and data interface to SAR ADC","","","","ADC Control and Status","Clock divider. If non-zero, CS_START_MANY will start …","","FIFO control and status","Conversion result FIFO","Returns the argument unchanged.","Interrupt Enable","Interrupt Force","Calls <code>U::from(self)</code>.","Raw Interrupts","Interrupt status after masking &amp; forcing","","Result of most recent ADC conversion","","","","ADC Control and Status","Clock divider. If non-zero, CS_START_MANY will start …","FIFO control and status","Conversion result FIFO","Interrupt Enable","Result of most recent ADC conversion","Select analog mux input. Updated automatically in …","","","","","","","","","","","","","","","","","","","","","","","","","If 1: assert DMA requests when FIFO contains data","","If 1: write result to the FIFO after each conversion.","Power on ADC and enable its clock. 1 - enabled. 0 - …","","","","","","","1 if this particular sample experienced a conversion …","If 1: conversion error bit appears in the FIFO alongside …","The most recent ADC conversion encountered an error; …","Some past ADC conversion encountered an error. Write 1 to …","Triggered when the sample FIFO reaches a certain level. …","Fractional part of clock divisor. First-order delta-sigma.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Integer part of clock divisor.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","The number of conversion results currently waiting in the …","1 if the FIFO has been overflowed. Write 1 to clear.","1 if the ADC is ready to start a new conversion. Implies …","","Round-robin sampling. 1 bit per channel. Set all bits to 0 …","Select analog mux input. Updated automatically in …","If 1: assert DMA requests when FIFO contains data","","If 1: write result to the FIFO after each conversion.","Power on ADC and enable its clock. 1 - enabled. 0 - …","1 if this particular sample experienced a conversion …","If 1: conversion error bit appears in the FIFO alongside …","The most recent ADC conversion encountered an error; …","Some past ADC conversion encountered an error. Write 1 to …","Triggered when the sample FIFO reaches a certain level. …","Fractional part of clock divisor. First-order delta-sigma.","","Integer part of clock divisor.","The number of conversion results currently waiting in the …","1 if the FIFO has been overflowed. Write 1 to clear.","1 if the ADC is ready to start a new conversion. Implies …","","Round-robin sampling. 1 bit per channel. Set all bits to 0 …","If 1: FIFO results are right-shifted to be one byte in …","Continuously perform conversions whilst this bit is 1. A …","Start a single conversion. Self-clearing. Ignored if …","DREQ/IRQ asserted when level &gt;= threshold","Power on temperature sensor. 1 - enabled. 0 - disabled.","1 if the FIFO has been underflowed. Write 1 to clear.","","If 1: FIFO results are right-shifted to be one byte in …","Continuously perform conversions whilst this bit is 1. A …","Start a single conversion. Self-clearing. Ignored if …","DREQ/IRQ asserted when level &gt;= threshold","","","","","","","","","","","","","Power on temperature sensor. 1 - enabled. 0 - disabled.","","","","","","","1 if the FIFO has been underflowed. Write 1 to clear.","","Register block for busfabric control signals and …","","","Set the priority of each master for bus arbitration.","Bus priority acknowledge","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Bus fabric performance counter 0","Bus fabric performance event select for PERFCTR0","","","","","","Set the priority of each master for bus arbitration.","Bus priority acknowledge","Bus fabric performance counter 0","Bus fabric performance event select for PERFCTR1","","","","","","","","","Goes to 1 once all arbiters have registered the new global …","","","","","","","","","0 - low priority, 1 - high priority","0 - low priority, 1 - high priority","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Busfabric saturating performance counter 0 Count some …","Select an event for PERFCTR1. Count either contested …","0 - low priority, 1 - high priority","0 - low priority, 1 - high priority","Goes to 1 once all arbiters have registered the new global …","0 - low priority, 1 - high priority","0 - low priority, 1 - high priority","Busfabric saturating performance counter 0 Count some …","Select an event for PERFCTR1. Count either contested …","0 - low priority, 1 - high priority","0 - low priority, 1 - high priority","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","","","","Clock control, can be changed on-the-fly (except for …","Clock divisor, can be changed on-the-fly","Indicates which SRC is currently selected by the …","Clock control, can be changed on-the-fly (except for …","Clock divisor, can be changed on-the-fly","Indicates which SRC is currently selected by the …","Clock control, can be changed on-the-fly (except for …","Clock divisor, can be changed on-the-fly","Indicates which SRC is currently selected by the …","Clock control, can be changed on-the-fly (except for …","Clock divisor, can be changed on-the-fly","Indicates which SRC is currently selected by the …","Clock control, can be changed on-the-fly (except for …","Clock divisor, can be changed on-the-fly","Indicates which SRC is currently selected by the …","Clock control, can be changed on-the-fly (except for …","Indicates which SRC is currently selected by the …","Clock control, can be changed on-the-fly (except for …","Clock divisor, can be changed on-the-fly","Indicates which SRC is currently selected by the …","Clock control, can be changed on-the-fly (except for …","Clock divisor, can be changed on-the-fly","Indicates which SRC is currently selected by the …","Clock control, can be changed on-the-fly (except for …","Clock divisor, can be changed on-the-fly","","","Indicates which SRC is currently selected by the …","Clock control, can be changed on-the-fly (except for …","Clock divisor, can be changed on-the-fly","Indicates which SRC is currently selected by the …","","indicates the state of the clock enable","indicates the state of the clock enable","","Delays the start of frequency counting to allow the mux to …","The test interval is 0.98us * 2<strong>interval, but let’s call </strong>…","Maximum pass frequency in kHz. This is optional. Set to …","Minimum pass frequency in kHz. This is optional. Set to 0 …","Reference clock frequency in kHz","Result of frequency measurement, only valid when …","Clock sent to frequency counter, set to 0 when not …","Frequency counter status","Returns the argument unchanged.","Interrupt Enable","Interrupt Force","Calls <code>U::from(self)</code>.","Raw Interrupts","Interrupt status after masking &amp; forcing","","enable clock in sleep mode","enable clock in sleep mode","","","","","enable clock in wake mode","enable clock in wake mode","Clock control, can be changed on-the-fly (except for …","Clock divisor, can be changed on-the-fly","Clock control, can be changed on-the-fly (except for …","Clock divisor, can be changed on-the-fly","Clock control, can be changed on-the-fly (except for …","Clock divisor, can be changed on-the-fly","Clock control, can be changed on-the-fly (except for …","Clock divisor, can be changed on-the-fly","Clock control, can be changed on-the-fly (except for …","Clock divisor, can be changed on-the-fly","Clock control, can be changed on-the-fly (except for …","Clock control, can be changed on-the-fly (except for …","Clock divisor, can be changed on-the-fly","Clock control, can be changed on-the-fly (except for …","Clock divisor, can be changed on-the-fly","Clock control, can be changed on-the-fly (except for …","Clock divisor, can be changed on-the-fly","","","Clock control, can be changed on-the-fly (except for …","Clock divisor, can be changed on-the-fly","indicates the state of the clock enable","indicates the state of the clock enable","Delays the start of frequency counting to allow the mux to …","The test interval is 0.98us * 2<strong>interval, but let’s call </strong>…","Maximum pass frequency in kHz. This is optional. Set to …","Minimum pass frequency in kHz. This is optional. Set to 0 …","Reference clock frequency in kHz","Result of frequency measurement, only valid when …","Clock sent to frequency counter, set to 0 when not …","Frequency counter status","Raw Interrupts","enable clock in sleep mode","enable clock in sleep mode","enable clock in wake mode","enable clock in wake mode","Selects the auxiliary clock source, will glitch when …","Selects the auxiliary clock source, will glitch when …","Selects the auxiliary clock source, will glitch when …","Selects the auxiliary clock source, will glitch when …","Selects the auxiliary clock source, will glitch when …","Selects the auxiliary clock source, will glitch when …","Selects the auxiliary clock source, will glitch when …","Selects the auxiliary clock source, will glitch when …","Selects the auxiliary clock source, will glitch when …","Selects the auxiliary clock source, will glitch when …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","For clearing the resus after the fault that triggered it …nables duty cycle correction for odd divisors","Enables duty cycle correction for odd divisors","Enables duty cycle correction for odd divisors","Enables duty cycle correction for odd divisors","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Test clock stopped during test","Test complete","Starts and stops the clock generator cleanly","Starts and stops the clock generator cleanly","Starts and stops the clock generator cleanly","Starts and stops the clock generator cleanly","Starts and stops the clock generator cleanly","Starts and stops the clock generator cleanly","Starts and stops the clock generator cleanly","Enable resus","Starts and stops the clock generator cleanly","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Test failed","Test clock faster than expected, only valid when …","","","","","","","Fractional component of the divisor","Fractional component of the divisor","Fractional component of the divisor","","Fractional component of the divisor","Fractional component of the divisor","Fractional component of the divisor","Force a resus, for test purposes only","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Integer component of the divisor, 0 -&gt; divide by 2^16","Integer component of the divisor, 0 -&gt; divide by 2^16","Integer component of the divisor, 0 -&gt; divide by 2^16","Integer component of the divisor, 0 -&gt; divide by 2^16","Integer component of the divisor, 0 -&gt; divide by 2^16","Integer component of the divisor, 0 -&gt; divide by 2^16","Integer component of the divisor, 0 -&gt; divide by 2^16","Integer component of the divisor, 0 -&gt; divide by 2^16","Integer component of the divisor, 0 -&gt; divide by 2^16","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","Asynchronously kills the clock generator","Asynchronously kills the clock generator","Asynchronously kills the clock generator","Asynchronously kills the clock generator","Asynchronously kills the clock generator","Asynchronously kills the clock generator","Asynchronously kills the clock generator","Asynchronously kills the clock generator","An edge on this signal shifts the phase of the output by 1 …","An edge on this signal shifts the phase of the output by 1 …","An edge on this signal shifts the phase of the output by 1 …","An edge on this signal shifts the phase of the output by 1 …","An edge on this signal shifts the phase of the output by 1 …","An edge on this signal shifts the phase of the output by 1 …","An edge on this signal shifts the phase of the output by 1 …","Test passed","This delays the enable signal by up to 3 cycles of the …","This delays the enable signal by up to 3 cycles of the …","This delays the enable signal by up to 3 cycles of the …","This delays the enable signal by up to 3 cycles of the …","This delays the enable signal by up to 3 cycles of the …","This delays the enable signal by up to 3 cycles of the …","This delays the enable signal by up to 3 cycles of the …","Clock has been resuscitated, correct the error then send …","Test running","Selects the auxiliary clock source, will glitch when …","Selects the auxiliary clock source, will glitch when …","Selects the auxiliary clock source, will glitch when …","Selects the auxiliary clock source, will glitch when …","Selects the auxiliary clock source, will glitch when …","Selects the auxiliary clock source, will glitch when …","Selects the auxiliary clock source, will glitch when …","Selects the auxiliary clock source, will glitch when …","Selects the auxiliary clock source, will glitch when …","Selects the auxiliary clock source, will glitch when …","For clearing the resus after the fault that triggered it …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Enables duty cycle correction for odd divisors","Enables duty cycle correction for odd divisors","Enables duty cycle correction for odd divisors","Enables duty cycle correction for odd divisors","Test clock stopped during test","Test complete","Starts and stops the clock generator cleanly","Starts and stops the clock generator cleanly","Starts and stops the clock generator cleanly","Starts and stops the clock generator cleanly","Starts and stops the clock generator cleanly","Starts and stops the clock generator cleanly","Starts and stops the clock generator cleanly","Enable resus","Starts and stops the clock generator cleanly","Test failed","Test clock faster than expected, only valid when …","","","","","","","Fractional component of the divisor","Fractional component of the divisor","Fractional component of the divisor","","Fractional component of the divisor","Fractional component of the divisor","Fractional component of the divisor","Force a resus, for test purposes only","Integer component of the divisor, 0 -&gt; divide by 2^16","Integer component of the divisor, 0 -&gt; divide by 2^16","Integer component of the divisor, 0 -&gt; divide by 2^16","Integer component of the divisor, 0 -&gt; divide by 2^16","Integer component of the divisor, 0 -&gt; divide by 2^16","Integer component of the divisor, 0 -&gt; divide by 2^16","Integer component of the divisor, 0 -&gt; divide by 2^16","Integer component of the divisor, 0 -&gt; divide by 2^16","Integer component of the divisor, 0 -&gt; divide by 2^16","","Asynchronously kills the clock generator","Asynchronously kills the clock generator","Asynchronously kills the clock generator","Asynchronously kills the clock generator","Asynchronously kills the clock generator","Asynchronously kills the clock generator","Asynchronously kills the clock generator","Asynchronously kills the clock generator","An edge on this signal shifts the phase of the output by 1 …","An edge on this signal shifts the phase of the output by 1 …","An edge on this signal shifts the phase of the output by 1 …","An edge on this signal shifts the phase of the output by 1 …","An edge on this signal shifts the phase of the output by 1 …","An edge on this signal shifts the phase of the output by 1 …","An edge on this signal shifts the phase of the output by 1 …","Test passed","This delays the enable signal by up to 3 cycles of the …","This delays the enable signal by up to 3 cycles of the …","This delays the enable signal by up to 3 cycles of the …","This delays the enable signal by up to 3 cycles of the …","This delays the enable signal by up to 3 cycles of the …","This delays the enable signal by up to 3 cycles of the …","This delays the enable signal by up to 3 cycles of the …","Clock has been resuscitated, correct the error then send …","Test running","Test clock slower than expected, only valid when …","Selects the clock source glitchlessly, can be changed …","Selects the clock source glitchlessly, can be changed …","This is expressed as a number of clk_ref cycles and must …","Waiting for test clock to start","Test clock slower than expected, only valid when …","Selects the clock source glitchlessly, can be changed …","Selects the clock source glitchlessly, can be changed …","This is expressed as a number of clk_ref cycles and must …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Waiting for test clock to starteturns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","DMA with separate read and write masters","Alias for channel 5 CTRL register","Alias for channel 5 READ_ADDR register","Alias for channel 5 TRANS_COUNT register This is a trigger …","Alias for channel 5 WRITE_ADDR register","Alias for channel 5 CTRL register","Alias for channel 5 READ_ADDR register","Alias for channel 5 TRANS_COUNT register","Alias for channel 5 WRITE_ADDR register This is a trigger …","Alias for channel 5 CTRL register","Alias for channel 5 READ_ADDR register This is a trigger …","Alias for channel 5 TRANS_COUNT register","Alias for channel 5 WRITE_ADDR register","","","","","","Abort an in-progress transfer sequence on one or more …","","","DMA Channel 5 Control and Status","Read: get channel DREQ counter (i.e. how many accesses the …","Read to get channel TRANS_COUNT reload value, i.e. the …","","","Debug RAF, WAF, TDF levels","Returns the argument unchanged.","Returns the argument unchanged.","Interrupt Enables for IRQ 0","Interrupt Enables for IRQ 1","Force Interrupts","Force Interrupts for IRQ 1","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Interrupt Status (raw)","Interrupt Status for IRQ 0","Interrupt Status (masked) for IRQ 1","Trigger one or more channels simultaneously","The number of channels this DMA instance is equipped with. …","DMA Channel 5 Read Address pointer This register updates …","","Sniffer Control","Data accumulator for sniff hardware Write an initial seed …","Pacing (X/Y) Fractional Timer The pacing timer produces …","DMA Channel 5 Transfer Count Program the number of bus …","","","","","","","","DMA Channel 5 Write Address pointer This register updates …","Abort an in-progress transfer sequence on one or more …","DMA Channel 9 Control and Status","Read: get channel DREQ counter (i.e. how many accesses the …","Debug RAF, WAF, TDF levels","Interrupt Enables for IRQ 0","Interrupt Enables for IRQ 1","Force Interrupts","Force Interrupts for IRQ 1","Interrupt Status (raw)","Interrupt Status for IRQ 0","Interrupt Status (masked) for IRQ 1","Trigger one or more channels simultaneously","The number of channels this DMA instance is equipped with. …","Sniffer Control","Pacing (X/Y) Fractional Timer The pacing timer produces …","Logical OR of the READ_ERROR and WRITE_ERROR flags. The …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Locally perform a byte reverse on the sniffed data, before …","Apply byte-swap transformation to DMA data. For byte data, …","This flag goes high when the channel starts a new transfer …","","","When this channel completes, it will trigger the channel …","Each bit corresponds to a channel. Writing a 1 aborts …","","","","","","","","","","","","","","","","Set the size of each bus transfer (byte/halfword/word). …","","","","","","","","","","","","","","","","DMA channel for Sniffer to observe","Enable sniffer","DMA Channel Enable. When 1, the channel will respond to …","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","HIGH_PRIORITY gives a channel preferential treatment in …","If 1, the read address increments with each transfer. If …","If 1, the write address increments with each transfer. If …","Set bit n to pass interrupts from channel n to DMA IRQ 0.","Set bit n to pass interrupts from channel n to DMA IRQ 1.","Write 1s to force the corresponding bits in INTE0. The …","Write 1s to force the corresponding bits in INTE0. The …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Raw interrupt status for DMA Channels 0..15. Bit n …","Indicates active channel interrupt requests which are …","Indicates active channel interrupt requests which are …","In QUIET mode, the channel does not generate IRQs at the …","Each bit in this register corresponds to a DMA channel. …","","If set, the result appears inverted (bitwise complement) …","If set, the result appears bit-reversed when read. This …","Current Read-Address-FIFO fill level","If 1, the channel received a read bus error. Write one to …","Select whether RING_SIZE applies to read or write …","Size of address wrap region. If 0, don’t wrap. For …","Logical OR of the READ_ERROR and WRITE_ERROR flags. The …","Locally perform a byte reverse on the sniffed data, before …","Apply byte-swap transformation to DMA data. For byte data, …","This flag goes high when the channel starts a new transfer …","","","When this channel completes, it will trigger the channel …","Each bit corresponds to a channel. Writing a 1 aborts …","Set the size of each bus transfer (byte/halfword/word). …","DMA channel for Sniffer to observe","Enable sniffer","DMA Channel Enable. When 1, the channel will respond to …","HIGH_PRIORITY gives a channel preferential treatment in …","If 1, the read address increments with each transfer. If …","If 1, the write address increments with each transfer. If …","Set bit n to pass interrupts from channel n to DMA IRQ 0.","Set bit n to pass interrupts from channel n to DMA IRQ 1.","Write 1s to force the corresponding bits in INTE0. The …","Write 1s to force the corresponding bits in INTE0. The …","Raw interrupt status for DMA Channels 0..15. Bit n …","Indicates active channel interrupt requests which are …","Indicates active channel interrupt requests which are …","In QUIET mode, the channel does not generate IRQs at the …","Each bit in this register corresponds to a DMA channel. …","","If set, the result appears inverted (bitwise complement) …","If set, the result appears bit-reversed when read. This …","Current Read-Address-FIFO fill level","If 1, the channel received a read bus error. Write one to …","Select whether RING_SIZE applies to read or write …","Size of address wrap region. If 0, don’t wrap. For …","If 1, this channel’s data transfers are visible to the …","Current Transfer-Data-FIFO fill level","Select a Transfer Request signal. The channel uses the …","Current Write-Address-FIFO fill level","If 1, the channel received a write bus error. Write one to …","Pacing Timer Dividend. Specifies the X value for the (X/Y) …","Pacing Timer Divisor. Specifies the Y value for the (X/Y) …","If 1, this channel’s data transfers are visible to the …","Current Transfer-Data-FIFO fill level","Select a Transfer Request signal. The channel uses the …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Current Write-Address-FIFO fill level","If 1, the channel received a write bus error. Write one to …","Pacing Timer Dividend. Specifies the X value for the (X/Y) …","Pacing Timer Divisor. Specifies the Y value for the (X/Y) …","Calculate a CRC-16-CCITT","Calculate a CRC-16-CCITT with bit reversed data","Calculate a CRC-32 (IEEE802.3 polynomial)","Calculate a CRC-32 (IEEE802.3 polynomial) with bit …","","","XOR reduction over all data. == 1 if the total 1 …","Permanent request, for unpaced transfers.","","","","Calculate a simple 32-bit checksum (addition with a 32 bit …","Select Timer 0 as TREQ","Select Timer 1 as TREQ","Select Timer 2 as TREQ (Optional)","Select Timer 3 as TREQ (Optional)","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","DW_apb_i2c address block List of configuration constants …","","","","","Returns the argument unchanged.","I2C ACK General Call Register The register controls …","Clear ACTIVITY Interrupt Register","Clear GEN_CALL Interrupt Register","Clear Combined and Individual Interrupt Register","Clear RD_REQ Interrupt Register","Clear RESTART_DET Interrupt Register","Clear RX_DONE Interrupt Register","Clear RX_OVER Interrupt Register","Clear RX_UNDER Interrupt Register","Clear START_DET Interrupt Register","Clear STOP_DET Interrupt Register","Clear TX_ABRT Interrupt Register","Clear TX_OVER Interrupt Register","Component Parameter Register 1 Note This register is not …","I2C Component Type Register","I2C Component Version Register","I2C Control Register. This register can be written only …","I2C Rx/Tx Data Buffer and Command Register; this is the …","DMA Control Register The register is used to enable the …","I2C Receive Data Level Register","DMA Transmit Data Level Register","I2C Enable Register","I2C Enable Status Register The register is used to report …","Fast Mode or Fast Mode Plus I2C Clock SCL High Count …","Fast Mode or Fast Mode Plus I2C Clock SCL Low Count …","I2C SS, FS or FM+ spike suppression limit This register is …","I2C Interrupt Mask Register. These bits mask their …","I2C Interrupt Status Register Each bit in this register …","I2C Raw Interrupt Status Register Unlike the IC_INTR_STAT …","I2C Receive FIFO Threshold Register","I2C Receive FIFO Level Register This register contains the …","I2C Slave Address Register","I2C SDA Hold Time Length Register The bits [15:0] of this …","I2C SDA Setup Register This register controls the amount …","Generate Slave Data NACK Register The register is used to …","Standard Speed I2C Clock SCL High Count Register","Standard Speed I2C Clock SCL Low Count Register","I2C Status Register This is a read-only register used to …","I2C Target Address Register This register is 12 bits wide, …","I2C Transmit Abort Source Register This register has 32 …","I2C Transmit FIFO Threshold Register","I2C Transmit FIFO Level Register This register contains …","Calls <code>U::from(self)</code>.","","","","","","I2C ACK General Call Register The register controls …","Clear ACTIVITY Interrupt Register","Clear GEN_CALL Interrupt Register","Clear Combined and Individual Interrupt Register","Clear RD_REQ Interrupt Register","Clear RESTART_DET Interrupt Register","Clear RX_DONE Interrupt Register","Clear RX_OVER Interrupt Register","Clear RX_UNDER Interrupt Register","Clear START_DET Interrupt Register","Clear STOP_DET Interrupt Register","Clear TX_ABRT Interrupt Register","Clear TX_OVER Interrupt Register","Component Parameter Register 1 Note This register is not …","I2C Control Register. This register can be written only …","I2C Rx/Tx Data Buffer and Command Register; this is the …","DMA Control Register The register is used to enable the …","I2C Receive Data Level Register","DMA Transmit Data Level Register","I2C Enable Register","I2C Enable Status Register The register is used to report …","Fast Mode or Fast Mode Plus I2C Clock SCL High Count …","Fast Mode or Fast Mode Plus I2C Clock SCL Low Count …","I2C SS, FS or FM+ spike suppression limit This register is …","I2C Interrupt Mask Register. These bits mask their …","I2C Interrupt Status Register Each bit in this register …","I2C Raw Interrupt Status Register Unlike the IC_INTR_STAT …","I2C Receive FIFO Threshold Register","I2C Receive FIFO Level Register This register contains the …","I2C Slave Address Register","I2C SDA Hold Time Length Register The bits [15:0] of this …","I2C SDA Setup Register This register controls the amount …","Generate Slave Data NACK Register The register is used to …","Standard Speed I2C Clock SCL High Count Register","Standard Speed I2C Clock SCL Low Count Register","I2C Status Register This is a read-only register used to …","I2C Target Address Register This register is 12 bits wide, …","I2C Transmit Abort Source Register This register has 32 …","I2C Transmit FIFO Threshold Register","I2C Transmit FIFO Level Register This register contains …","When set, the controller initiates the transfer abort. - …","This field indicates that the Master is in 10-bit address …","This field indicates that the Master is in 10-bit address …","This field indicates that the restart is disabled …","This field indicates that the Master is in 7-bit …","This field indicates that DW_apb_i2c in master mode has …","This field indicates that DW_apb_i2c in the master mode …","This field indicates that the Master is in High Speed mode …","This field indicates that the restart is disabled …","This field indicates that the User tries to initiate a …","This field indicates that the Master has sent a START Byte …","To clear Bit 9, the source of the ABRT_SBYTE_NORSTRT must …","This field indicates that a Slave has lost the bus while …","This field specifies that the Slave has received a read …","1: When the processor side responds to a slave mode …","This field indicates the master-mode only bit. When the …","This is a master-mode-only bit. Master has detected the …","ACK General Call. When set to 1, DW_apb_i2c responds with …","This bit captures DW_apb_i2c activity and stays set until …","I2C Activity Status. Reset value: 0x0","Encoded parameters not visible","APB data bus width is 32 bits","This field specifies that the Master has lost arbitration, …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Reading this register clears the ACTIVITY interrupt if the …","Read this register to clear the GEN_CALL interrupt (bit …","Read this register to clear the combined interrupt, all …","Read this register to clear the RD_REQ interrupt (bit 5) …","Read this register to clear the RESTART_DET interrupt (bit …","Read this register to clear the RX_DONE interrupt (bit 7) …","Read this register to clear the RX_OVER interrupt (bit 1) …","Read this register to clear the RX_UNDER interrupt (bit 0) …","Read this register to clear the START_DET interrupt (bit …","Read this register to clear the STOP_DET interrupt (bit 9) …","Read this register to clear the TX_ABRT interrupt (bit 6) …","Read this register to clear the TX_OVER interrupt (bit 3) …","This bit controls whether a read or a write is performed. …","This register contains the data to be transmitted or …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Receive Data Level. This bit field controls the level at …","Transmit Data Level. This bit field controls the level at …","Controls whether the DW_apb_i2c is enabled. - 0: Disables …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Indicates the first data byte received after the address …","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","If bit 11 (SPECIAL) is set to 1 and bit 13(Device-ID) is …","Set only when a General Call address is received and it is …","DMA handshaking signals are enabled","Programmable count values for each mode.","Controls whether the DW_apb_i2c starts its transfers in 7- …","When acting as a slave, this bit controls whether the …","ic_en Status. This bit always reflects the value driven on …","This register must be set before any I2C bus transaction …","This register must be set before any I2C bus transaction …","This register must be set before any I2C bus transaction …","Determines whether RESTART conditions may be sent when …","The IC_SAR holds the slave address when the I2C is …","Sets the required SDA hold time in units of ic_clk period, …","Sets the required SDA hold time in units of ic_clk period, …","This bit controls whether I2C has its slave disabled, …","This register must be set before any I2C bus transaction …","This register must be set before any I2C bus transaction …","This is the target address for any master transaction. …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","COMBINED Interrupt outputs","This bit masks the R_ACTIVITY interrupt in IC_INTR_STAT …","This bit masks the R_GEN_CALL interrupt in IC_INTR_STAT …","This bit masks the R_RD_REQ interrupt in IC_INTR_STAT …","This bit masks the R_RESTART_DET interrupt in IC_INTR_STAT …","This bit masks the R_RX_DONE interrupt in IC_INTR_STAT …","This bit masks the R_RX_FULL interrupt in IC_INTR_STAT …","This bit masks the R_RX_OVER interrupt in IC_INTR_STAT …","This bit masks the R_RX_UNDER interrupt in IC_INTR_STAT …","This bit masks the R_START_DET interrupt in IC_INTR_STAT …","This bit masks the R_STOP_DET interrupt in IC_INTR_STAT …","This bit masks the R_TX_ABRT interrupt in IC_INTR_STAT …","This bit masks the R_TX_EMPTY interrupt in IC_INTR_STAT …","This bit masks the R_TX_OVER interrupt in IC_INTR_STAT …","This bit controls whether the DW_apb_i2c master is …","MAX SPEED MODE = FAST MODE","Master FSM Activity Status. When the Master Finite State …","Generate NACK. This NACK generation only occurs when …","See IC_RAW_INTR_STAT for a detailed description of …","See IC_RAW_INTR_STAT for a detailed description of …","See IC_RAW_INTR_STAT for a detailed description of …","See IC_RAW_INTR_STAT for a detailed description of …","See IC_RAW_INTR_STAT for a detailed description of …","See IC_RAW_INTR_STAT for a detailed description of …","See IC_RAW_INTR_STAT for a detailed description of …","See IC_RAW_INTR_STAT for a detailed description of …","See IC_RAW_INTR_STAT for a detailed description of …","See IC_RAW_INTR_STAT for a detailed description of …","See IC_RAW_INTR_STAT for a detailed description of …","See IC_RAW_INTR_STAT for a detailed description of …","See IC_RAW_INTR_STAT for a detailed description of …","This bit is set to 1 when DW_apb_i2c is acting as a slave …","Receive DMA Enable. This bit enables/disables the receive …","This bit controls whether a RESTART is issued before the …","Indicates whether a RESTART condition has occurred on the …","Receive FIFO Completely Full. When the receive FIFO is …","Receive FIFO Not Empty. This bit is set when the receive …","RX Buffer Depth = 16","When the DW_apb_i2c is acting as a slave-transmitter, this …","This bit controls whether DW_apb_i2c should hold the bus …","Set when the receive buffer reaches or goes above the …","Set if the receive buffer is completely filled to …","Receive FIFO Threshold Level. Controls the level of …","Set if the processor attempts to read the receive buffer …","Receive FIFO Level. Contains the number of valid data …","SDA Setup. It is recommended that if the required delay is …","When set, the controller initiates the transfer abort. - …","This field indicates that the Master is in 10-bit address …","This field indicates that the Master is in 10-bit address …","This field indicates that the restart is disabled …","This field indicates that the Master is in 7-bit …","This field indicates that DW_apb_i2c in master mode has …","This field indicates that DW_apb_i2c in the master mode …","This field indicates that the Master is in High Speed mode …","This field indicates that the restart is disabled …","This field indicates that the User tries to initiate a …","This field indicates that the Master has sent a START Byte …","To clear Bit 9, the source of the ABRT_SBYTE_NORSTRT must …","This field indicates that a Slave has lost the bus while …","This field specifies that the Slave has received a read …","1: When the processor side responds to a slave mode …","This field indicates the master-mode only bit. When the …","This is a master-mode-only bit. Master has detected the …","ACK General Call. When set to 1, DW_apb_i2c responds with …","This bit captures DW_apb_i2c activity and stays set until …","I2C Activity Status. Reset value: 0x0","Encoded parameters not visible","APB data bus width is 32 bits","This field specifies that the Master has lost arbitration, …","Reading this register clears the ACTIVITY interrupt if the …","Read this register to clear the GEN_CALL interrupt (bit …","Read this register to clear the combined interrupt, all …","Read this register to clear the RD_REQ interrupt (bit 5) …","Read this register to clear the RESTART_DET interrupt (bit …","Read this register to clear the RX_DONE interrupt (bit 7) …","Read this register to clear the RX_OVER interrupt (bit 1) …","Read this register to clear the RX_UNDER interrupt (bit 0) …","Read this register to clear the START_DET interrupt (bit …","Read this register to clear the STOP_DET interrupt (bit 9) …","Read this register to clear the TX_ABRT interrupt (bit 6) …","Read this register to clear the TX_OVER interrupt (bit 3) …","This bit controls whether a read or a write is performed. …","This register contains the data to be transmitted or …","Receive Data Level. This bit field controls the level at …","Transmit Data Level. This bit field controls the level at …","Controls whether the DW_apb_i2c is enabled. - 0: Disables …","Indicates the first data byte received after the address …","If bit 11 (SPECIAL) is set to 1 and bit 13(Device-ID) is …","Set only when a General Call address is received and it is …","DMA handshaking signals are enabled","Programmable count values for each mode.","Controls whether the DW_apb_i2c starts its transfers in 7- …","When acting as a slave, this bit controls whether the …","ic_en Status. This bit always reflects the value driven on …","This register must be set before any I2C bus transaction …","This register must be set before any I2C bus transaction …","This register must be set before any I2C bus transaction …","Determines whether RESTART conditions may be sent when …","The IC_SAR holds the slave address when the I2C is …","Sets the required SDA hold time in units of ic_clk period, …","Sets the required SDA hold time in units of ic_clk period, …","This bit controls whether I2C has its slave disabled, …","This register must be set before any I2C bus transaction …","This register must be set before any I2C bus transaction …","This is the target address for any master transaction. …","COMBINED Interrupt outputs","This bit masks the R_ACTIVITY interrupt in IC_INTR_STAT …","This bit masks the R_GEN_CALL interrupt in IC_INTR_STAT …","This bit masks the R_RD_REQ interrupt in IC_INTR_STAT …","This bit masks the R_RESTART_DET interrupt in IC_INTR_STAT …","This bit masks the R_RX_DONE interrupt in IC_INTR_STAT …","This bit masks the R_RX_FULL interrupt in IC_INTR_STAT …","This bit masks the R_RX_OVER interrupt in IC_INTR_STAT …","This bit masks the R_RX_UNDER interrupt in IC_INTR_STAT …","This bit masks the R_START_DET interrupt in IC_INTR_STAT …","This bit masks the R_STOP_DET interrupt in IC_INTR_STAT …","This bit masks the R_TX_ABRT interrupt in IC_INTR_STAT …","This bit masks the R_TX_EMPTY interrupt in IC_INTR_STAT …","This bit masks the R_TX_OVER interrupt in IC_INTR_STAT …","This bit controls whether the DW_apb_i2c master is …","MAX SPEED MODE = FAST MODE","Master FSM Activity Status. When the Master Finite State …","Generate NACK. This NACK generation only occurs when …","See IC_RAW_INTR_STAT for a detailed description of …","See IC_RAW_INTR_STAT for a detailed description of …","See IC_RAW_INTR_STAT for a detailed description of …","See IC_RAW_INTR_STAT for a detailed description of …","See IC_RAW_INTR_STAT for a detailed description of …","See IC_RAW_INTR_STAT for a detailed description of …","See IC_RAW_INTR_STAT for a detailed description of …","See IC_RAW_INTR_STAT for a detailed description of …","See IC_RAW_INTR_STAT for a detailed description of …","See IC_RAW_INTR_STAT for a detailed description of …","See IC_RAW_INTR_STAT for a detailed description of …","See IC_RAW_INTR_STAT for a detailed description of …","See IC_RAW_INTR_STAT for a detailed description of …","This bit is set to 1 when DW_apb_i2c is acting as a slave …","Receive DMA Enable. This bit enables/disables the receive …","This bit controls whether a RESTART is issued before the …","Indicates whether a RESTART condition has occurred on the …","Receive FIFO Completely Full. When the receive FIFO is …","Receive FIFO Not Empty. This bit is set when the receive …","RX Buffer Depth = 16","When the DW_apb_i2c is acting as a slave-transmitter, this …","This bit controls whether DW_apb_i2c should hold the bus …","Set when the receive buffer reaches or goes above the …","Set if the receive buffer is completely filled to …","Receive FIFO Threshold Level. Controls the level of …","Set if the processor attempts to read the receive buffer …","Receive FIFO Level. Contains the number of valid data …","SDA Setup. It is recommended that if the required delay is …","Slave FSM Activity Status. When the Slave Finite State …","Slave Disabled While Busy (Transmit, Receive). This bit …","Slave Received Data Lost. This bit indicates if a …","This bit indicates whether software performs a Device-ID …","These bits control at which speed the DW_apb_i2c operates; …","Indicates whether a START or RESTART condition has …","This bit controls whether a STOP is issued after the byte …","Indicates whether a STOP condition has occurred on the I2C …","Master issues the STOP_DET interrupt irrespective of …","In slave mode: - 1’b1: issues the STOP_DET interrupt …","Transmit DMA Enable. This bit enables/disables the …","Transmit FIFO Completely Empty. When the transmit FIFO is …","Transmit FIFO Not Full. Set when the transmit FIFO …","This bit indicates if DW_apb_i2c, as an I2C transmitter, …","TX Buffer Depth = 16","In Master mode: - 1’b1: Blocks the transmission of data …","The behavior of the TX_EMPTY interrupt status differs …","This bit controls the generation of the TX_EMPTY …","This field indicates the number of Tx FIFO Data Commands …","Set during transmit if the transmit buffer is filled to …","Transmit FIFO Threshold Level. Controls the level of …","Transmit FIFO Level. Contains the number of valid data …","Slave FSM Activity Status. When the Slave Finite State …","Slave Disabled While Busy (Transmit, Receive). This bit …","Slave Received Data Lost. This bit indicates if a …","This bit indicates whether software performs a Device-ID …","These bits control at which speed the DW_apb_i2c operates; …","Indicates whether a START or RESTART condition has …","This bit controls whether a STOP is issued after the byte …","Indicates whether a STOP condition has occurred on the I2C …","Master issues the STOP_DET interrupt irrespective of …","In slave mode: - 1’b1: issues the STOP_DET interrupt …","Transmit DMA Enable. This bit enables/disables the …","Transmit FIFO Completely Empty. When the transmit FIFO is …","Transmit FIFO Not Full. Set when the transmit FIFO …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","This bit indicates if DW_apb_i2c, as an I2C transmitter, …","TX Buffer Depth = 16","In Master mode: - 1’b1: Blocks the transmission of data …","The behavior of the TX_EMPTY interrupt status differs …","This bit controls the generation of the TX_EMPTY …","This field indicates the number of Tx FIFO Data Commands …","Set during transmit if the transmit buffer is filled to …","Transmit FIFO Threshold Level. Controls the level of …","Transmit FIFO Level. Contains the number of valid data …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Fast or Fast Plus mode of operation","High Speed mode of operation","Standard Speed mode of operation","","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","GPIO control including function select and overrides.","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","Interrupt Enable for dormant_wake","Interrupt Force for dormant_wake","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Raw Interrupts","Interrupt status after masking &amp; forcing for dormant_wake","","GPIO status","","","","","","","","","","","GPIO control including function select and overrides.","GPIO status","Interrupt Force for proc0","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","0-31 -&gt; selects pin function according to the gpio table …","input signal from pad, before override is applied","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","input signal to peripheral, after override is applied","interrupt from pad before override is applied","","interrupt to processors, after override is applied","","","output enable from selected peripheral, before register …","","output enable to pad after register override is applied","output signal from selected peripheral, before register …","","output signal to pad after register override is applied","","","0-31 -&gt; selects pin function according to the gpio table …","input signal from pad, before override is applied","","input signal to peripheral, after override is applied","interrupt from pad before override is applied","","interrupt to processors, after override is applied","","","output enable from selected peripheral, before register …","","output enable to pad after register override is applied","output signal from selected peripheral, before register …","","output signal to pad after register override is applied","","","","","","","","","","","","","","","","disable output","enable output","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","drive output high","drive interrupt high","drive peri input high","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","drive output from inverse of peripheral signal selected by …","drive output enable from inverse of peripheral signal …","invert the interrupt","invert the peri input","","","","","","","drive output low","drive interrupt low","drive peri input low","drive output from peripheral signal selected by funcsel","drive output enable from peripheral signal selected by …","don’t invert the interrupt","don’t invert the peri inputeturns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Pad control register","Calls <code>U::from(self)</code>.","","","","","","Voltage select. Per bank control","Pad control register","Voltage select. Per bank control","","","","","","","","","Drive strength.","","","Returns the argument unchanged.","Returns the argument unchanged.","Input enable","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Output disable. Has priority over output enable from …","Pull down enable","Pull up enable","Enable schmitt trigger","Drive strength.","Input enable","Output disable. Has priority over output enable from …","Pull down enable","Pull up enable","Enable schmitt trigger","Slew rate control. 1 = Fast, 0 = Slow","","Slew rate control. 1 = Fast, 0 = Slow","","","","","","","","","","","Set voltage to 1.8V (DVDD &lt;= 1V8)","","Set voltage to 3.3V (DVDD &gt;= 2V5)","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","Programmable IO block","","Current instruction address of state machine 3","","","","","","","Clock divisor register for state machine 3 Frequency = …","","","","PIO control register","The PIO hardware has some free parameters that may vary …","Read to sample the pad output enables (direction) PIO is …","Read to sample the pad output values PIO is currently …","","","","Execution/behavioural settings for state machine 3","FIFO debug register","FIFO levels","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","FIFO status register","There is a 2-flipflop synchronizer on each GPIO input, …","Read to see the instruction currently addressed by state …","Write-only access to instruction memory location 0","Interrupt Enable for irq1","Interrupt Force for irq1","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Raw Interrupts","Interrupt status after masking &amp; forcing for irq1","State machine IRQ flags register. Write 1 to clear. There …","Writing a 1 to each of these bits will forcibly assert the …","","State machine pin control","","Direct read access to the RX FIFO for this state machine. …","Control behaviour of the input/output shift registers for …","","","","","","","","Direct write access to the TX FIFO for this state machine. …","","","","","PIO control register","The PIO hardware has some free parameters that may vary …","FIFO debug register","FIFO levels","FIFO status register","Write-only access to instruction memory location 1","Interrupt Force for irq1","State machine IRQ flags register. Write 1 to clear. There …","Writing a 1 to each of these bits will forcibly assert the …","Current instruction address of state machine 1","Clock divisor register for state machine 1 Frequency = …","Execution/behavioural settings for state machine 3","Read to see the instruction currently addressed by state …","State machine pin control","Control behaviour of the input/output shift registers for …","","Pull automatically when the output shift register is …","Push automatically when the input shift register is …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Restart a state machine’s clock divider from an initial …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","If 1, an instruction written to SMx_INSTR is stalled, and …","The depth of the state machine TX/RX FIFOs, measured in …","When 1, RX FIFO steals the TX FIFO’s storage, and …","When 1, TX FIFO steals the RX FIFO’s storage, and …","Fractional part of clock divisor","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","The size of the instruction memory, measured in units of …","The pin which is mapped to the least-significant bit of a …","1 = shift input shift register to right (data enters from …","If 1, use a bit of OUT data as an auxiliary write enable …","","","Effective frequency is sysclk/(int + frac/256). Value of 0 …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","The GPIO number to use as condition for JMP PIN. …","The lowest-numbered pin that will be affected by an OUT …","The number of pins asserted by an OUT PINS, OUT PINDIRS or …","Which data bit to use for inline OUT enable","1 = shift out of output shift register to right. 0 = to …","Continuously assert the most recent OUT/SET to the pins","Number of bits shifted out of OSR before autopull, or …","Number of bits shifted into ISR before autopush, or …","","","","","State machine RX FIFO is empty","State machine RX FIFO is full","State machine has stalled on full RX FIFO during a …","RX FIFO underflow (i.e. read-on-empty by the system) has …","","Pull automatically when the output shift register is …","Push automatically when the input shift register is …","The lowest-numbered pin that will be affected by a SET …","Restart a state machine’s clock divider from an initial …","The number of pins asserted by a SET. In the range 0 to 5 …","If 1, an instruction written to SMx_INSTR is stalled, and …","The depth of the state machine TX/RX FIFOs, measured in …","When 1, RX FIFO steals the TX FIFO’s storage, and …","When 1, TX FIFO steals the RX FIFO’s storage, and …","Fractional part of clock divisor","The size of the instruction memory, measured in units of …","The pin which is mapped to the least-significant bit of a …","1 = shift input shift register to right (data enters from …","If 1, use a bit of OUT data as an auxiliary write enable …","","","Effective frequency is sysclk/(int + frac/256). Value of 0 …","","","The GPIO number to use as condition for JMP PIN. …","The lowest-numbered pin that will be affected by an OUT …","The number of pins asserted by an OUT PINS, OUT PINDIRS or …","Which data bit to use for inline OUT enable","1 = shift out of output shift register to right. 0 = to …","Continuously assert the most recent OUT/SET to the pins","Number of bits shifted out of OSR before autopull, or …","Number of bits shifted into ISR before autopush, or …","","","","","State machine RX FIFO is empty","State machine RX FIFO is full","State machine has stalled on full RX FIFO during a …","RX FIFO underflow (i.e. read-on-empty by the system) has …","The lowest-numbered pin that will be affected by a SET …","The number of pins asserted by a SET. In the range 0 to 5 …","If 1, the MSB of the Delay/Side-set instruction field is …","If 1, side-set data is asserted to pin directions, instead …","The lowest-numbered pin that will be affected by a …","The number of MSBs of the Delay/Side-set instruction field …","","","","","","","","","","","","","The number of state machines this PIO instance is equipped …","Enable/disable each of the four state machines by writing …","Write 1 to instantly clear internal SM state which may be …","Comparison level for the MOV x, STATUS instruction","Comparison used for the MOV x, STATUS instruction.","","","","","State machine TX FIFO is empty","State machine TX FIFO is full","TX FIFO overflow (i.e. write-on-full by the system) has …","State machine has stalled on empty TX FIFO during a …","After reaching wrap_top, execution is wrapped to this …","After reaching this address, execution is wrapped to …","If 1, the MSB of the Delay/Side-set instruction field is …","If 1, side-set data is asserted to pin directions, instead …","The lowest-numbered pin that will be affected by a …","The number of MSBs of the Delay/Side-set instruction field …","","","","","","","","","","","","","The number of state machines this PIO instance is equipped …","Enable/disable each of the four state machines by writing …","Write 1 to instantly clear internal SM state which may be …","Comparison level for the MOV x, STATUS instruction","Comparison used for the MOV x, STATUS instruction.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","State machine TX FIFO is empty","State machine TX FIFO is full","TX FIFO overflow (i.e. write-on-full by the system) has …","State machine has stalled on empty TX FIFO during a …","","","","","","","","","","","","","","","","After reaching wrap_top, execution is wrapped to this …","After reaching this address, execution is wrapped to …","All-ones if RX FIFO level &lt; N, otherwise all-zeroes","","All-ones if TX FIFO level &lt; N, otherwise all-zeroes","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","","","","","Control and Status GENERAL CONSTRAINTS: Reference clock …","","Feedback divisor (note: this PLL does not support …","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Controls the PLL post dividers for the primary output …","Controls the PLL power modes.","","","","","Control and Status GENERAL CONSTRAINTS: Reference clock …","Feedback divisor (note: this PLL does not support …","Controls the PLL post dividers for the primary output …","Controls the PLL power modes.","","","","","","","","","Passes the reference clock to the output instead of the …","","","","","","","","","PLL DSM powerdown Nothing is achieved by setting this low.","","","","","see ctrl reg description for constraints","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","PLL is locked","PLL powerdown To save power set high when PLL output not …","divide by 1-7","divide by 1-7","PLL post divider powerdown To save power set high when PLL …","Divides the PLL input reference clock. Behaviour is …","Passes the reference clock to the output instead of the …","PLL DSM powerdown Nothing is achieved by setting this low.","see ctrl reg description for constraints","PLL is locked","PLL powerdown To save power set high when PLL output not …","divide by 1-7","divide by 1-7","PLL post divider powerdown To save power set high when PLL …","Divides the PLL input reference clock. Behaviour is …","PLL VCO powerdown To save power set high when PLL output …","","","","","","","","","","","","","PLL VCO powerdown To save power set high when PLL output …","","","","","Indicates the peripheral’s registers are ready to access.","","Force into reset (i.e. power it off)","Force block out of reset (i.e. power it on)","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","Set to 1 if this peripheral should be reset when the …","Indicates the peripheral’s registers are ready to access.","Force into reset (i.e. power it off)","Force block out of reset (i.e. power it on)","Set to 1 if this peripheral should be reset when the …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Simple PWM","","","","","Counter compare values","","","","Control and status register","Direct access to the PWM counter","INT and FRAC form a fixed-point fractional number. …","This register aliases the CSR_EN bits for all channels. …","","","Returns the argument unchanged.","Returns the argument unchanged.","Interrupt Enable","Interrupt Force","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Raw Interrupts","Interrupt status after masking &amp; forcing","","Counter wrap value","","","","","","","","Counter compare values","Control and status register","Direct access to the PWM counter","INT and FRAC form a fixed-point fractional number. …","Counter wrap value","This register aliases the CSR_EN bits for all channels. …","Interrupt Enable","Interrupt Force","Raw Interrupts","Interrupt status after masking &amp; forcing","","Invert output A","","Invert output B","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Enable the PWM channel.","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Advance the phase of the counter by 1 count, while it is …","1: Enable phase-correct modulation. 0: Trailing-edge","Retard the phase of the counter by 1 count, while it is …","","Invert output A","","Invert output B","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Enable the PWM channel.","","","Advance the phase of the counter by 1 count, while it is …","1: Enable phase-correct modulation. 0: Trailing-edge","Retard the phase of the counter by 1 count, while it is …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Free-running counting at rate dictated by fractional …","","Counter advances with each falling edge of the PWM B pin.","Fractional divider operation is gated by the PWM B pin.","Counter advances with each rising edge of the PWM B pin.","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","Reset control. If a bit is set it means the peripheral is …","Reset done. If a bit is set then a reset done signal has …","","","","Watchdog select. If a bit is set then the watchdog will …","Reset done. If a bit is set then a reset done signal has …","Watchdog select. If a bit is set then the watchdog will …","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","A down counter running at the ROSC frequency which counts …","Ring Oscillator control","Controls the output divider","Ring Oscillator pause control This is used to save power …","","The FREQA &amp; FREQB registers control the frequency by …","For a detailed description see freqa register","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Controls the phase shifted output","This just reads the state of the oscillator output so …","","Ring Oscillator Status","","","","","A down counter running at the ROSC frequency which counts …","Ring Oscillator control","Controls the output divider","The FREQA &amp; FREQB registers control the frequency by …","For a detailed description see freqa register","Controls the phase shifted output","This just reads the state of the oscillator output so …","Ring Oscillator Status","An invalid value has been written to CTRL_ENABLE or …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","set to 0xaa0 + div where div = 0 divides by 32 div = 1-31 …","post-divider is running this resets to 0 but transitions …","Stage 0 drive strength","Stage 1 drive strength","Stage 2 drive strength","Stage 3 drive strength","Stage 4 drive strength","Stage 5 drive strength","Stage 6 drive strength","Stage 7 drive strength","enable the phase-shifted output this can be changed …","On power-up this field is initialised to ENABLE The system …","Oscillator is enabled but not necessarily running and …","","","","","","","","","invert the phase-shifted output this is ignored when div=1","Controls the number of delay stages in the ROSC ring LOW …","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","set to 0xaa any other value enables the output with shift=0","Set to 0x9696 to apply the settings Any other value in …","Set to 0x9696 to apply the settings Any other value in …","","An invalid value has been written to CTRL_ENABLE or …","","set to 0xaa0 + div where div = 0 divides by 32 div = 1-31 …","post-divider is running this resets to 0 but transitions …","Stage 0 drive strength","Stage 1 drive strength","Stage 2 drive strength","Stage 3 drive strength","Stage 4 drive strength","Stage 5 drive strength","Stage 6 drive strength","Stage 7 drive strength","enable the phase-shifted output this can be changed …","On power-up this field is initialised to ENABLE The system …","Oscillator is enabled but not necessarily running and …","invert the phase-shifted output this is ignored when div=1","Controls the number of delay stages in the ROSC ring LOW …","set to 0xaa any other value enables the output with shift=0","Set to 0x9696 to apply the settings Any other value in …","Set to 0x9696 to apply the settings Any other value in …","","phase shift the phase-shifted output by SHIFT input clocks …","Oscillator is running and stable","phase shift the phase-shifted output by SHIFT input clocks …","Oscillator is running and stable","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","Register block to control RTC","","","Divider minus 1 for the 1 second counter. Safe to change …","","RTC Control and status","","Returns the argument unchanged.","Interrupt Enable","Interrupt Force","Calls <code>U::from(self)</code>.","Raw Interrupts","Interrupt status after masking &amp; forcing","Interrupt setup register 0","Interrupt setup register 1","","RTC register 0 Read this before RTC 1!","RTC register 1.","RTC setup register 0","RTC setup register 1","","","","Divider minus 1 for the 1 second counter. Safe to change …","RTC Control and status","Interrupt Enable","Interrupt setup register 0","Interrupt setup register 1","RTC register 0 Read this before RTC 1!","RTC register 1.","RTC setup register 0","RTC setup register 1","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Day of the month (1..31)","Day of the month (1..31)","Day of the month (1..31)","Enable day matching","","","","","","","","","","Day of the week","Day of the week: 1-Monday…0-Sunday ISO 8601 mod 7","Day of the week","Enable day of the week matching","","","","","","","","","","If set, leapyear is forced off. Useful for years divisible …","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Hours","Hours","Hours","Enable hour matching","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Load RTC","","Global match enable. Don’t change any other value while …","Minutes","Minutes","Minutes","Enable minute matching","Month (1..12)","Month (1..12)","Month (1..12)","Enable month matching","","RTC enabled (running)","Enable RTC","Seconds","Seconds","Seconds","Enable second matching","","Day of the month (1..31)","Day of the month (1..31)","Day of the month (1..31)","Enable day matching","Day of the week","Day of the week: 1-Monday…0-Sunday ISO 8601 mod 7","Day of the week","Enable day of the week matching","If set, leapyear is forced off. Useful for years divisible …","Hours","Hours","Hours","Enable hour matching","Load RTC","","Global match enable. Don’t change any other value while …","Minutes","Minutes","Minutes","Enable minute matching","Month (1..12)","Month (1..12)","Month (1..12)","Enable month matching","","RTC enabled (running)","Enable RTC","Seconds","Seconds","Seconds","Enable second matching","Year","Year","Year","Enable year matching","","","","","","","","","","","","","","","","","","","","","","","","","","","","Year","Year","Year","Enable year matching","","","","","Single-cycle IO block Provides core-local and inter-core …","Read/write access to accumulator 0","Values written here are atomically added to ACCUM0 Reading …","Read/write access to accumulator 1","Values written here are atomically added to ACCUM1 Reading …","Read/write access to BASE0 register.","Read/write access to BASE1 register.","Read/write access to BASE2 register.","On write, the lower 16 bits go to BASE0, upper bits to …","","","","","","","","","","","","","","","","Processor core identifier Value is 0 when read from …","Control and status register for divider.","Control register for lane 0","Control register for lane 1","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Input value for GPIO pins","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Read FULL result, without altering any internal state …","Read LANE0 result, without altering any internal state …","Read LANE1 result, without altering any internal state …","Read FULL result, and simultaneously write lane results to …","Read LANE0 result, and simultaneously write lane results …","Read LANE1 result, and simultaneously write lane results …","Divider result quotient The result of <code>DIVIDEND / DIVISOR</code> …","Read access to this core’s RX FIFO","","Divider result remainder The result of <code>DIVIDEND % DIVISOR</code> …","Divider signed dividend The same as UDIVIDEND, but starts …","Divider signed divisor The same as UDIVISOR, but starts a …","Reading from a spinlock address will: - Return 0 if lock …","Spinlock state A bitmap containing the state of all 32 …","Status register for inter-core FIFOs (mailboxes). There is …","","","","","","","","","","","","","","","","Divider unsigned dividend Write to the DIVIDEND operand of …","Divider unsigned divisor Write to the DIVISOR operand of …","QSPI output value","QSPI output value clear","QSPI output value set","QSPI output value XOR","Write access to this core’s TX FIFO","Control and status register for divider.","Status register for inter-core FIFOs (mailboxes). There is …","Values written here are atomically added to ACCUM0 Reading …","Values written here are atomically added to ACCUM1 Reading …","Control register for lane 0","Control register for lane 1","Values written here are atomically added to ACCUM0 Reading …","Values written here are atomically added to ACCUM1 Reading …","Control register for lane 0","Control register for lane 1","If 1, mask + shift is bypassed for LANE0 result. This does …","If 1, mask + shift is bypassed for LANE1 result. This does …","If 1, mask + shift is bypassed for LANE0 result. This does …","If 1, mask + shift is bypassed for LANE1 result. This does …","Only present on INTERP0 on each core. If BLEND mode is …","","","","","","","","","","","","","","","","","","","","","Only present on INTERP1 on each core. If CLAMP mode is …","","","","","","","","","","","If 1, feed the opposite lane’s accumulator into this lane…","If 1, feed the opposite lane’s accumulator into this lane…","If 1, feed the opposite lane’s accumulator into this lane…","If 1, feed the opposite lane’s accumulator into this lane…","If 1, feed the opposite lane’s result into this lane’s …","If 1, feed the opposite lane’s result into this lane’s …","If 1, feed the opposite lane’s result into this lane’s …","If 1, feed the opposite lane’s result into this lane’s …","","","","","","","","","","","Changes to 1 when any register is written, and back to 0 …","","","","","","","","","","","ORed into bits 29:28 of the lane result presented to the …","ORed into bits 29:28 of the lane result presented to the …","ORed into bits 29:28 of the lane result presented to the …","ORed into bits 29:28 of the lane result presented to the …","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","The least-significant bit allowed to pass by the mask …","The least-significant bit allowed to pass by the mask …","The least-significant bit allowed to pass by the mask …","The least-significant bit allowed to pass by the mask …","The most-significant bit allowed to pass by the mask …","The most-significant bit allowed to pass by the mask …","The most-significant bit allowed to pass by the mask …","The most-significant bit allowed to pass by the mask …","Set if either OVERF0 or OVERF1 is set.","Set if either OVERF0 or OVERF1 is set.","Indicates if any masked-off MSBs in ACCUM0 are set.","Indicates if any masked-off MSBs in ACCUM0 are set.","Indicates if any masked-off MSBs in ACCUM1 are set.","Indicates if any masked-off MSBs in ACCUM1 are set.","Value is 1 if this core’s TX FIFO is not full (i.e. if …","Reads as 0 when a calculation is in progress, 1 otherwise. …","Sticky flag indicating the RX FIFO was read when empty. …","If 1, mask + shift is bypassed for LANE0 result. This does …","If 1, mask + shift is bypassed for LANE1 result. This does …","If 1, mask + shift is bypassed for LANE0 result. This does …","If 1, mask + shift is bypassed for LANE1 result. This does …","Only present on INTERP0 on each core. If BLEND mode is …","Only present on INTERP1 on each core. If CLAMP mode is …","If 1, feed the opposite lane’s accumulator into this lane…","If 1, feed the opposite lane’s accumulator into this lane…","If 1, feed the opposite lane’s accumulator into this lane…","If 1, feed the opposite lane’s accumulator into this lane…","If 1, feed the opposite lane’s result into this lane’s …","If 1, feed the opposite lane’s result into this lane’s …","If 1, feed the opposite lane’s result into this lane’s …","If 1, feed the opposite lane’s result into this lane’s …","Changes to 1 when any register is written, and back to 0 …","ORed into bits 29:28 of the lane result presented to the …","ORed into bits 29:28 of the lane result presented to the …","ORed into bits 29:28 of the lane result presented to the …","ORed into bits 29:28 of the lane result presented to the …","","","","","The least-significant bit allowed to pass by the mask …","The least-significant bit allowed to pass by the mask …","The least-significant bit allowed to pass by the mask …","The least-significant bit allowed to pass by the mask …","The most-significant bit allowed to pass by the mask …","The most-significant bit allowed to pass by the mask …","The most-significant bit allowed to pass by the mask …","The most-significant bit allowed to pass by the mask …","Set if either OVERF0 or OVERF1 is set.","Set if either OVERF0 or OVERF1 is set.","Indicates if any masked-off MSBs in ACCUM0 are set.","Indicates if any masked-off MSBs in ACCUM0 are set.","Indicates if any masked-off MSBs in ACCUM1 are set.","Indicates if any masked-off MSBs in ACCUM1 are set.","Value is 1 if this core’s TX FIFO is not full (i.e. if …","Reads as 0 when a calculation is in progress, 1 otherwise. …","Sticky flag indicating the RX FIFO was read when empty. …","Logical right-shift applied to accumulator before masking","Logical right-shift applied to accumulator before masking","Logical right-shift applied to accumulator before masking","Logical right-shift applied to accumulator before masking","If SIGNED is set, the shifted and masked accumulator value …","If SIGNED is set, the shifted and masked accumulator value …","If SIGNED is set, the shifted and masked accumulator value …","If SIGNED is set, the shifted and masked accumulator value …","Value is 1 if this core’s RX FIFO is not empty (i.e. if …","Sticky flag indicating the TX FIFO was written when full. …","Logical right-shift applied to accumulator before masking","Logical right-shift applied to accumulator before masking","Logical right-shift applied to accumulator before masking","Logical right-shift applied to accumulator before masking","If SIGNED is set, the shifted and masked accumulator value …","If SIGNED is set, the shifted and masked accumulator value …","If SIGNED is set, the shifted and masked accumulator value …","If SIGNED is set, the shifted and masked accumulator value …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Value is 1 if this core’s RX FIFO is not empty (i.e. if …","Sticky flag indicating the TX FIFO was written when full. …","","","","","Clock prescale register, SSPCPSR on page 3-8","Control register 0, SSPCR0 on page 3-4","Control register 1, SSPCR1 on page 3-5","DMA control register, SSPDMACR on page 3-12","Data register, SSPDR on page 3-6","","Returns the argument unchanged.","Interrupt clear register, SSPICR on page 3-11","Interrupt mask set or clear register, SSPIMSC on page 3-9","Calls <code>U::from(self)</code>.","Masked interrupt status register, SSPMIS on page 3-11","PrimeCell identification registers, SSPPCellID0-3 on page …","PrimeCell identification registers, SSPPCellID0-3 on page …","PrimeCell identification registers, SSPPCellID0-3 on page …","PrimeCell identification registers, SSPPCellID0-3 on page …","Peripheral identification registers, SSPPeriphID0-3 on …","Peripheral identification registers, SSPPeriphID0-3 on …","Peripheral identification registers, SSPPeriphID0-3 on …","Peripheral identification registers, SSPPeriphID0-3 on …","","Raw interrupt status register, SSPRIS on page 3-10","Status register, SSPSR on page 3-7","","","","Clock prescale register, SSPCPSR on page 3-8","Control register 0, SSPCR0 on page 3-4","Control register 1, SSPCR1 on page 3-5","DMA control register, SSPDMACR on page 3-12","Data register, SSPDR on page 3-6","Interrupt clear register, SSPICR on page 3-11","Interrupt mask set or clear register, SSPIMSC on page 3-9","Masked interrupt status register, SSPMIS on page 3-11","PrimeCell identification registers, SSPPCellID0-3 on page …","PrimeCell identification registers, SSPPCellID0-3 on page …","PrimeCell identification registers, SSPPCellID0-3 on page …","PrimeCell identification registers, SSPPCellID0-3 on page …","Peripheral identification registers, SSPPeriphID0-3 on …","Peripheral identification registers, SSPPeriphID0-3 on …","Peripheral identification registers, SSPPeriphID0-3 on …","Peripheral identification registers, SSPPeriphID0-3 on …","Raw interrupt status register, SSPRIS on page 3-10","Status register, SSPSR on page 3-7","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","PrimeCell SSP busy flag, RO: 0 SSP is idle. 1 SSP is …","","","","","","","","","","","","","","","","","","","These bits read back as 0x00","Clock prescale divisor. Must be an even number from 2-254, …","Transmit/Receive FIFO: Read Receive FIFO. Write Transmit …","","","","","","","","","","","","","","","","","","","These bits read back as 0x1","These bits read back as 0x4","Data Size Select: 0000 Reserved, undefined operation. 0001 …","","","","","","","","","","","","","","","","","","","Frame format: 00 Motorola SPI frame format. 01 TI …","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Loop back mode: 0 Normal serial port operation enabled. 1 …","Master or slave mode select. This bit can be modified only …","These bits read back as 0x22","These bits read back as 0x0","These bits return the peripheral revision","Receive FIFO full, RO: 0 Receive FIFO is not full. 1 …","Receive FIFO not empty, RO: 0 Receive FIFO is empty. 1 …","Clears the SSPRORINTR interrupt","Receive overrun interrupt mask: 0 Receive FIFO written to …","Gives the receive over run masked interrupt status, after …","Gives the raw interrupt state, prior to masking, of the …","Clears the SSPRTINTR interrupt","Receive timeout interrupt mask: 0 Receive FIFO not empty …","Gives the receive timeout masked interrupt state, after …","Gives the raw interrupt state, prior to masking, of the …","Receive DMA Enable. If this bit is set to 1, DMA for the …","Receive FIFO interrupt mask: 0 Receive FIFO half full or …","Gives the receive FIFO masked interrupt state, after …","Gives the raw interrupt state, prior to masking, of the …","Serial clock rate. The value SCR is used to generate the …","PrimeCell SSP busy flag, RO: 0 SSP is idle. 1 SSP is …","These bits read back as 0x00","Clock prescale divisor. Must be an even number from 2-254, …","Transmit/Receive FIFO: Read Receive FIFO. Write Transmit …","These bits read back as 0x1","These bits read back as 0x4","Data Size Select: 0000 Reserved, undefined operation. 0001 …","Frame format: 00 Motorola SPI frame format. 01 TI …","Loop back mode: 0 Normal serial port operation enabled. 1 …","Master or slave mode select. This bit can be modified only …","These bits read back as 0x22","These bits read back as 0x0","These bits return the peripheral revision","Receive FIFO full, RO: 0 Receive FIFO is not full. 1 …","Receive FIFO not empty, RO: 0 Receive FIFO is empty. 1 …","Clears the SSPRORINTR interrupt","Receive overrun interrupt mask: 0 Receive FIFO written to …","Gives the receive over run masked interrupt status, after …","Gives the raw interrupt state, prior to masking, of the …","Clears the SSPRTINTR interrupt","Receive timeout interrupt mask: 0 Receive FIFO not empty …","Gives the receive timeout masked interrupt state, after …","Gives the raw interrupt state, prior to masking, of the …","Receive DMA Enable. If this bit is set to 1, DMA for the …","Receive FIFO interrupt mask: 0 Receive FIFO half full or …","Gives the receive FIFO masked interrupt state, after …","Gives the raw interrupt state, prior to masking, of the …","Serial clock rate. The value SCR is used to generate the …","Slave-mode output disable. This bit is relevant only in …","SSPCLKOUT phase, applicable to Motorola SPI frame format …","SSPCLKOUT polarity, applicable to Motorola SPI frame …","Synchronous serial port enable: 0 SSP operation disabled. …","These bits read back as 0x0D","These bits read back as 0xF0","These bits read back as 0x05","These bits read back as 0xB1","Transmit FIFO empty, RO: 0 Transmit FIFO is not empty. 1 …","Transmit FIFO not full, RO: 0 Transmit FIFO is full. 1 …","Transmit DMA Enable. If this bit is set to 1, DMA for the …","Transmit FIFO interrupt mask: 0 Transmit FIFO half empty …","Gives the transmit FIFO masked interrupt state, after …","Gives the raw interrupt state, prior to masking, of the …","Slave-mode output disable. This bit is relevant only in …","SSPCLKOUT phase, applicable to Motorola SPI frame format …","SSPCLKOUT polarity, applicable to Motorola SPI frame …","Synchronous serial port enable: 0 SSP operation disabled. …","These bits read back as 0x0D","These bits read back as 0xF0","These bits read back as 0x05","These bits read back as 0xB1","Transmit FIFO empty, RO: 0 Transmit FIFO is not empty. 1 …","Transmit FIFO not full, RO: 0 Transmit FIFO is full. 1 …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Transmit DMA Enable. If this bit is set to 1, DMA for the …","Transmit FIFO interrupt mask: 0 Transmit FIFO half empty …","Gives the transmit FIFO masked interrupt state, after …","Gives the raw interrupt state, prior to masking, of the …","","","","","","","","","","","","","","","","","","","Register block for various chip control signals","","","","Directly control the SWD debug port of either processor","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Control power downs to memories. Set high to power down …","Processor core 0 NMI source mask Set a bit high to enable …","Processor core 1 NMI source mask Set a bit high to enable …","Configuration for processors","For each bit, if 1, bypass the input synchronizer between …","For each bit, if 1, bypass the input synchronizer between …","","","","","Directly control the SWD debug port of either processor","Control power downs to memories. Set high to power down …","Configuration for processors","For each bit, if 1, bypass the input synchronizer between …","For each bit, if 1, bypass the input synchronizer between …","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Attach processor 0 debug port to syscfg controls, and …","Configure proc0 DAP instance ID. Recommend that this is …","Indication that proc0 has halted","Directly drive processor 0 SWCLK, if PROC0_ATTACH is set","Directly drive processor 0 SWDIO input, if PROC0_ATTACH is …","Observe the value of processor 0 SWDIO output.","Attach processor 1 debug port to syscfg controls, and …","Configure proc1 DAP instance ID. Recommend that this is …","Indication that proc1 has halted","Directly drive processor 1 SWCLK, if PROC1_ATTACH is set","Directly drive processor 1 SWDIO input, if PROC1_ATTACH is …","Observe the value of processor 1 SWDIO output.","","","","Attach processor 0 debug port to syscfg controls, and …","Configure proc0 DAP instance ID. Recommend that this is …","Indication that proc0 has halted","Directly drive processor 0 SWCLK, if PROC0_ATTACH is set","Directly drive processor 0 SWDIO input, if PROC0_ATTACH is …","Observe the value of processor 0 SWDIO output.","Attach processor 1 debug port to syscfg controls, and …","Configure proc1 DAP instance ID. Recommend that this is …","Indication that proc1 has halted","Directly drive processor 1 SWCLK, if PROC1_ATTACH is set","Directly drive processor 1 SWDIO input, if PROC1_ATTACH is …","Observe the value of processor 1 SWDIO output.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","JEDEC JEP-106 compliant chip identifier.","","","Returns the argument unchanged.","Git hash of the chip source. Used to identify chip version.","Calls <code>U::from(self)</code>.","Platform register. Allows software to know what …","","","","","JEDEC JEP-106 compliant chip identifier.","Platform register. Allows software to know what …","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","Testbench manager. Allows the programmer to know what …","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Indicates the type of platform in use","","","","","Indicates the type of platform in use","Indicates the platform is an ASIC","","","","","","Indicates the platform is an FPGA","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Indicates the platform is an ASIC","Indicates the platform is an FPGA","","","","Controls time and alarms time is a 64 bit value indicating …","Arm alarm 0, and configure the time it will fire. Once …","Indicates the armed/disarmed status of each alarm. A write …","","","","Set bits high to enable pause when the corresponding debug …","","Returns the argument unchanged.","Interrupt Enable","Interrupt Force","Calls <code>U::from(self)</code>.","Raw Interrupts","Interrupt status after masking &amp; forcing","Set high to pause the timer","","Read from bits 63:32 of time always read timelr before …","Write to bits 63:32 of time always write timelw before …","Read from bits 31:0 of time","Write to bits 31:0 of time writes do not get copied to …","Raw read from bits 63:32 of time (no side effects)","Raw read from bits 31:0 of time (no side effects)","","","","Indicates the armed/disarmed status of each alarm. A write …","Set bits high to enable pause when the corresponding debug …","Interrupt Force","Set high to pause the timer","","","","","","","","","","","","","","","Pause when processor 0 is in debug mode","Pause when processor 1 is in debug mode","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","Pause when processor 0 is in debug mode","Pause when processor 1 is in debug mode","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","Control Register, UARTCR","DMA Control Register, UARTDMACR","Data Register, UARTDR","Fractional Baud Rate Register, UARTFBRD","Flag Register, UARTFR","Integer Baud Rate Register, UARTIBRD","Interrupt Clear Register, UARTICR","Interrupt FIFO Level Select Register, UARTIFLS","IrDA Low-Power Counter Register, UARTILPR","Interrupt Mask Set/Clear Register, UARTIMSC","Line Control Register, UARTLCR_H","Masked Interrupt Status Register, UARTMIS","UARTPCellID0 Register","UARTPCellID1 Register","UARTPCellID2 Register","UARTPCellID3 Register","UARTPeriphID0 Register","UARTPeriphID1 Register","UARTPeriphID2 Register","UARTPeriphID3 Register","Raw Interrupt Status Register, UARTRIS","Receive Status Register/Error Clear Register, …","Control Register, UARTCR","DMA Control Register, UARTDMACR","Data Register, UARTDR","Fractional Baud Rate Register, UARTFBRD","Flag Register, UARTFR","Integer Baud Rate Register, UARTIBRD","Interrupt Clear Register, UARTICR","Interrupt FIFO Level Select Register, UARTIFLS","IrDA Low-Power Counter Register, UARTILPR","Interrupt Mask Set/Clear Register, UARTIMSC","Line Control Register, UARTLCR_H","Masked Interrupt Status Register, UARTMIS","UARTPCellID0 Register","UARTPCellID1 Register","UARTPCellID2 Register","UARTPCellID3 Register","UARTPeriphID0 Register","UARTPeriphID1 Register","UARTPeriphID2 Register","UARTPeriphID3 Register","Raw Interrupt Status Register, UARTRIS","Receive Status Register/Error Clear Register, …","The fractional baud rate divisor. These bits are cleared …","The integer baud rate divisor. These bits are cleared to 0 …","Break error. This bit is set to 1 if a break condition was …","Break error. This bit is set to 1 if a break condition was …","Break error interrupt clear. Clears the UARTBEINTR …","Break error interrupt mask. A read returns the current …","Break error masked interrupt status. Returns the masked …","Break error interrupt status. Returns the raw interrupt …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Send break. If this bit is set to 1, a low-level is …","UART busy. If this bit is set to 1, the UART is busy …","","","","","","","","","","","","","","","","","","","","","","","These bits read back as 0x00","Clear to send. This bit is the complement of the UART …","CTS hardware flow control enable. If this bit is set to 1, …","nUARTCTS modem interrupt clear. Clears the UARTCTSINTR …","nUARTCTS modem interrupt mask. A read returns the current …","nUARTCTS modem masked interrupt status. Returns the masked …","nUARTCTS modem interrupt status. Returns the raw interrupt …","Receive (read) data character. Transmit (write) data …","Data carrier detect. This bit is the complement of the …","nUARTDCD modem interrupt clear. Clears the UARTDCDINTR …","nUARTDCD modem interrupt mask. A read returns the current …","nUARTDCD modem masked interrupt status. Returns the masked …","nUARTDCD modem interrupt status. Returns the raw interrupt …","","","","","","","","","","","","","","","","","","","","","","","These bits read back as 0x1","These bits read back as 0x4","DMA on error. If this bit is set to 1, the DMA receive …","Data set ready. This bit is the complement of the UART …","nUARTDSR modem interrupt clear. Clears the UARTDSRINTR …","nUARTDSR modem interrupt mask. A read returns the current …","nUARTDSR modem masked interrupt status. Returns the masked …","nUARTDSR modem interrupt status. Returns the raw interrupt …","Data transmit ready. This bit is the complement of the …","Even parity select. Controls the type of parity the UART …","","","","","","","","","","","","","","","","","","","","","","","Framing error. When set to 1, it indicates that the …","Framing error. When set to 1, it indicates that the …","Framing error interrupt clear. Clears the UARTFEINTR …","Framing error interrupt mask. A read returns the current …","Framing error masked interrupt status. Returns the masked …","Enable FIFOs: 0 = FIFOs are disabled (character mode) that …","Framing error interrupt status. Returns the raw interrupt …","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","8-bit low-power divisor value. These bits are cleared to 0 …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Loopback enable. If this bit is set to 1 and the SIREN bit …","Overrun error. This bit is set to 1 if data is received …","Overrun error. This bit is set to 1 if data is received …","Overrun error interrupt clear. Clears the UARTOEINTR …","Overrun error interrupt mask. A read returns the current …","Overrun error masked interrupt status. Returns the masked …","Overrun error interrupt status. Returns the raw interrupt …","This bit is the complement of the UART Out1 (nUARTOut1) …","This bit is the complement of the UART Out2 (nUARTOut2) …","These bits read back as 0x11","These bits read back as 0x0","Parity error. When set to 1, it indicates that the parity …","Parity error. When set to 1, it indicates that the parity …","Parity error interrupt clear. Clears the UARTPEINTR …","Parity error interrupt mask. A read returns the current …","Parity error masked interrupt status. Returns the masked …","Parity enable: 0 = parity is disabled and no parity bit …","Parity error interrupt status. Returns the raw interrupt …","This field depends on the revision of the UART: r1p0 0x0 …","Ring indicator. This bit is the complement of the UART …","nUARTRI modem interrupt clear. Clears the UARTRIINTR …","nUARTRI modem interrupt mask. A read returns the current …","nUARTRI modem masked interrupt status. Returns the masked …","nUARTRI modem interrupt status. Returns the raw interrupt …","Receive timeout interrupt clear. Clears the UARTRTINTR …","Receive timeout interrupt mask. A read returns the current …","Receive timeout masked interrupt status. Returns the …","Receive timeout interrupt status. Returns the raw …","Request to send. This bit is the complement of the UART …","RTS hardware flow control enable. If this bit is set to 1, …","Receive DMA enable. If this bit is set to 1, DMA for the …","Receive enable. If this bit is set to 1, the receive …","Receive FIFO empty. The meaning of this bit depends on the …","Receive FIFO full. The meaning of this bit depends on the …","Receive interrupt clear. Clears the UARTRXINTR interrupt.","Receive interrupt FIFO level select. The trigger points …","Receive interrupt mask. A read returns the current mask …","Receive masked interrupt status. Returns the masked …","Receive interrupt status. Returns the raw interrupt state …","The fractional baud rate divisor. These bits are cleared …","The integer baud rate divisor. These bits are cleared to 0 …","Break error. This bit is set to 1 if a break condition was …","Break error. This bit is set to 1 if a break condition was …","Break error interrupt clear. Clears the UARTBEINTR …","Break error interrupt mask. A read returns the current …","Break error masked interrupt status. Returns the masked …","Break error interrupt status. Returns the raw interrupt …","Send break. If this bit is set to 1, a low-level is …","UART busy. If this bit is set to 1, the UART is busy …","These bits read back as 0x00","Clear to send. This bit is the complement of the UART …","CTS hardware flow control enable. If this bit is set to 1, …","nUARTCTS modem interrupt clear. Clears the UARTCTSINTR …","nUARTCTS modem interrupt mask. A read returns the current …","nUARTCTS modem masked interrupt status. Returns the masked …","nUARTCTS modem interrupt status. Returns the raw interrupt …","Receive (read) data character. Transmit (write) data …","Data carrier detect. This bit is the complement of the …","nUARTDCD modem interrupt clear. Clears the UARTDCDINTR …","nUARTDCD modem interrupt mask. A read returns the current …","nUARTDCD modem masked interrupt status. Returns the masked …","nUARTDCD modem interrupt status. Returns the raw interrupt …","These bits read back as 0x1","These bits read back as 0x4","DMA on error. If this bit is set to 1, the DMA receive …","Data set ready. This bit is the complement of the UART …","nUARTDSR modem interrupt clear. Clears the UARTDSRINTR …","nUARTDSR modem interrupt mask. A read returns the current …","nUARTDSR modem masked interrupt status. Returns the masked …","nUARTDSR modem interrupt status. Returns the raw interrupt …","Data transmit ready. This bit is the complement of the …","Even parity select. Controls the type of parity the UART …","Framing error. When set to 1, it indicates that the …","Framing error. When set to 1, it indicates that the …","Framing error interrupt clear. Clears the UARTFEINTR …","Framing error interrupt mask. A read returns the current …","Framing error masked interrupt status. Returns the masked …","Enable FIFOs: 0 = FIFOs are disabled (character mode) that …","Framing error interrupt status. Returns the raw interrupt …","8-bit low-power divisor value. These bits are cleared to 0 …","Loopback enable. If this bit is set to 1 and the SIREN bit …","Overrun error. This bit is set to 1 if data is received …","Overrun error. This bit is set to 1 if data is received …","Overrun error interrupt clear. Clears the UARTOEINTR …","Overrun error interrupt mask. A read returns the current …","Overrun error masked interrupt status. Returns the masked …","Overrun error interrupt status. Returns the raw interrupt …","This bit is the complement of the UART Out1 (nUARTOut1) …","This bit is the complement of the UART Out2 (nUARTOut2) …","These bits read back as 0x11","These bits read back as 0x0","Parity error. When set to 1, it indicates that the parity …","Parity error. When set to 1, it indicates that the parity …","Parity error interrupt clear. Clears the UARTPEINTR …","Parity error interrupt mask. A read returns the current …","Parity error masked interrupt status. Returns the masked …","Parity enable: 0 = parity is disabled and no parity bit …","Parity error interrupt status. Returns the raw interrupt …","This field depends on the revision of the UART: r1p0 0x0 …","Ring indicator. This bit is the complement of the UART …","nUARTRI modem interrupt clear. Clears the UARTRIINTR …","nUARTRI modem interrupt mask. A read returns the current …","nUARTRI modem masked interrupt status. Returns the masked …","nUARTRI modem interrupt status. Returns the raw interrupt …","Receive timeout interrupt clear. Clears the UARTRTINTR …","Receive timeout interrupt mask. A read returns the current …","Receive timeout masked interrupt status. Returns the …","Receive timeout interrupt status. Returns the raw …","Request to send. This bit is the complement of the UART …","RTS hardware flow control enable. If this bit is set to 1, …","Receive DMA enable. If this bit is set to 1, DMA for the …","Receive enable. If this bit is set to 1, the receive …","Receive FIFO empty. The meaning of this bit depends on the …","Receive FIFO full. The meaning of this bit depends on the …","Receive interrupt clear. Clears the UARTRXINTR interrupt.","Receive interrupt FIFO level select. The trigger points …","Receive interrupt mask. A read returns the current mask …","Receive masked interrupt status. Returns the masked …","Receive interrupt status. Returns the raw interrupt state …","SIR enable: 0 = IrDA SIR ENDEC is disabled. nSIROUT …","SIR low-power IrDA mode. This bit selects the IrDA …","Stick parity select. 0 = stick parity is disabled 1 = …","Two stop bits select. If this bit is set to 1, two stop …","Transmit DMA enable. If this bit is set to 1, DMA for the …","Transmit enable. If this bit is set to 1, the transmit …","Transmit FIFO empty. The meaning of this bit depends on …","Transmit FIFO full. The meaning of this bit depends on the …","Transmit interrupt clear. Clears the UARTTXINTR interrupt.","Transmit interrupt FIFO level select. The trigger points …","Transmit interrupt mask. A read returns the current mask …","Transmit masked interrupt status. Returns the masked …","Transmit interrupt status. Returns the raw interrupt state …","UART enable: 0 = UART is disabled. If the UART is disabled …","These bits read back as 0x0D","These bits read back as 0xF0","These bits read back as 0x05","These bits read back as 0xB1","Word length. These bits indicate the number of data bits …","SIR enable: 0 = IrDA SIR ENDEC is disabled. nSIROUT …","SIR low-power IrDA mode. This bit selects the IrDA …","Stick parity select. 0 = stick parity is disabled 1 = …","Two stop bits select. If this bit is set to 1, two stop …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Transmit DMA enable. If this bit is set to 1, DMA for the …","Transmit enable. If this bit is set to 1, the transmit …","Transmit FIFO empty. The meaning of this bit depends on …","Transmit FIFO full. The meaning of this bit depends on the …","Transmit interrupt clear. Clears the UARTTXINTR interrupt.","Transmit interrupt FIFO level select. The trigger points …","Transmit interrupt mask. A read returns the current mask …","Transmit masked interrupt status. Returns the masked …","Transmit interrupt status. Returns the raw interrupt state …","","","","","","","","","","","","","","","","","","","","","","","UART enable: 0 = UART is disabled. If the UART is disabled …","These bits read back as 0x0D","These bits read back as 0xF0","These bits read back as 0x05","These bits read back as 0xB1","Word length. These bits indicate the number of data bits …","USB FS/LS controller device registers","Device address and endpoint control","Interrupt endpoint 1. Only valid for HOST mode.","","","Which of the double buffers should be handled. Only valid …","Buffer status register. A bit set here indicates that a …","","Device only: Can be set to ignore the buffer control …","Device only: Used in conjunction with <code>EP_ABORT</code>. Set once …","Device: this bit must be set in conjunction with the <code>STALL</code> …","Device: bits are set when the <code>IRQ_ON_NAK</code> or <code>IRQ_ON_STALL</code> …","","Returns the argument unchanged.","interrupt endpoint control register","Interrupt Enable","Interrupt Force","Calls <code>U::from(self)</code>.","Raw Interrupts","Interrupt status after masking &amp; forcing","Main control register","Used by the host controller. Sets the wait time in …","","SIE control register","SIE status register","Read the last SOF (Start of Frame) frame number seen. In …","Set the SOF (Start of Frame) frame number in the host …","","","","Where to connect the USB controller. Should be to_phy by …","Overrides for the power signals in the event that the VBUS …","This register allows for direct control of the USB phy. …","Override enable for each control in usbphy_direct","Used to adjust trim values of USB phy pull down resistors.","Device address and endpoint control","Interrupt endpoint 11. Only valid for HOST mode.","Which of the double buffers should be handled. Only valid …","Buffer status register. A bit set here indicates that a …","Device only: Can be set to ignore the buffer control …","Device only: Used in conjunction with <code>EP_ABORT</code>. Set once …","Device: this bit must be set in conjunction with the <code>STALL</code> …","Device: bits are set when the <code>IRQ_ON_NAK</code> or <code>IRQ_ON_STALL</code> …","Interrupt Force","interrupt endpoint control register","Main control register","Used by the host controller. Sets the wait time in …","SIE control register","SIE status register","Read the last SOF (Start of Frame) frame number seen. In …","Set the SOF (Start of Frame) frame number in the host …","Where to connect the USB controller. Should be to_phy by …","Overrides for the power signals in the event that the VBUS …","This register allows for direct control of the USB phy. …","Override enable for each control in usbphy_direct","Used to adjust trim values of USB phy pull down resistors.","Raised when any bit in ABORT_DONE is set. Clear by …","ACK received. Raised by both host and device.","In device mode, the address that the device should respond …","Device address","Bit Stuff Error. Raised by the Serial RX engine.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Raised when any bit in BUFF_STATUS is set. Clear by …","Source: SIE_STATUS.BUS_RESET","Device: bus reset received","","","","","","","","","","","","","","","","","","","","","","Device: connected","Enable controller","","","CRC Error. Raised by the Serial RX engine.","Data Sequence Error. The device can raise a sequence error …","","","","","","","","","","","","","","","","","","","","","","NAK polling interval for a full speed device","NAK polling interval for a low speed device","Set when the device connection state changes. Cleared by …","Set when the device receives a resume from the host. …","Set every time the device receives a SOF (Start of Frame) …","Set when the device suspend state changes. Cleared by …","Direct control of DM","Direct control of DP","Direct bus drive enable","DM overcurrent","DM over voltage","DM pull down enable","","Value to drive to USB PHY DM pulldown resistor trim …","DM pull up enable","Enable the second DM pull up resistor. 0 - Pull = Rpu2; 1 …","","","DP overcurrent","DP over voltage","DP pull down enable","","Value to drive to USB PHY DP pulldown resistor trim …","DP pull up enable","","Enable the second DP pull up resistor. 0 - Pull = Rpu2; 1 …","","Device endpoint to send data to. Only valid for HOST mode.","Endpoint number of the interrupt endpoint","Device: EP0 single buffered = 0, double buffered = 1","","Device: Set bit in BUFF_STATUS for every buffer completed …","Device: Set bit in BUFF_STATUS for every 2 buffers …","Device: Set bit in EP_STATUS_STALL_NAK when EP0 sends a NAK","Device: Set bit in EP_STATUS_STALL_NAK when EP0 sends a …","","","","","","","","","","","","Raised when any bit in EP_STATUS_STALL_NAK is set. Clear …","","","","","","","","","","","","","","","","","","","","","","Source: SIE_STATUS.BIT_STUFF_ERROR","Source: SIE_STATUS.CRC_ERROR","Source: SIE_STATUS.DATA_SEQ_ERROR","Source: SIE_STATUS.RX_OVERFLOW","Source: SIE_STATUS.RX_TIMEOUT","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Host: raised when a device is connected or disconnected …","Device mode = 0, Host mode = 1","Host: raised when a device wakes up the host. Cleared by …","Host: raised every time the host sends a SOF (Start of …","Host: Enable interrupt endpoint 1 -&gt; 15","Direction of the interrupt endpoint. In=0, Out=1","Interrupt EP requires preamble (is a low speed device on a …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Host: Enable keep alive packet (for low speed bus)","USB bus line state","Host: NAK received","","","Host: Preable enable for LS device on FS hub","Host: Enable pull down resistors","Device: Enable pull up resistor","Host: Receive transaction (IN to host)","Host: Reset bus","Device: Remote wakeup. Device can initiate its own resume …","Host: Device has initiated a remote resume. Device: host …","Device: Pull-up strength (0=1K2, 1=2k3)","Differential RX","DPM pin state","DPP pin state","RX overflow is raised by the Serial RX engine if the …","RX power down override (if override enable is set). 1 = …","","RX timeout is raised by both the host and device if an ACK …","Host: Send transaction (OUT from host)","Host: Send Setup packet","Raised when any bit in ABORT_DONE is set. Clear by …","ACK received. Raised by both host and device.","In device mode, the address that the device should respond …","Device address","Bit Stuff Error. Raised by the Serial RX engine.","Raised when any bit in BUFF_STATUS is set. Clear by …","Source: SIE_STATUS.BUS_RESET","Device: bus reset received","Device: connected","Enable controller","","","CRC Error. Raised by the Serial RX engine.","Data Sequence Error. The device can raise a sequence error …","NAK polling interval for a full speed device","NAK polling interval for a low speed device","Set when the device connection state changes. Cleared by …","Set when the device receives a resume from the host. …","Set every time the device receives a SOF (Start of Frame) …","Set when the device suspend state changes. Cleared by …","Direct control of DM","Direct control of DP","Direct bus drive enable","DM overcurrent","DM over voltage","DM pull down enable","","Value to drive to USB PHY DM pulldown resistor trim …","DM pull up enable","Enable the second DM pull up resistor. 0 - Pull = Rpu2; 1 …","","","DP overcurrent","DP over voltage","DP pull down enable","","Value to drive to USB PHY DP pulldown resistor trim …","DP pull up enable","","Enable the second DP pull up resistor. 0 - Pull = Rpu2; 1 …","","Device endpoint to send data to. Only valid for HOST mode.","Endpoint number of the interrupt endpoint","Device: EP0 single buffered = 0, double buffered = 1","","Device: Set bit in BUFF_STATUS for every buffer completed …","Device: Set bit in BUFF_STATUS for every 2 buffers …","Device: Set bit in EP_STATUS_STALL_NAK when EP0 sends a NAK","Device: Set bit in EP_STATUS_STALL_NAK when EP0 sends a …","","","","","","","","","","","","Raised when any bit in EP_STATUS_STALL_NAK is set. Clear …","Source: SIE_STATUS.BIT_STUFF_ERROR","Source: SIE_STATUS.CRC_ERROR","Source: SIE_STATUS.DATA_SEQ_ERROR","Source: SIE_STATUS.RX_OVERFLOW","Source: SIE_STATUS.RX_TIMEOUT","Host: raised when a device is connected or disconnected …","Device mode = 0, Host mode = 1","Host: raised when a device wakes up the host. Cleared by …","Host: raised every time the host sends a SOF (Start of …","Host: Enable interrupt endpoint 1 -&gt; 15","Direction of the interrupt endpoint. In=0, Out=1","Interrupt EP requires preamble (is a low speed device on a …","Host: Enable keep alive packet (for low speed bus)","USB bus line state","Host: NAK received","","","Host: Preable enable for LS device on FS hub","Host: Enable pull down resistors","Device: Enable pull up resistor","Host: Receive transaction (IN to host)","Host: Reset bus","Device: Remote wakeup. Device can initiate its own resume …","Host: Device has initiated a remote resume. Device: host …","Device: Pull-up strength (0=1K2, 1=2k3)","Differential RX","DPM pin state","DPP pin state","RX overflow is raised by the Serial RX engine if the …","RX power down override (if override enable is set). 1 = …","","RX timeout is raised by both the host and device if an ACK …","Host: Send transaction (OUT from host)","Host: Send Setup packet","Device: Setup packet received","Device. Source: SIE_STATUS.SETUP_REC","Reduced timings for simulation","Host: Enable SOF generation (for full speed bus)","Host: Delay packet(s) until after SOF","","Host: device speed. Disconnected = 00, LS = 01, FS = 10","Source: SIE_STATUS.STALL_REC","Host: STALL received","Host: Start transaction","Host: Stop transaction","Bus in suspended state. Valid for device and host. Host …","","","","Raised every time SIE_STATUS.TRANS_COMPLETE is set. Clear …","Transaction complete. Raised by device if: * An IN or OUT …","Power down bus transceiver","TX_DIFFMODE=0: Single ended mode TX_DIFFMODE=1: …","","Output data. TX_DIFFMODE=1, Ignored TX_DIFFMODE=0, Drives …","Output enable. If TX_DIFFMODE=1, Ignored. If …","","","Output data. If TX_DIFFMODE=1, Drives DPP/DPM diff pair. …","Output enable. If TX_DIFFMODE=1, OE for DPP/DPM diff pair. …","","","TX_FSSLEW=0: Low speed slew rate TX_FSSLEW=1: Full speed …","","TX power down override (if override enable is set). 1 = …","","Source: SIE_STATUS.VBUS_DETECTED","","","Device: VBUS Detected","Host: Enable VBUS","","","VBUS over current detected","Device: Setup packet received","Device. Source: SIE_STATUS.SETUP_REC","Reduced timings for simulation","Host: Enable SOF generation (for full speed bus)","Host: Delay packet(s) until after SOF","","Host: device speed. Disconnected = 00, LS = 01, FS = 10","Source: SIE_STATUS.STALL_REC","Host: STALL received","Host: Start transaction","Host: Stop transaction","Bus in suspended state. Valid for device and host. Host …","","","","Raised every time SIE_STATUS.TRANS_COMPLETE is set. Clear …","Transaction complete. Raised by device if: * An IN or OUT …","Power down bus transceiver","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","TX_DIFFMODE=0: Single ended mode TX_DIFFMODE=1: …","","Output data. TX_DIFFMODE=1, Ignored TX_DIFFMODE=0, Drives …","Output enable. If TX_DIFFMODE=1, Ignored. If …","","","Output data. If TX_DIFFMODE=1, Drives DPP/DPM diff pair. …","Output enable. If TX_DIFFMODE=1, OE for DPP/DPM diff pair. …","","","TX_FSSLEW=0: Low speed slew rate TX_FSSLEW=1: Full speed …","","TX power down override (if override enable is set). 1 = …","","","","","","","","","","","","","","","","","","","","","","","Source: SIE_STATUS.VBUS_DETECTED","","","Device: VBUS Detected","Host: Enable VBUS","","","VBUS over current detected","DPRAM layout for USB device.","","","","Buffer control for both buffers of an endpoint. Fields …","","Buffer control for both buffers of an endpoint. Fields …","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","Bytes 4-7 of the setup packet from the host.","Bytes 0-3 of the SETUP packet from the host.","","","","","Buffer control for both buffers of an endpoint. Fields …","","Bytes 4-7 of the setup packet from the host.","Bytes 0-3 of the SETUP packet from the host.","Buffer 0 is available. This bit is set to indicate the …","","","","","","","","","","","64 byte aligned buffer address for this EP (bits 0-5 are …","","","","","","","","","The number of bytes buffer 1 is offset from buffer 0 in …","This endpoint is double buffered.","Enable this endpoint. The device will not reply to any …","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Buffer 0 is full. For an IN transfer (TX to the host) the …","Trigger an interrupt if a NAK is sent. Intended for debug …","Trigger an interrupt if a STALL is sent. Intended for …","Trigger an interrupt each time a buffer is done.","Trigger an interrupt each time both buffers are done. Only …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Buffer 0 is the last buffer of the transfer.","The length of the data in buffer 0.","The data pid of buffer 0.","Reset the buffer selector to buffer 0.","Buffer 0 is available. This bit is set to indicate the …","","","64 byte aligned buffer address for this EP (bits 0-5 are …","The number of bytes buffer 1 is offset from buffer 0 in …","This endpoint is double buffered.","Enable this endpoint. The device will not reply to any …","","Buffer 0 is full. For an IN transfer (TX to the host) the …","Trigger an interrupt if a NAK is sent. Intended for debug …","Trigger an interrupt if a STALL is sent. Intended for …","Trigger an interrupt each time a buffer is done.","Trigger an interrupt each time both buffers are done. Only …","Buffer 0 is the last buffer of the transfer.","The length of the data in buffer 0.","The data pid of buffer 0.","Reset the buffer selector to buffer 0.","Reply with a stall (valid for both buffers).","","","","Reply with a stall (valid for both buffers).","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","control and status for on-chip voltage regulator and chip …","brown-out detection control","","","Chip reset control and status","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","Voltage regulator control and status","brown-out detection control","Chip reset control and status","Voltage regulator control and status","","","","","","","","","","","","","enable 0=not enabled, 1=enabled","enable 0=not enabled, 1=enabled","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Last reset was from the power-on reset or brown-out …","Last reset was from the debug port","Last reset was from the RUN pin","high impedance mode select 0=not in high impedance mode, …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","This is set by psm_restart from the debugger. Its purpose …","regulation status 0=not in regulation, 1=in regulation","enable 0=not enabled, 1=enabled","enable 0=not enabled, 1=enabled","Last reset was from the power-on reset or brown-out …","Last reset was from the debug port","Last reset was from the RUN pin","high impedance mode select 0=not in high impedance mode, …","This is set by psm_restart from the debugger. Its purpose …","regulation status 0=not in regulation, 1=in regulation","output voltage select 0000 to 0101 - 0.80V 0110 - 0.85V …","threshold select 0000 - 0.473V 0001 - 0.516V 0010 - 0.559V …","","","","","","","","","","output voltage select 0000 to 0101 - 0.80V 0110 - 0.85V …","threshold select 0000 - 0.473V 0001 - 0.516V 0010 - 0.559V …","","","","","Watchdog control The rst_wdsel register determines which …","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Load the watchdog timer. The maximum setting is 0xffffff …","Logs the reason for the last reset. Both bits are zero for …","","Scratch register. Information persists through soft reset …","Scratch register. Information persists through soft reset …","Scratch register. Information persists through soft reset …","Scratch register. Information persists through soft reset …","Scratch register. Information persists through soft reset …","Scratch register. Information persists through soft reset …","Scratch register. Information persists through soft reset …","Scratch register. Information persists through soft reset …","Controls the tick generator","","","","Watchdog control The rst_wdsel register determines which …","Load the watchdog timer. The maximum setting is 0xffffff …","Logs the reason for the last reset. Both bits are zero for …","Controls the tick generator","","","","","","","","","","","","","Count down timer: the remaining number clk_tick cycles …","Total number of clk_tick cycles before the next tick.","","","","","When not enabled the watchdog timer is paused","start / stop tick generation","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","Pause the watchdog timer when processor 0 is in debug mode","Pause the watchdog timer when processor 1 is in debug mode","Pause the watchdog timer when JTAG is accessing the bus …","Is the tick generator running?","Count down timer: the remaining number clk_tick cycles …","Total number of clk_tick cycles before the next tick.","When not enabled the watchdog timer is paused","start / stop tick generation","","","Pause the watchdog timer when processor 0 is in debug mode","Pause the watchdog timer when processor 1 is in debug mode","Pause the watchdog timer when JTAG is accessing the bus …","Is the tick generator running?","Indicates the number of ticks / 2 (see errata RP2040-E1) …","","Trigger a watchdog reset","Indicates the number of ticks / 2 (see errata RP2040-E1) …","","Trigger a watchdog reset","","","","","","","","","","","","","QSPI flash execute-in-place block","","","","Cache Access counter A 32 bit saturating counter that …","Cache Hit counter A 32 bit saturating counter that …","Cache control","","Cache Flush control","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","Cache Status","FIFO stream address","FIFO stream control","FIFO stream data Streamed data is buffered here, for …","","","","Cache control","Cache Flush control","Cache Status","FIFO stream address","FIFO stream control","","","","","","","","","","","","","","","","","","","","","When 1, enable the cache. When the cache is disabled, all …","","","","","","When 1, writes to any alias other than 0x0 (caching, …","When 1, indicates the XIP streaming FIFO is completely …","When 1, indicates the XIP streaming FIFO is completely …","Write 1 to flush the cache. This clears the tag memory, …","Reads as 0 while a cache flush is in progress, and 1 …","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","When 1, the cache memories are powered down. They retain …","When 1, enable the cache. When the cache is disabled, all …","When 1, writes to any alias other than 0x0 (caching, …","When 1, indicates the XIP streaming FIFO is completely …","When 1, indicates the XIP streaming FIFO is completely …","Write 1 to flush the cache. This clears the tag memory, …","Reads as 0 while a cache flush is in progress, and 1 …","When 1, the cache memories are powered down. They retain …","The address of the next word to be streamed from flash to …","Write a nonzero value to start a streaming read. This will …","The address of the next word to be streamed from flash to …","Write a nonzero value to start a streaming read. This will …","","","","","","","","","","","","","","","","DW_apb_ssi has the following features: * APB interface – …","Baud rate","","","","Control register 0","Master Control register 1","DMA control","DMA RX data level","DMA TX data level","Data Register 0 (of 36)","","Returns the argument unchanged.","Interrupt clear","Identification register","Interrupt mask","Calls <code>U::from(self)</code>.","Interrupt status","Multi-master interrupt clear","Microwire Control","","Raw interrupt status","RX sample delay","RX FIFO level","RX FIFO threshold level","RX FIFO overflow interrupt clear","RX FIFO underflow interrupt clear","Slave enable","SPI control","Status register","Version ID","SSI Enable","","","TX drive edge","TX FIFO level","TX FIFO threshold level","TX FIFO overflow interrupt clear","","","Baud rate","Control register 0","Master Control register 1","DMA control","DMA RX data level","DMA TX data level","Interrupt clear","Interrupt mask","Interrupt status","Multi-master interrupt clear","Microwire Control","Raw interrupt status","RX sample delay","RX FIFO level","RX FIFO threshold level","RX FIFO overflow interrupt clear","RX FIFO underflow interrupt clear","Slave enable","SPI control","Status register","SSI Enable","TX drive edge","TX FIFO level","TX FIFO threshold level","TX FIFO overflow interrupt clear","Address length (0b-60b in 4b increments)","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","SSI busy flag","Control frame size Value of n -&gt; n+1 clocks per frame.","","","","","","","","","","","","","","","","","","","","","","","","","","Data collision error","","","","","","","","","","","","","","","","","","","","","","","","","","Data frame size","Data frame size in 32b transfer mode Value of n -&gt; n+1 …","Receive data watermark level (DMARDLR+1)","Transmit data watermark level","","","","","","","","","","","","","","","","","","","","","","","","","","Frame format","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Clear-on-read all active interrupts","Instruction DDR transfer enable","Instruction length (0/4/8/16b)","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Microwire control","Microwire handshaking","Clear-on-read multi-master contention interrupt","Multi-master contention interrupt mask","Multi-master contention raw interrupt status","Multi-master contention interrupt status","Microwire transfer mode","Number of data frames","Receive DMA enable","Receive FIFO full","Receive FIFO not empty","Receive FIFO threshold","RXD sample delay (in SCLK cycles)","Receive FIFO full interrupt mask","Receive FIFO full raw interrupt status","Receive FIFO full interrupt status","Clear-on-read receive FIFO overflow interrupt","Receive FIFO overflow interrupt mask","Receive FIFO overflow raw interrupt status","Receive FIFO overflow interrupt status","Receive FIFO level","Clear-on-read receive FIFO underflow interrupt","Receive FIFO underflow interrupt mask","Receive FIFO underflow raw interrupt status","Receive FIFO underflow interrupt status","SSI clock divider","Serial clock phase","Serial clock polarity","For each bit: 0 -&gt; slave not selected 1 -&gt; slave selected","Address length (0b-60b in 4b increments)","SSI busy flag","Control frame size Value of n -&gt; n+1 clocks per frame.","Data collision error","Data frame size","Data frame size in 32b transfer mode Value of n -&gt; n+1 …","Receive data watermark level (DMARDLR+1)","Transmit data watermark level","Frame format","Clear-on-read all active interrupts","Instruction DDR transfer enable","Instruction length (0/4/8/16b)","Microwire control","Microwire handshaking","Clear-on-read multi-master contention interrupt","Multi-master contention interrupt mask","Multi-master contention raw interrupt status","Multi-master contention interrupt status","Microwire transfer mode","Number of data frames","Receive DMA enable","Receive FIFO full","Receive FIFO not empty","Receive FIFO threshold","RXD sample delay (in SCLK cycles)","Receive FIFO full interrupt mask","Receive FIFO full raw interrupt status","Receive FIFO full interrupt status","Clear-on-read receive FIFO overflow interrupt","Receive FIFO overflow interrupt mask","Receive FIFO overflow raw interrupt status","Receive FIFO overflow interrupt status","Receive FIFO level","Clear-on-read receive FIFO underflow interrupt","Receive FIFO underflow interrupt mask","Receive FIFO underflow raw interrupt status","Receive FIFO underflow interrupt status","SSI clock divider","Serial clock phase","Serial clock polarity","For each bit: 0 -&gt; slave not selected 1 -&gt; slave selected","Slave output enable","SPI DDR transfer enable","SPI frame format","Read data strobe enable","Shift register loop (test mode)","SSI enable","Slave select toggle enable","TXD drive edge","Transmit DMA enable","Transmit FIFO empty","Transmit FIFO not full","Transmit FIFO threshold","Transmit FIFO level","Transfer mode","Address and instruction transfer format","Transmission error","Transmit FIFO empty interrupt mask","Transmit FIFO empty raw interrupt status","Transmit FIFO empty interrupt status","Clear-on-read transmit FIFO overflow interrupt","Transmit FIFO overflow interrupt mask","Transmit FIFO overflow raw interrupt status","Transmit FIFO overflow interrupt status","Wait cycles between control frame transmit and data …","SPI Command to send in XIP mode (INST_L = 8-bit) or to …","Slave output enable","SPI DDR transfer enable","SPI frame format","Read data strobe enable","Shift register loop (test mode)","SSI enable","Slave select toggle enable","TXD drive edge","Transmit DMA enable","Transmit FIFO empty","Transmit FIFO not full","Transmit FIFO threshold","Transmit FIFO level","Transfer mode","Address and instruction transfer format","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Transmission error","Transmit FIFO empty interrupt mask","Transmit FIFO empty raw interrupt status","Transmit FIFO empty interrupt status","Clear-on-read transmit FIFO overflow interrupt","Transmit FIFO overflow interrupt mask","Transmit FIFO overflow raw interrupt status","Transmit FIFO overflow interrupt status","","","","","","","","","","","","","","","","","","","","","","","","","","Wait cycles between control frame transmit and data …","SPI Command to send in XIP mode (INST_L = 8-bit) or to …","Dual-SPI frame format; two bits per SCK, half-duplex","EEPROM read mode (TX then RX; RX starts after control data …","","No instruction","Quad-SPI frame format; four bits per SCK, half-duplex","Receive only (not for FRF == 0, standard SPI mode)","Standard 1-bit SPI frame format; 1 bit per SCK, full-duplex","","Both transmit and receive","Transmit only (not for FRF == 0, standard SPI mode)","","","16-bit instruction","Command and address both in standard SPI frame format","Command in standard SPI format, address in format …","Command and address both in format specified by FRF (e.g. …","4-bit instruction","8-bit instruction","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","Controls the crystal oscillator","","","","A down counter running at the xosc frequency which counts …","Crystal Oscillator Control","Crystal Oscillator pause control This is used to save …","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","Controls the startup delay","Crystal Oscillator Status","","","","","A down counter running at the xosc frequency which counts …","Crystal Oscillator Control","Controls the startup delay","Crystal Oscillator Status","An invalid value has been written to CTRL_ENABLE or …","","","","","","","","","","","","","","","","","","in multiples of 256*xtal_period. The reset value of 0xc4 …","On power-up this field is initialised to DISABLE and the …","Oscillator is enabled but not necessarily running and …","","","","","Frequency range. This resets to 0xAA0 and cannot be …","The current frequency range setting, always reads 0","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","An invalid value has been written to CTRL_ENABLE or …","","in multiples of 256*xtal_period. The reset value of 0xc4 …","On power-up this field is initialised to DISABLE and the …","Oscillator is enabled but not necessarily running and …","Frequency range. This resets to 0xAA0 and cannot be …","The current frequency range setting, always reads 0","Oscillator is running and stable","Multiplies the startup_delay by 4. This is of little value …","Oscillator is running and stable","","","","","","","","","","","","","Multiplies the startup_delay by 4. This is of little value …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","",""],"i":[0,1,0,0,1,0,1,1,0,1,0,1,0,1,1,0,0,0,0,0,1,1,0,1,1,0,0,0,0,1,0,0,0,1,0,1,1,0,1,0,1,0,0,0,0,1,1,1,1,0,1,0,1,0,1,0,0,0,0,1,0,0,0,1,1,0,0,1,0,0,1,1,1,0,1,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,0,0,0,0,0,0,0,0,8,8,8,8,8,8,8,8,8,8,8,8,8,8,0,8,8,8,8,0,0,0,0,0,0,9,14,15,12,13,16,9,14,15,12,13,16,9,14,15,12,13,16,9,14,15,12,13,16,9,13,13,13,9,14,15,12,13,16,9,14,13,9,9,15,12,14,15,12,13,16,9,13,12,14,15,12,13,16,9,13,13,9,16,9,9,13,13,13,9,14,13,9,9,15,12,13,12,13,13,9,16,9,13,9,9,13,9,13,14,13,9,9,13,14,15,12,13,16,9,14,15,12,13,16,9,9,14,15,12,13,16,9,13,14,0,18,18,18,18,18,18,18,18,18,18,0,18,18,18,0,0,0,0,0,20,19,23,22,20,19,23,22,20,20,19,23,22,20,19,23,22,19,19,20,19,23,22,20,19,23,22,20,19,23,22,22,23,19,19,20,19,19,22,23,19,19,20,19,23,22,20,19,23,22,20,19,23,22,25,25,25,25,0,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,0,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,0,28,28,28,28,28,0,28,28,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,49,41,38,40,32,45,36,43,34,29,54,61,49,41,46,38,52,40,60,33,32,59,50,63,42,45,35,58,36,30,64,37,57,48,62,53,43,56,34,47,55,39,44,29,51,65,54,61,49,41,46,38,52,40,60,33,32,59,50,63,42,45,35,58,36,30,64,37,57,48,62,53,43,56,34,47,55,39,44,29,51,65,47,64,62,51,64,62,51,64,62,51,52,63,65,52,63,65,64,62,51,64,62,51,64,62,51,64,62,51,64,62,51,64,62,51,64,62,51,64,62,51,64,62,51,64,62,51,64,62,51,64,62,51,64,62,51,64,62,51,64,62,51,64,62,51,64,62,51,64,62,51,61,64,62,51,64,62,51,64,62,51,64,62,51,64,62,51,64,62,51,64,62,51,64,62,51,64,62,51,64,62,51,52,63,65,52,63,65,52,63,65,52,63,65,52,63,65,52,63,65,52,63,65,52,63,65,52,63,65,64,62,51,52,63,65,52,63,65,52,63,65,52,63,65,54,61,49,41,46,38,52,40,60,33,32,59,50,63,42,45,35,58,36,30,64,37,57,48,62,53,43,56,34,47,55,39,44,29,51,65,38,32,36,34,54,61,49,41,46,38,52,40,60,33,32,59,50,63,42,45,35,58,36,30,64,37,57,48,62,53,43,56,34,47,55,39,44,29,51,65,60,60,49,38,40,32,36,43,34,47,29,54,61,49,41,46,38,52,40,60,33,32,59,50,63,42,45,35,58,36,30,64,37,57,48,62,53,43,56,34,47,55,39,44,29,51,65,60,60,53,54,55,56,57,59,46,33,35,58,37,39,44,47,54,61,49,41,46,38,52,40,60,33,32,59,50,63,42,45,35,58,36,30,64,37,57,48,62,53,43,56,34,47,55,39,44,29,51,65,46,33,50,42,35,30,37,39,44,54,61,49,41,46,38,52,40,60,33,32,59,50,63,42,45,35,58,36,30,64,37,57,48,62,53,43,56,34,47,55,39,44,29,51,65,58,49,38,40,32,36,43,34,29,49,38,32,36,43,34,29,60,49,38,32,36,43,34,29,48,60,49,41,38,40,32,45,36,43,34,29,47,64,62,51,64,62,51,64,62,51,52,63,65,52,63,65,64,62,51,64,62,51,64,62,51,64,62,51,64,62,51,64,62,51,64,62,51,64,62,51,64,62,51,64,62,51,64,62,51,64,62,51,64,62,51,64,62,51,64,62,51,64,62,51,64,62,51,64,62,51,61,64,62,51,64,62,51,64,62,51,64,62,51,64,62,51,64,62,51,64,62,51,64,62,51,64,62,51,64,62,51,52,63,65,52,63,65,52,63,65,52,63,65,52,63,65,52,63,65,52,63,65,52,63,65,52,63,65,64,62,51,52,63,65,52,63,65,52,63,65,52,63,65,38,32,36,34,60,60,49,38,40,32,36,43,34,47,29,60,60,53,54,55,56,57,59,46,33,35,58,37,39,44,47,46,33,50,42,35,30,37,39,44,58,49,38,40,32,36,43,34,29,49,38,32,36,43,34,29,60,49,38,32,36,43,34,29,48,60,60,41,45,47,60,60,41,45,47,54,61,49,41,46,38,52,40,60,33,32,59,50,63,42,45,35,58,36,30,64,37,57,48,62,53,43,56,34,47,55,39,44,29,51,65,54,61,49,41,46,38,52,40,60,33,32,59,50,63,42,45,35,58,36,30,64,37,57,48,62,53,43,56,34,47,55,39,44,29,51,65,54,61,49,41,46,38,52,40,60,33,32,59,50,63,42,45,35,58,36,30,64,37,57,48,62,53,43,56,34,47,55,39,44,29,51,65,60,77,78,76,69,66,68,72,75,67,70,73,74,71,76,69,66,68,72,75,67,70,73,74,71,69,66,68,72,75,70,73,74,71,69,66,68,72,75,67,70,73,74,71,76,68,72,70,74,76,76,68,72,70,74,78,76,68,72,70,74,76,69,68,72,70,74,76,68,72,70,74,0,0,0,0,0,0,0,0,0,0,0,0,0,76,76,76,76,70,74,71,76,69,66,68,72,75,73,77,76,69,66,68,72,75,70,73,77,74,71,76,69,66,68,72,75,67,70,73,77,74,71,78,76,69,66,68,72,75,67,70,73,77,74,71,78,76,69,66,68,72,75,67,70,73,77,74,71,78,76,69,66,68,72,75,67,70,73,77,74,71,78,76,69,66,68,72,75,67,70,73,77,74,71,78,76,69,66,68,72,75,67,70,73,77,74,71,78,76,69,66,68,72,75,67,70,73,77,74,71,78,76,69,66,68,72,75,67,70,73,77,74,71,78,76,69,66,68,72,75,67,70,73,77,74,71,78,76,69,66,68,72,75,67,70,73,77,74,71,78,76,69,66,68,72,75,67,70,73,77,74,71,78,0,0,0,0,0,0,0,10,31,79,11,10,31,79,11,10,31,79,11,10,31,79,11,10,31,79,11,11,10,31,79,11,11,11,11,10,31,79,11,10,31,79,11,10,31,79,11,11,11,0,0,88,88,88,88,88,88,88,88,88,88,88,88,89,88,89,88,89,89,89,88,88,88,88,89,88,89,89,88,89,89,89,89,89,88,89,89,89,89,89,88,0,89,89,89,88,89,88,89,88,89,88,0,88,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,91,90,100,97,101,103,94,102,92,98,104,96,93,99,95,91,90,100,97,101,103,94,102,92,98,104,96,93,99,95,91,103,91,91,103,92,91,90,90,100,97,101,103,94,102,92,98,104,96,93,99,95,91,91,90,100,97,101,103,94,102,92,98,104,96,93,99,95,91,103,103,91,90,100,97,101,103,94,102,92,98,104,96,93,99,95,91,90,100,97,101,103,94,102,92,98,104,96,93,99,95,91,91,91,91,94,95,96,97,90,100,97,101,103,94,102,92,98,104,96,93,99,95,91,98,99,100,91,101,102,103,103,93,91,91,91,91,103,91,91,103,92,91,90,91,103,103,91,91,91,91,94,95,96,97,98,99,100,91,101,102,103,103,93,91,91,91,91,93,91,93,91,104,104,91,93,91,90,100,97,101,103,94,102,92,98,104,96,93,99,95,91,90,100,97,101,103,94,102,92,98,104,96,93,99,95,91,90,100,97,101,103,94,102,92,98,104,96,93,99,95,91,93,91,104,104,105,105,105,105,0,0,105,107,106,106,106,105,107,107,107,107,0,106,105,107,106,105,107,106,105,107,106,105,107,106,105,107,106,105,107,106,105,107,106,105,107,106,105,107,106,105,107,106,105,107,0,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,0,108,108,108,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,128,146,146,146,146,146,146,146,146,146,146,146,146,146,146,146,146,109,135,144,122,122,146,123,114,136,148,118,128,131,117,126,120,135,116,130,125,113,122,144,139,111,112,134,115,140,133,147,145,137,143,119,142,129,146,132,109,141,138,124,121,127,110,123,114,136,148,118,128,131,117,126,120,135,116,130,125,113,122,144,139,111,112,134,115,140,133,147,145,137,143,119,142,129,146,132,109,141,138,124,121,127,110,123,114,136,148,118,128,131,117,126,120,135,116,130,125,113,122,144,139,111,112,134,115,140,133,147,145,137,143,119,142,129,146,132,109,141,138,124,121,127,110,110,111,112,113,114,115,116,117,118,119,120,121,124,124,123,114,136,148,118,128,131,117,126,120,135,116,130,125,113,122,144,139,111,112,134,115,140,133,147,145,137,143,119,142,129,146,132,109,141,138,124,121,127,110,126,127,128,123,114,136,148,118,128,131,117,126,120,135,116,130,125,113,122,144,139,111,112,134,115,140,133,147,145,137,143,119,142,129,146,132,109,141,138,124,121,127,110,124,123,114,136,148,118,128,131,117,126,120,135,116,130,125,113,122,144,139,111,112,134,115,140,133,147,145,137,143,119,142,129,146,132,109,141,138,124,121,127,110,145,135,122,122,123,123,129,130,131,132,123,138,139,139,123,142,143,145,123,114,136,148,118,128,131,117,126,120,135,116,130,125,113,122,144,139,111,112,134,115,140,133,147,145,137,143,119,142,129,146,132,109,141,138,124,121,127,110,122,133,133,133,133,133,133,133,133,133,133,133,133,133,123,122,144,141,134,134,134,134,134,134,134,134,134,134,134,134,134,135,125,124,135,144,144,122,135,123,135,135,136,135,137,140,128,146,146,146,146,146,146,146,146,146,146,146,146,146,146,146,146,109,135,144,122,122,146,110,111,112,113,114,115,116,117,118,119,120,121,124,124,126,127,128,124,145,135,122,122,123,123,129,130,131,132,123,138,139,139,123,142,143,145,122,133,133,133,133,133,133,133,133,133,133,133,133,133,123,122,144,141,134,134,134,134,134,134,134,134,134,134,134,134,134,135,125,124,135,144,144,122,135,123,135,135,136,135,137,140,144,129,129,145,123,135,124,135,123,123,125,144,144,135,122,128,135,123,146,135,147,148,144,129,129,145,123,135,124,135,123,123,125,144,144,123,114,136,148,118,128,131,117,126,120,135,116,130,125,113,122,144,139,111,112,134,115,140,133,147,145,137,143,119,142,129,146,132,109,141,138,124,121,127,110,123,114,136,148,118,128,131,117,126,120,135,116,130,125,113,122,144,139,111,112,134,115,140,133,147,145,137,143,119,142,129,146,132,109,141,138,124,121,127,110,135,122,128,135,123,146,135,147,148,123,114,136,148,118,128,131,117,126,120,135,116,130,125,113,122,144,139,111,112,134,115,140,133,147,145,137,143,119,142,129,146,132,109,141,138,124,121,127,110,149,149,149,0,149,149,149,149,149,149,149,149,149,149,149,0,0,0,150,151,152,150,151,152,150,151,152,151,150,151,152,150,151,152,150,150,150,152,152,150,151,152,150,152,0,151,150,151,152,150,151,152,150,151,152,0,0,0,0,155,153,154,155,153,154,155,153,154,155,153,154,154,154,155,153,154,155,153,154,153,155,153,155,153,154,155,155,153,155,154,154,155,153,155,155,153,155,154,154,153,155,153,155,155,153,155,154,154,155,153,155,155,153,155,155,153,154,155,153,154,155,153,154,169,162,184,189,163,166,158,158,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,159,157,156,161,165,166,173,174,179,183,184,160,163,169,170,176,178,182,187,164,167,172,177,180,188,189,162,168,171,175,181,185,186,159,158,157,156,0,0,170,168,177,165,159,157,156,159,158,157,156,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,0,0,170,165,185,180,182,179,171,188,178,174,186,172,168,169,184,162,189,163,166,181,167,187,173,177,160,161,175,164,176,183,170,165,185,180,182,179,171,188,178,174,186,172,168,169,184,162,189,163,166,181,167,187,173,177,160,161,175,164,176,183,170,178,168,186,160,169,162,175,163,176,181,185,182,187,171,165,174,172,177,161,184,164,189,166,183,167,180,173,179,188,170,165,185,180,182,179,171,188,178,174,186,172,168,169,184,162,189,163,166,181,167,187,173,177,160,161,175,164,176,183,160,169,170,178,162,168,175,186,161,165,174,184,164,172,177,189,163,176,182,187,171,181,185,166,173,179,183,167,180,188,168,171,186,172,177,188,165,173,174,179,170,178,182,187,162,175,181,185,164,167,180,189,161,166,183,184,160,163,169,176,178,188,164,176,175,182,180,185,171,183,179,163,167,170,175,177,182,183,184,186,188,160,162,164,165,166,172,178,179,185,187,161,168,169,171,173,174,176,180,181,189,160,161,162,163,164,165,166,167,168,169,170,171,172,159,173,174,175,158,176,177,178,179,180,157,181,182,183,184,185,186,187,188,156,189,160,161,162,163,164,165,166,167,168,169,170,171,172,159,173,174,175,158,176,177,178,179,180,157,181,182,183,184,185,186,187,188,156,189,160,161,162,163,164,165,166,167,168,169,170,171,172,159,173,174,175,158,176,177,178,179,180,157,181,182,183,184,185,186,187,188,156,189,160,161,162,163,164,165,166,167,168,169,170,171,172,159,173,174,175,158,176,177,178,179,180,157,181,182,183,184,185,186,187,188,156,189,160,161,162,163,164,165,166,167,168,169,170,171,172,159,173,174,175,158,176,177,178,179,180,157,181,182,183,184,185,186,187,188,156,189,160,161,162,163,164,165,166,167,168,169,170,171,172,159,173,174,175,158,176,177,178,179,180,157,181,182,183,184,185,186,187,188,156,189,160,161,162,163,164,165,166,167,168,169,170,171,172,159,173,174,175,158,176,177,178,179,180,157,181,182,183,184,185,186,187,188,156,189,160,161,162,163,164,165,166,167,168,169,170,171,172,159,173,174,175,158,176,177,178,179,180,157,181,182,183,184,185,186,187,188,156,189,160,161,162,163,164,165,166,167,168,169,170,171,172,159,173,174,175,158,176,177,178,179,180,157,181,182,183,184,185,186,187,188,156,189,160,161,162,163,164,165,166,167,168,169,170,171,172,159,173,174,175,158,176,177,178,179,180,157,181,182,183,184,185,186,187,188,156,189,160,161,162,163,164,165,166,167,168,169,170,171,172,159,173,174,175,158,176,177,178,179,180,157,181,182,183,184,185,186,187,188,156,189,0,190,190,190,190,190,190,190,0,190,190,190,0,190,0,0,191,192,191,192,191,192,191,192,191,191,192,191,192,191,191,192,191,191,191,191,191,191,191,191,191,191,191,192,191,191,192,191,192,191,192,192,0,0,193,194,193,194,193,193,194,193,194,193,194,193,194,193,194,193,194,193,194,193,194,193,194,193,194,193,194,193,0,0,0,195,195,198,199,195,198,199,195,195,198,199,198,198,198,198,195,198,199,195,198,198,195,198,199,198,198,195,198,199,199,195,198,199,198,199,198,198,198,195,0,198,195,198,195,198,199,195,198,199,198,195,198,199,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,196,212,212,210,201,197,200,211,203,202,207,208,205,196,204,212,209,206,210,201,197,200,211,203,202,207,208,205,196,204,212,209,206,200,210,201,197,200,211,203,202,207,208,205,196,204,212,209,206,210,201,197,200,211,203,202,207,208,205,196,204,212,209,206,210,201,197,200,211,203,202,207,208,205,196,204,212,209,206,202,201,212,212,197,210,201,197,200,211,203,202,207,208,205,196,204,212,209,206,201,211,212,202,206,207,197,210,201,197,200,211,203,202,207,208,205,196,204,212,209,206,209,210,202,211,211,202,212,202,212,212,204,204,204,204,205,205,203,203,196,212,212,211,200,211,202,201,212,212,197,201,211,212,202,206,207,197,209,210,202,211,211,202,212,202,212,212,204,204,204,204,205,205,203,203,211,211,202,202,211,211,208,208,208,208,208,208,208,208,208,208,208,208,201,200,200,202,202,204,204,204,204,205,205,203,203,202,202,202,202,211,211,208,208,208,208,208,208,208,208,208,208,208,208,201,200,200,202,202,210,201,197,200,211,203,202,207,208,205,196,204,212,209,206,210,201,197,200,211,203,202,207,208,205,196,204,212,209,206,204,204,204,204,205,205,203,203,210,201,197,200,211,203,202,207,208,205,196,204,212,209,206,202,202,213,0,213,213,213,213,213,213,213,213,213,213,213,213,0,214,214,214,214,214,214,214,214,214,214,0,214,214,214,0,0,0,0,215,216,217,218,215,216,217,218,215,215,216,217,218,215,216,217,218,218,215,216,217,218,216,215,216,217,218,215,216,217,218,215,218,217,217,218,215,215,218,216,215,218,217,217,218,215,218,215,216,217,218,215,216,217,218,215,216,217,218,218,0,219,219,219,219,219,219,219,219,219,0,219,219,219,219,0,0,0,0,222,221,223,220,222,221,223,220,222,221,223,220,222,221,223,220,222,221,223,220,222,221,223,220,222,221,223,220,222,221,223,220,222,221,223,220,222,221,223,220,222,221,223,220,222,221,223,220,222,221,223,220,222,221,223,220,222,221,223,220,222,221,223,220,222,221,223,220,222,221,223,220,222,221,223,220,222,221,223,220,222,221,223,220,222,221,223,220,222,221,223,220,222,221,223,220,222,221,223,220,222,221,223,220,222,221,223,220,222,221,223,220,222,221,223,220,222,221,223,220,222,221,223,220,222,221,223,220,222,221,223,220,222,221,223,220,222,221,223,220,222,221,223,220,222,221,223,220,222,221,223,220,222,221,223,220,222,221,223,220,222,221,223,220,222,221,223,220,222,221,223,220,222,221,223,220,0,0,226,224,226,224,224,226,226,224,224,224,224,226,226,224,226,224,226,226,226,224,226,226,0,224,226,224,226,224,226,224,0,0,0,0,0,0,0,0,0,0,0,225,227,225,227,227,229,225,232,230,228,235,233,231,234,227,229,225,232,230,228,235,233,231,234,232,230,233,231,234,232,230,233,231,234,232,230,233,231,234,232,230,233,231,234,232,230,233,231,234,232,230,233,231,234,232,230,233,231,234,232,230,233,231,234,227,229,225,232,230,228,235,233,231,234,228,227,229,225,232,230,228,235,233,231,234,227,227,227,229,225,232,230,228,235,233,231,234,229,227,229,225,232,230,228,235,233,231,234,229,227,229,225,232,230,228,235,233,231,234,227,227,227,225,227,225,227,232,230,233,231,234,232,230,233,231,234,232,230,233,231,234,232,230,233,231,234,232,230,233,231,234,232,230,233,231,234,232,230,233,231,234,232,230,233,231,234,228,227,227,229,229,227,227,227,235,235,227,229,225,232,230,228,235,233,231,234,227,229,225,232,230,228,235,233,231,234,227,229,225,232,230,228,235,233,231,234,236,0,236,236,236,236,236,236,236,236,236,236,236,236,236,236,0,237,237,237,237,237,237,0,237,237,237,237,237,237,0,0,238,239,238,239,238,239,238,239,238,239,238,239,238,239,238,239,238,239,238,239,238,239,238,239,238,239,238,239,238,239,238,239,238,239,238,239,238,239,238,239,238,239,238,239,238,239,238,239,238,239,238,239,238,239,238,239,238,239,238,239,238,239,238,239,238,239,238,239,238,239,238,239,238,239,238,239,238,239,238,239,238,239,238,239,238,239,238,239,238,239,238,239,238,239,238,239,238,239,238,239,238,239,238,239,238,239,238,239,238,239,238,239,238,239,238,239,238,239,238,239,0,240,240,240,240,240,240,240,240,240,240,240,240,240,240,0,240,240,240,240,0,0,0,0,0,0,0,0,0,248,247,241,246,248,245,244,243,242,247,241,246,248,245,244,243,242,247,241,246,248,245,244,243,242,241,247,241,246,248,245,244,243,242,243,248,244,244,244,244,245,245,245,245,246,242,248,247,241,246,248,245,244,243,242,246,242,247,241,246,248,245,244,243,242,247,241,246,248,245,244,243,242,246,245,244,247,248,241,243,248,244,244,244,244,245,245,245,245,246,242,248,246,242,246,245,244,247,246,248,246,248,247,241,246,248,245,244,243,242,247,241,246,248,245,244,243,242,247,241,246,248,245,244,243,242,250,0,250,0,0,251,251,251,249,252,0,251,249,251,252,250,249,251,252,250,249,251,252,250,249,251,252,250,249,251,252,250,249,251,252,250,249,251,252,250,249,251,252,250,249,251,252,250,249,251,252,250,249,251,252,250,0,253,253,253,253,253,253,253,253,253,253,253,253,253,253,0,253,253,253,253,253,253,253,0,0,0,0,0,0,0,0,0,259,255,256,261,260,262,254,257,258,259,255,256,261,260,262,254,257,258,254,259,255,256,261,260,262,254,257,258,261,260,257,257,259,255,256,261,260,262,254,257,258,259,262,258,258,259,255,256,261,260,262,254,257,258,255,259,255,256,261,260,262,254,257,258,259,262,258,258,259,255,256,261,260,262,254,257,258,255,257,257,259,262,258,258,261,260,257,257,256,255,255,259,262,258,258,254,261,260,257,257,259,262,258,258,255,259,262,258,258,255,257,257,259,262,258,258,261,260,257,257,256,255,255,259,262,258,258,261,260,257,257,259,255,256,261,260,262,254,257,258,259,255,256,261,260,262,254,257,258,259,255,256,261,260,262,254,257,258,261,260,257,257,0,0,0,0,0,263,263,263,263,263,263,263,263,266,267,268,269,263,266,267,268,269,263,266,267,268,269,263,268,267,263,263,268,266,267,268,269,263,268,266,267,268,269,263,268,268,268,268,266,267,268,269,263,263,263,263,263,263,263,267,269,0,267,267,267,268,268,269,266,267,268,269,263,266,267,268,269,263,266,267,268,269,263,267,267,266,266,266,266,269,0,0,0,0,0,0,0,0,0,0,271,272,274,275,274,265,270,271,273,272,274,264,275,276,277,265,270,271,273,272,274,264,275,276,277,271,265,270,271,273,272,274,264,275,276,277,271,272,274,275,271,272,274,275,265,270,271,273,272,274,264,275,276,277,270,265,270,271,273,272,274,264,275,276,277,271,272,274,275,265,270,271,273,272,274,264,275,276,277,277,276,264,265,265,270,271,273,272,274,264,275,276,277,271,272,274,275,271,272,274,275,271,274,271,274,271,274,273,270,273,271,272,274,275,274,271,271,272,274,275,271,272,274,275,270,271,272,274,275,277,276,264,265,271,272,274,275,271,272,274,275,271,274,271,274,271,274,273,270,273,271,272,274,275,271,272,274,275,273,273,271,272,274,275,271,272,274,275,265,270,271,273,272,274,264,275,276,277,265,270,271,273,272,274,264,275,276,277,265,270,271,273,272,274,264,275,276,277,273,273,0,278,278,278,278,278,278,278,278,278,278,278,278,278,278,278,278,278,278,278,278,278,278,0,278,278,278,278,278,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,290,288,287,295,289,283,292,286,284,281,296,291,279,294,280,282,285,293,290,288,287,295,289,283,292,286,284,281,296,291,279,294,280,282,285,293,296,290,288,287,295,289,283,292,286,284,281,296,291,279,294,280,282,285,293,294,279,283,290,288,287,295,289,283,292,286,284,281,296,291,279,294,280,282,285,293,292,293,280,290,288,287,295,289,283,292,286,284,281,296,291,279,294,280,282,285,293,280,290,288,287,295,289,283,292,286,284,281,296,291,279,294,280,282,285,293,290,288,287,295,289,283,292,286,284,281,296,291,279,294,280,282,285,293,281,281,291,292,293,296,296,284,285,286,295,284,285,286,295,282,285,286,295,280,296,294,279,283,292,293,280,280,281,281,291,292,293,296,296,284,285,286,295,284,285,286,295,282,285,286,295,280,281,280,280,281,287,288,289,290,296,296,282,285,286,295,281,280,280,281,287,288,289,290,296,296,290,288,287,295,289,283,292,286,284,281,296,291,279,294,280,282,285,293,290,288,287,295,289,283,292,286,284,281,296,291,279,294,280,282,285,293,282,285,286,295,290,288,287,295,289,283,292,286,284,281,296,291,279,294,280,282,285,293,0,297,297,297,297,297,297,297,297,297,297,297,297,297,0,297,297,297,0,0,0,0,0,302,300,298,301,299,302,300,298,301,299,302,300,298,301,299,302,300,298,301,299,302,300,298,301,299,302,300,298,301,299,302,300,298,301,299,298,300,300,298,298,298,298,300,300,298,298,298,301,302,299,298,300,300,298,298,298,298,300,300,298,298,298,301,302,299,299,299,299,299,299,299,299,299,299,299,299,299,299,302,300,298,301,299,302,300,298,301,299,302,300,298,301,299,299,0,303,303,303,303,303,303,303,303,303,0,303,303,303,0,0,305,305,304,305,304,305,304,305,304,305,304,305,305,304,305,304,304,304,304,305,305,304,304,304,305,304,305,304,305,304,0,306,306,306,306,306,306,306,0,306,306,306,0,307,307,307,307,307,307,307,307,307,307,307,307,307,307,0,308,308,308,308,308,308,308,308,308,308,308,308,308,308,0,308,308,308,308,308,308,308,308,308,0,0,0,0,311,309,310,311,312,309,310,311,312,309,310,311,312,309,310,310,310,311,312,309,310,311,312,309,310,311,312,309,310,311,312,309,312,311,309,310,310,312,310,311,312,309,310,311,312,309,310,311,312,309,0,313,313,313,313,313,313,0,313,313,313,313,313,313,313,313,313,313,313,313,313,313,313,313,313,313,313,313,313,313,313,313,313,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,317,319,316,335,320,323,325,334,320,325,319,326,332,318,315,322,314,324,328,316,330,329,333,331,327,323,321,317,334,335,320,325,319,326,332,318,315,322,314,324,328,316,330,329,333,331,327,323,321,317,334,335,324,318,320,325,319,326,332,318,315,322,314,324,328,316,330,329,333,331,327,323,321,317,334,335,333,318,314,320,323,325,334,316,318,320,323,325,334,320,325,319,326,332,318,315,322,314,324,328,316,330,329,333,331,327,323,321,317,334,335,331,332,315,318,320,323,325,334,314,324,320,325,319,326,332,318,315,322,314,324,328,316,330,329,333,331,327,323,321,317,334,335,316,335,320,323,325,324,334,320,325,319,326,332,318,315,322,314,324,328,316,330,329,333,331,327,323,321,317,334,335,322,320,325,319,326,332,318,315,322,314,324,328,316,330,329,333,331,327,323,321,317,334,335,314,316,335,320,323,325,334,314,314,330,331,316,335,320,323,325,324,334,332,318,320,323,325,334,320,323,325,334,314,314,315,314,318,318,320,321,323,325,334,317,319,316,335,320,323,325,334,324,318,333,318,314,320,323,325,334,316,318,320,323,325,334,331,332,315,318,320,323,325,334,314,324,316,335,320,323,325,324,334,322,314,316,335,320,323,325,334,314,314,330,331,316,335,320,323,325,324,334,332,318,320,323,325,334,320,323,325,334,314,314,315,314,318,318,320,321,323,325,334,314,314,324,324,315,314,318,318,320,321,323,325,334,314,326,327,328,329,324,314,314,324,324,320,325,319,326,332,318,315,322,314,324,328,316,330,329,333,331,327,323,321,317,334,335,320,325,319,326,332,318,315,322,314,324,328,316,330,329,333,331,327,323,321,317,334,335,315,314,318,318,320,321,323,325,334,320,325,319,326,332,318,315,322,314,324,328,316,330,329,333,331,327,323,321,317,334,335,314,326,327,328,329,324,0,336,336,336,336,336,336,336,336,336,336,336,336,336,336,336,336,336,336,336,336,336,0,336,336,336,336,336,336,336,336,336,336,336,336,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,346,350,337,338,350,346,345,352,337,348,343,342,344,349,347,355,338,351,356,350,357,341,340,353,339,354,346,345,352,337,348,343,342,344,349,347,355,338,351,356,350,357,341,340,353,339,354,346,346,350,346,345,352,337,348,343,342,344,349,347,355,338,351,356,350,357,341,340,353,339,354,350,347,352,351,350,350,346,345,352,337,348,343,342,344,349,347,355,338,351,356,350,357,341,340,353,339,354,348,348,346,346,346,346,349,349,349,355,355,355,356,357,355,355,356,356,355,355,355,356,357,355,356,355,356,337,338,349,343,349,349,349,349,343,342,344,341,340,339,342,344,341,340,339,346,346,345,352,337,348,343,342,344,349,347,355,338,351,356,350,357,341,340,353,339,354,346,346,346,346,346,346,345,352,337,348,343,342,344,349,347,355,338,351,356,350,357,341,340,353,339,354,346,347,346,346,345,338,338,346,345,352,337,348,343,342,344,349,347,355,338,351,356,350,357,341,340,353,339,354,349,350,350,354,354,349,349,349,349,349,349,350,349,355,355,355,350,355,356,350,349,349,346,350,337,338,350,346,346,350,350,347,352,351,350,350,348,348,346,346,346,346,349,349,349,355,355,355,356,357,355,355,356,356,355,355,355,356,357,355,356,355,356,337,338,349,343,349,349,349,349,343,342,344,341,340,339,342,344,341,340,339,346,346,346,346,346,346,346,347,346,346,345,338,338,349,350,350,354,354,349,349,349,349,349,349,350,349,355,355,355,350,355,356,350,349,349,350,346,347,349,349,353,350,346,350,349,349,350,353,353,353,346,350,349,355,356,355,355,356,356,355,355,356,356,355,356,355,356,346,354,354,350,349,354,354,350,350,346,347,349,349,353,350,346,350,349,349,350,353,353,353,346,350,349,346,345,352,337,348,343,342,344,349,347,355,338,351,356,350,357,341,340,353,339,354,346,345,352,337,348,343,342,344,349,347,355,338,351,356,350,357,341,340,353,339,354,355,356,355,355,356,356,355,355,356,356,355,356,355,356,346,345,352,337,348,343,342,344,349,347,355,338,351,356,350,357,341,340,353,339,354,346,354,354,350,349,354,354,350,0,358,358,358,358,358,358,358,358,358,358,0,358,358,358,358,358,0,0,0,0,0,359,362,361,362,359,360,361,362,359,360,362,360,361,362,359,360,361,362,359,360,359,360,360,360,361,362,359,360,361,362,359,360,359,360,360,360,360,361,362,359,360,359,359,359,359,359,362,362,360,359,360,360,360,359,360,360,360,360,359,359,359,359,359,361,361,362,359,361,362,359,360,361,362,359,360,361,362,359,360,361,361,362,364,364,0,0,364,364,363,363,363,363,363,364,363,364,363,364,363,364,363,364,363,364,363,364,363,364,363,364,363,364,363,364,0,365,365,365,365,365,365,365,365,0,365,365,365,365,0,0,0,368,366,367,368,366,367,368,366,367,368,366,367,368,366,368,366,367,368,366,367,367,367,367,368,368,366,367,367,368,368,366,367,367,367,368,367,368,368,366,368,366,367,368,366,367,368,366,367,368,366,0,369,369,369,369,369,369,369,369,369,0,369,369,369,369,369,369,369,369,369,369,369,369,0,0,0,0,372,371,370,373,372,371,370,373,372,371,370,373,373,373,372,371,370,373,370,373,372,371,370,373,372,372,371,370,373,372,371,370,373,371,370,370,370,373,373,373,370,373,372,371,370,370,370,373,370,372,370,370,372,370,372,371,370,373,372,371,370,373,372,371,370,373,0,374,374,374,374,374,374,374,374,374,374,0,374,374,374,374,374,374,374,0,0,0,0,0,375,377,376,378,379,375,377,376,378,379,375,377,376,378,379,375,377,376,378,379,375,375,377,376,378,379,375,377,377,376,377,375,377,376,378,379,375,377,376,378,379,375,375,375,377,377,376,377,375,378,379,378,379,375,377,376,378,379,375,377,376,378,379,375,377,376,378,379,0,380,380,380,380,380,380,380,380,380,380,380,380,380,380,380,380,380,380,380,0,380,380,380,380,380,380,380,380,380,380,380,380,380,380,380,380,380,380,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,399,397,399,388,390,391,382,394,404,385,402,400,383,387,398,386,393,396,403,395,384,389,405,381,392,401,397,399,388,390,391,382,394,404,385,402,400,383,387,398,386,393,396,403,395,384,389,405,381,392,401,400,382,397,399,388,390,391,382,394,404,385,402,400,383,387,398,386,393,396,403,395,384,389,405,381,392,401,400,397,399,388,390,391,382,394,404,385,402,400,383,387,398,386,393,396,403,395,384,389,405,381,392,401,382,382,385,386,397,399,388,390,391,382,394,404,385,402,400,383,387,398,386,393,396,403,395,384,389,405,381,392,401,382,397,399,388,390,391,382,394,404,385,402,400,383,387,398,386,393,396,403,395,384,389,405,381,392,401,387,399,399,397,399,388,390,391,382,394,404,385,402,400,383,387,398,386,393,396,403,395,384,389,405,381,392,401,391,391,390,388,392,389,391,383,384,400,400,395,393,388,392,389,396,388,392,389,394,397,388,392,389,381,382,382,398,399,400,382,400,382,382,385,386,382,387,399,399,391,391,390,388,392,389,391,383,384,400,400,395,393,388,392,389,396,388,392,389,394,397,388,392,389,381,382,382,398,382,399,382,399,382,401,382,402,384,400,400,404,403,382,399,400,388,392,389,405,388,392,389,399,399,382,399,382,399,382,401,382,402,384,400,400,404,403,382,399,397,399,388,390,391,382,394,404,385,402,400,383,387,398,386,393,396,403,395,384,389,405,381,392,401,397,399,388,390,391,382,394,404,385,402,400,383,387,398,386,393,396,403,395,384,389,405,381,392,401,400,388,392,389,405,388,392,389,397,399,388,390,391,382,394,404,385,402,400,383,387,398,386,393,396,403,395,384,389,405,381,392,401,399,399,407,408,0,406,407,408,407,0,408,408,0,0,406,409,409,409,406,406,408,407,409,406,408,407,409,406,408,407,409,406,408,407,409,406,408,407,409,406,408,407,409,406,408,407,409,406,408,407,409,406,408,407,409,406,408,407,409,406,408,407,409,406,0,410,410,410,410,410,410,410,410,410,0,410,410,410,410,410,0,0,0,0,0,414,412,414,411,413,412,414,411,413,412,414,411,413,411,412,414,411,413,413,412,414,412,414,411,413,412,414,412,414,411,413,412,414,411,413,414,411,413,412,414,412,414,414,413,414,412,414,411,413,412,414,411,413,412,414,411,413,413,0,415,415,0,417,416,417,416,417,416,0,417,416,417,416,415,417,416,415,417,416,415,417,416,415,417,416,415,417,416,415,417,416,415,417,416,415,417,416,415,417,416,415,417,416,415],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],0,0,[1,1],0,0,[[1,1],2],[[1,3],4],[[]],0,[[]],0,[1,5],0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],6],[[],6],[[],7],0,0,0,0,0,0,0,0,0,[[]],[[]],[8,8],[8,[[11,[9,10]]]],[8,[[11,[12,10]]]],[[8,8],2],[8,[[11,[13,10]]]],[8,[[11,[14,10]]]],[[]],[8,[[11,[15,10]]]],[8,[[11,[15,10]]]],[[]],[8,[[11,[15,10]]]],[8,[[11,[15,10]]]],0,[8,[[11,[16,10]]]],[[],6],[[],6],[[],7],0,0,0,0,0,0,[9,17],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[14,14],[15,15],[12,12],[13,13],[16,16],[9,9],[[],14],[[],15],[[],12],[[],13],[[],16],[[],9],[13,2],[13,2],[13,2],[9,2],[[14,14],2],[[15,15],2],[[12,12],2],[[13,13],2],[[16,16],2],[[9,9],2],[14,2],[13,2],[9,2],[9,2],[15,2],[12,17],[[]],[[]],[[]],[[]],[[]],[[]],[13,2],[12,5],[[]],[[]],[[]],[[]],[[]],[[]],[13,17],[13,2],[9,2],[16,5],[9,17],[[9,17]],[[13,2]],[[13,2]],[[13,2]],[[9,2]],[[14,2]],[[13,2]],[[9,2]],[[9,2]],[[15,2]],[[12,17]],[[13,2]],[[12,5]],[[13,17]],[[13,2]],[[9,2]],[[16,5]],[[9,17]],[[13,2]],[[9,2]],[[9,2]],[[13,17]],[[9,2]],[[13,2]],[[14,5]],[13,2],[9,2],[9,2],[13,17],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[9,2],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[13,2],[14,5],0,[[]],[[]],[18,[[11,[19,10]]]],[18,[[11,[20,10]]]],[18,18],[[18,18],2],[[]],[[]],[[18,21],[[11,[22,10]]]],[[18,21],[[11,[23,10]]]],0,[[],6],[[],6],[[],7],0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[20,2],[20,20],[19,19],[23,23],[22,22],[[],20],[[],19],[[],23],[[],22],[19,2],[19,2],[[20,20],2],[[19,19],2],[[23,23],2],[[22,22],2],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[22,24],[23,25],[19,2],[19,2],[[20,2]],[[19,2]],[[19,2]],[[22,24]],[[23,25]],[[19,2]],[[19,2]],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],7],[[],7],[[],7],[[],7],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[25,25],[[25,25],26],[[25,25],2],[[]],[[]],[[25,25],[[27,[26]]]],[[],6],[[],6],[[],7],0,[[]],[[]],[28,[[11,[29,10]]]],[28,[[11,[30,10]]]],[28,[[11,[24,31]]]],[28,[[11,[32,10]]]],[28,[[11,[33,10]]]],[28,[[11,[24,31]]]],[28,[[11,[34,10]]]],[28,[[11,[35,10]]]],[28,[[11,[24,31]]]],[28,[[11,[36,10]]]],[28,[[11,[37,10]]]],[28,[[11,[24,31]]]],[28,[[11,[38,10]]]],[28,[[11,[39,10]]]],[28,[[11,[24,31]]]],[28,[[11,[40,10]]]],[28,[[11,[24,31]]]],[28,[[11,[41,10]]]],[28,[[11,[42,10]]]],[28,[[11,[24,31]]]],[28,[[11,[43,10]]]],[28,[[11,[44,10]]]],[28,[[11,[24,31]]]],[28,[[11,[45,10]]]],[28,[[11,[46,10]]]],[28,[[11,[47,10]]]],[28,[[11,[48,10]]]],[28,[[11,[24,31]]]],[28,[[11,[49,10]]]],[28,[[11,[50,10]]]],[28,[[11,[24,31]]]],[28,28],[28,[[11,[51,10]]]],[28,[[11,[52,10]]]],[[28,28],2],[28,[[11,[53,10]]]],[28,[[11,[54,10]]]],[28,[[11,[55,10]]]],[28,[[11,[56,10]]]],[28,[[11,[57,10]]]],[28,[[11,[58,10]]]],[28,[[11,[59,10]]]],[28,[[11,[60,10]]]],[[]],[28,[[11,[61,10]]]],[28,[[11,[61,10]]]],[[]],[28,[[11,[61,10]]]],[28,[[11,[61,10]]]],0,[28,[[11,[62,10]]]],[28,[[11,[63,10]]]],[[],6],[[],6],[[],7],0,[28,[[11,[64,10]]]],[28,[[11,[65,10]]]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[49,66],[41,67],[38,68],[40,69],[32,70],[45,71],[36,72],[43,73],[34,74],[29,75],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[47,2],[64,2],[62,2],[51,2],[64,2],[62,2],[51,2],[64,2],[62,2],[51,2],[52,2],[63,2],[65,2],[52,2],[63,2],[65,2],[64,2],[62,2],[51,2],[64,2],[62,2],[51,2],[64,2],[62,2],[51,2],[64,2],[62,2],[51,2],[64,2],[62,2],[51,2],[64,2],[62,2],[51,2],[64,2],[62,2],[51,2],[64,2],[62,2],[51,2],[64,2],[62,2],[51,2],[64,2],[62,2],[51,2],[64,2],[62,2],[51,2],[64,2],[62,2],[51,2],[64,2],[62,2],[51,2],[64,2],[62,2],[51,2],[64,2],[62,2],[51,2],[64,2],[62,2],[51,2],[64,2],[62,2],[51,2],[64,2],[62,2],[51,2],[61,2],[64,2],[62,2],[51,2],[64,2],[62,2],[51,2],[64,2],[62,2],[51,2],[64,2],[62,2],[51,2],[64,2],[62,2],[51,2],[64,2],[62,2],[51,2],[64,2],[62,2],[51,2],[64,2],[62,2],[51,2],[64,2],[62,2],[51,2],[64,2],[62,2],[51,2],[52,2],[63,2],[65,2],[52,2],[63,2],[65,2],[52,2],[63,2],[65,2],[52,2],[63,2],[65,2],[52,2],[63,2],[65,2],[52,2],[63,2],[65,2],[52,2],[63,2],[65,2],[52,2],[63,2],[65,2],[52,2],[63,2],[65,2],[64,2],[62,2],[51,2],[52,2],[63,2],[65,2],[52,2],[63,2],[65,2],[52,2],[63,2],[65,2],[52,2],[63,2],[65,2],[54,54],[61,61],[49,49],[41,41],[46,46],[38,38],[52,52],[40,40],[60,60],[33,33],[32,32],[59,59],[50,50],[63,63],[42,42],[45,45],[35,35],[58,58],[36,36],[30,30],[64,64],[37,37],[57,57],[48,48],[62,62],[53,53],[43,43],[56,56],[34,34],[47,47],[55,55],[39,39],[44,44],[29,29],[51,51],[65,65],[38,2],[32,2],[36,2],[34,2],[[],54],[[],61],[[],49],[[],41],[[],46],[[],38],[[],52],[[],40],[[],60],[[],33],[[],32],[[],59],[[],50],[[],63],[[],42],[[],45],[[],35],[[],58],[[],36],[[],30],[[],64],[[],37],[[],57],[[],48],[[],62],[[],53],[[],43],[[],56],[[],34],[[],47],[[],55],[[],39],[[],44],[[],29],[[],51],[[],65],[60,2],[60,2],[49,2],[38,2],[40,2],[32,2],[36,2],[43,2],[34,2],[47,2],[29,2],[[54,54],2],[[61,61],2],[[49,49],2],[[41,41],2],[[46,46],2],[[38,38],2],[[52,52],2],[[40,40],2],[[60,60],2],[[33,33],2],[[32,32],2],[[59,59],2],[[50,50],2],[[63,63],2],[[42,42],2],[[45,45],2],[[35,35],2],[[58,58],2],[[36,36],2],[[30,30],2],[[64,64],2],[[37,37],2],[[57,57],2],[[48,48],2],[[62,62],2],[[53,53],2],[[43,43],2],[[56,56],2],[[34,34],2],[[47,47],2],[[55,55],2],[[39,39],2],[[44,44],2],[[29,29],2],[[51,51],2],[[65,65],2],[60,2],[60,2],[53,17],[54,17],[55,24],[56,24],[57,24],[59,76],[46,17],[33,17],[35,17],[58,17],[37,17],[39,17],[44,17],[47,2],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[46,24],[33,24],[50,17],[42,17],[35,24],[30,17],[37,24],[39,24],[44,24],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[58,24],[49,2],[38,2],[40,2],[32,2],[36,2],[43,2],[34,2],[29,2],[49,2],[38,2],[32,2],[36,2],[43,2],[34,2],[29,2],[60,2],[49,17],[38,17],[32,17],[36,17],[43,17],[34,17],[29,17],[48,2],[60,2],[[49,66]],[[41,67]],[[38,68]],[[40,69]],[[32,70]],[[45,71]],[[36,72]],[[43,73]],[[34,74]],[[29,75]],[[47,2]],[[64,2]],[[62,2]],[[51,2]],[[64,2]],[[62,2]],[[51,2]],[[64,2]],[[62,2]],[[51,2]],[[52,2]],[[63,2]],[[65,2]],[[52,2]],[[63,2]],[[65,2]],[[64,2]],[[62,2]],[[51,2]],[[64,2]],[[62,2]],[[51,2]],[[64,2]],[[62,2]],[[51,2]],[[64,2]],[[62,2]],[[51,2]],[[64,2]],[[62,2]],[[51,2]],[[64,2]],[[62,2]],[[51,2]],[[64,2]],[[62,2]],[[51,2]],[[64,2]],[[62,2]],[[51,2]],[[64,2]],[[62,2]],[[51,2]],[[64,2]],[[62,2]],[[51,2]],[[64,2]],[[62,2]],[[51,2]],[[64,2]],[[62,2]],[[51,2]],[[64,2]],[[62,2]],[[51,2]],[[64,2]],[[62,2]],[[51,2]],[[64,2]],[[62,2]],[[51,2]],[[64,2]],[[62,2]],[[51,2]],[[64,2]],[[62,2]],[[51,2]],[[64,2]],[[62,2]],[[51,2]],[[61,2]],[[64,2]],[[62,2]],[[51,2]],[[64,2]],[[62,2]],[[51,2]],[[64,2]],[[62,2]],[[51,2]],[[64,2]],[[62,2]],[[51,2]],[[64,2]],[[62,2]],[[51,2]],[[64,2]],[[62,2]],[[51,2]],[[64,2]],[[62,2]],[[51,2]],[[64,2]],[[62,2]],[[51,2]],[[64,2]],[[62,2]],[[51,2]],[[64,2]],[[62,2]],[[51,2]],[[52,2]],[[63,2]],[[65,2]],[[52,2]],[[63,2]],[[65,2]],[[52,2]],[[63,2]],[[65,2]],[[52,2]],[[63,2]],[[65,2]],[[52,2]],[[63,2]],[[65,2]],[[52,2]],[[63,2]],[[65,2]],[[52,2]],[[63,2]],[[65,2]],[[52,2]],[[63,2]],[[65,2]],[[52,2]],[[63,2]],[[65,2]],[[64,2]],[[62,2]],[[51,2]],[[52,2]],[[63,2]],[[65,2]],[[52,2]],[[63,2]],[[65,2]],[[52,2]],[[63,2]],[[65,2]],[[52,2]],[[63,2]],[[65,2]],[[38,2]],[[32,2]],[[36,2]],[[34,2]],[[60,2]],[[60,2]],[[49,2]],[[38,2]],[[40,2]],[[32,2]],[[36,2]],[[43,2]],[[34,2]],[[47,2]],[[29,2]],[[60,2]],[[60,2]],[[53,17]],[[54,17]],[[55,24]],[[56,24]],[[57,24]],[[59,76]],[[46,17]],[[33,17]],[[35,17]],[[58,17]],[[37,17]],[[39,17]],[[44,17]],[[47,2]],[[46,24]],[[33,24]],[[50,17]],[[42,17]],[[35,24]],[[30,17]],[[37,24]],[[39,24]],[[44,24]],[[58,24]],[[49,2]],[[38,2]],[[40,2]],[[32,2]],[[36,2]],[[43,2]],[[34,2]],[[29,2]],[[49,2]],[[38,2]],[[32,2]],[[36,2]],[[43,2]],[[34,2]],[[29,2]],[[60,2]],[[49,17]],[[38,17]],[[32,17]],[[36,17]],[[43,17]],[[34,17]],[[29,17]],[[48,2]],[[60,2]],[[60,2]],[[41,77]],[[45,78]],[[47,17]],[[60,2]],[60,2],[41,77],[45,78],[47,17],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[60,2],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[76,76],[69,69],[66,66],[68,68],[72,72],[75,75],[67,67],[70,70],[73,73],[77,77],[74,74],[71,71],[78,78],[[76,76],26],[[69,69],26],[[66,66],26],[[68,68],26],[[72,72],26],[[75,75],26],[[67,67],26],[[70,70],26],[[73,73],26],[[77,77],26],[[74,74],26],[[71,71],26],[[78,78],26],[[76,76],2],[[69,69],2],[[66,66],2],[[68,68],2],[[72,72],2],[[75,75],2],[[67,67],2],[[70,70],2],[[73,73],2],[[77,77],2],[[74,74],2],[[71,71],2],[[78,78],2],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[76,76],[[27,[26]]]],[[69,69],[[27,[26]]]],[[66,66],[[27,[26]]]],[[68,68],[[27,[26]]]],[[72,72],[[27,[26]]]],[[75,75],[[27,[26]]]],[[67,67],[[27,[26]]]],[[70,70],[[27,[26]]]],[[73,73],[[27,[26]]]],[[77,77],[[27,[26]]]],[[74,74],[[27,[26]]]],[[71,71],[[27,[26]]]],[[78,78],[[27,[26]]]],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[10,10],[31,31],[79,79],[[[11,[[0,[80,81]],[0,[80,82]]]]],[[11,[[0,[80,81]],[0,[80,82]]]]]],[[10,10],2],[[31,31],2],[[79,79],2],[[[11,[[0,[83,81]],[0,[83,82]]]],[11,[[0,[83,81]],[0,[83,82]]]]],2],[[]],[[]],[[]],[[]],[17,[[11,[81,82]]]],[[]],[[]],[[]],[[]],[[[11,[81,[0,[84,85]]]],86]],[[[11,[81,82]]]],[[[11,[81,84]]],81],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],7],[[],7],[[],7],[[],7],[[[11,[[0,[87,81]],85]],86]],[[[11,[81,85]],81]],0,0,[88,[[11,[24,10]]]],[88,[[11,[24,10]]]],[88,[[11,[24,10]]]],[88,[[11,[24,10]]]],[88,[[11,[24,10]]]],[88,[[11,[24,10]]]],[88,[[11,[24,10]]]],[88,[[11,[24,10]]]],[88,[[11,[24,10]]]],[88,[[11,[24,10]]]],[88,[[11,[24,10]]]],[88,[[11,[24,10]]]],[[]],[[]],[[]],[[]],[[89,21],88],[89,[[11,[90,10]]]],[89,89],[88,88],[88,[[11,[91,10]]]],[88,[[11,[92,10]]]],[88,[[11,[24,31]]]],[[89,89],2],[[88,88],2],[89,[[11,[93,10]]]],[[]],[[]],[89,[[11,[94,10]]]],[89,[[11,[95,10]]]],[89,[[11,[96,10]]]],[89,[[11,[97,10]]]],[[]],[[]],[89,[[11,[98,10]]]],[89,[[11,[99,10]]]],[89,[[11,[100,10]]]],[89,[[11,[101,10]]]],[89,[[11,[102,10]]]],[88,[[11,[24,10]]]],0,[89,[[11,[103,10]]]],[89,[[11,[24,10]]]],[[89,21],[[11,[104,10]]]],[88,[[11,[24,10]]]],[[],6],[[],6],[[],6],[[],6],[[],7],[[],7],0,[88,[[11,[24,10]]]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[91,2],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[103,2],[91,2],[91,2],[103,105],[92,17],[91,17],[90,5],[90,90],[100,100],[97,97],[101,101],[103,103],[94,94],[102,102],[92,92],[98,98],[104,104],[96,96],[93,93],[99,99],[95,95],[91,91],[91,106],[[],90],[[],100],[[],97],[[],101],[[],103],[[],94],[[],102],[[],92],[[],98],[[],104],[[],96],[[],93],[[],99],[[],95],[[],91],[103,17],[103,2],[91,2],[[90,90],2],[[100,100],2],[[97,97],2],[[101,101],2],[[103,103],2],[[94,94],2],[[102,102],2],[[92,92],2],[[98,98],2],[[104,104],2],[[96,96],2],[[93,93],2],[[99,99],2],[[95,95],2],[[91,91],2],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[91,2],[91,2],[91,2],[94,5],[95,5],[96,5],[97,5],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[98,5],[99,5],[100,5],[91,2],[101,5],[102,17],[103,2],[103,2],[93,17],[91,2],[91,2],[91,17],[[91,2]],[[103,2]],[[91,2]],[[91,2]],[[103,105]],[[92,17]],[[91,17]],[[90,5]],[[91,106]],[[103,17]],[[103,2]],[[91,2]],[[91,2]],[[91,2]],[[91,2]],[[94,5]],[[95,5]],[[96,5]],[[97,5]],[[98,5]],[[99,5]],[[100,5]],[[91,2]],[[101,5]],[[102,17]],[[103,2]],[[103,2]],[[93,17]],[[91,2]],[[91,2]],[[91,17]],[[91,2]],[[93,17]],[[91,107]],[[93,17]],[[91,2]],[[104,5]],[[104,5]],[91,2],[93,17],[91,107],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[93,17],[91,2],[104,5],[104,5],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[106,106],[105,105],[107,107],[[106,106],26],[[105,105],26],[[107,107],26],[[106,106],2],[[105,105],2],[[107,107],2],[[]],[[]],[[]],[[]],[[]],[[]],[[106,106],[[27,[26]]]],[[105,105],[[27,[26]]]],[[107,107],[[27,[26]]]],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],7],[[],7],[[],7],0,[[]],[[]],[108,108],[[108,108],2],[[]],[108,[[11,[109,10]]]],[108,[[11,[110,10]]]],[108,[[11,[111,10]]]],[108,[[11,[112,10]]]],[108,[[11,[113,10]]]],[108,[[11,[114,10]]]],[108,[[11,[115,10]]]],[108,[[11,[116,10]]]],[108,[[11,[117,10]]]],[108,[[11,[118,10]]]],[108,[[11,[119,10]]]],[108,[[11,[120,10]]]],[108,[[11,[121,10]]]],[108,[[11,[122,10]]]],[108,[[11,[24,10]]]],[108,[[11,[24,10]]]],[108,[[11,[123,10]]]],[108,[[11,[124,10]]]],[108,[[11,[125,10]]]],[108,[[11,[126,10]]]],[108,[[11,[127,10]]]],[108,[[11,[128,10]]]],[108,[[11,[129,10]]]],[108,[[11,[130,10]]]],[108,[[11,[131,10]]]],[108,[[11,[132,10]]]],[108,[[11,[133,10]]]],[108,[[11,[134,10]]]],[108,[[11,[135,10]]]],[108,[[11,[136,10]]]],[108,[[11,[137,10]]]],[108,[[11,[138,10]]]],[108,[[11,[139,10]]]],[108,[[11,[140,10]]]],[108,[[11,[141,10]]]],[108,[[11,[142,10]]]],[108,[[11,[143,10]]]],[108,[[11,[144,10]]]],[108,[[11,[145,10]]]],[108,[[11,[146,10]]]],[108,[[11,[147,10]]]],[108,[[11,[148,10]]]],[[]],0,[[],6],[[],6],[[],7],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[128,2],[146,2],[146,2],[146,2],[146,2],[146,2],[146,2],[146,2],[146,2],[146,2],[146,2],[146,2],[146,2],[146,2],[146,2],[146,2],[146,2],[109,2],[135,2],[144,2],[122,2],[122,17],[146,2],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[123,123],[114,114],[136,136],[148,148],[118,118],[128,128],[131,131],[117,117],[126,126],[120,120],[135,135],[116,116],[130,130],[125,125],[113,113],[122,122],[144,144],[139,139],[111,111],[112,112],[134,134],[115,115],[140,140],[133,133],[147,147],[145,145],[137,137],[143,143],[119,119],[142,142],[129,129],[146,146],[132,132],[109,109],[141,141],[138,138],[124,124],[121,121],[127,127],[110,110],[110,2],[111,2],[112,2],[113,2],[114,2],[115,2],[116,2],[117,2],[118,2],[119,2],[120,2],[121,2],[124,2],[124,17],[[],123],[[],114],[[],136],[[],148],[[],118],[[],128],[[],131],[[],117],[[],126],[[],120],[[],135],[[],116],[[],130],[[],125],[[],113],[[],122],[[],144],[[],139],[[],111],[[],112],[[],134],[[],115],[[],140],[[],133],[[],147],[[],145],[[],137],[[],143],[[],119],[[],142],[[],129],[[],146],[[],132],[[],109],[[],141],[[],138],[[],124],[[],121],[[],127],[[],110],[126,17],[127,17],[128,2],[[123,123],2],[[114,114],2],[[136,136],2],[[148,148],2],[[118,118],2],[[128,128],2],[[131,131],2],[[117,117],2],[[126,126],2],[[120,120],2],[[135,135],2],[[116,116],2],[[130,130],2],[[125,125],2],[[113,113],2],[[122,122],2],[[144,144],2],[[139,139],2],[[111,111],2],[[112,112],2],[[134,134],2],[[115,115],2],[[140,140],2],[[133,133],2],[[147,147],2],[[145,145],2],[[137,137],2],[[143,143],2],[[119,119],2],[[142,142],2],[[129,129],2],[[146,146],2],[[132,132],2],[[109,109],2],[[141,141],2],[[138,138],2],[[124,124],2],[[121,121],2],[[127,127],2],[[110,110],2],[124,2],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[145,2],[135,2],[122,2],[122,2],[123,2],[123,2],[129,2],[130,5],[131,5],[132,17],[123,2],[138,5],[139,17],[139,5],[123,2],[142,5],[143,5],[145,5],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[122,2],[133,2],[133,2],[133,2],[133,2],[133,2],[133,2],[133,2],[133,2],[133,2],[133,2],[133,2],[133,2],[133,2],[123,2],[122,17],[144,2],[141,2],[134,2],[134,2],[134,2],[134,2],[134,2],[134,2],[134,2],[134,2],[134,2],[134,2],[134,2],[134,2],[134,2],[135,2],[125,2],[124,2],[135,2],[144,2],[144,2],[122,17],[135,2],[123,2],[135,2],[135,2],[136,17],[135,2],[137,17],[140,17],[[128,2]],[[146,2]],[[146,2]],[[146,2]],[[146,2]],[[146,2]],[[146,2]],[[146,2]],[[146,2]],[[146,2]],[[146,2]],[[146,2]],[[146,2]],[[146,2]],[[146,2]],[[146,2]],[[146,2]],[[109,2]],[[135,2]],[[144,2]],[[122,2]],[[122,17]],[[146,2]],[[110,2]],[[111,2]],[[112,2]],[[113,2]],[[114,2]],[[115,2]],[[116,2]],[[117,2]],[[118,2]],[[119,2]],[[120,2]],[[121,2]],[[124,2]],[[124,17]],[[126,17]],[[127,17]],[[128,2]],[[124,2]],[[145,2]],[[135,2]],[[122,2]],[[122,2]],[[123,2]],[[123,2]],[[129,2]],[[130,5]],[[131,5]],[[132,17]],[[123,2]],[[138,5]],[[139,17]],[[139,5]],[[123,2]],[[142,5]],[[143,5]],[[145,5]],[[122,2]],[[133,2]],[[133,2]],[[133,2]],[[133,2]],[[133,2]],[[133,2]],[[133,2]],[[133,2]],[[133,2]],[[133,2]],[[133,2]],[[133,2]],[[133,2]],[[123,2]],[[122,17]],[[144,2]],[[141,2]],[[134,2]],[[134,2]],[[134,2]],[[134,2]],[[134,2]],[[134,2]],[[134,2]],[[134,2]],[[134,2]],[[134,2]],[[134,2]],[[134,2]],[[134,2]],[[135,2]],[[125,2]],[[124,2]],[[135,2]],[[144,2]],[[144,2]],[[122,17]],[[135,2]],[[123,2]],[[135,2]],[[135,2]],[[136,17]],[[135,2]],[[137,17]],[[140,17]],[[144,2]],[[129,2]],[[129,2]],[[145,2]],[[123,149]],[[135,2]],[[124,2]],[[135,2]],[[123,2]],[[123,2]],[[125,2]],[[144,2]],[[144,2]],[[135,2]],[[122,17]],[[128,2]],[[135,2]],[[123,2]],[[146,5]],[[135,2]],[[147,17]],[[148,17]],[144,2],[129,2],[129,2],[145,2],[123,149],[135,2],[124,2],[135,2],[123,2],[123,2],[125,2],[144,2],[144,2],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[135,2],[122,17],[128,2],[135,2],[123,2],[146,5],[135,2],[147,17],[148,17],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],0,0,0,0,[[]],[[]],[149,149],[[149,149],26],[[149,149],2],[[]],[[]],[[149,149],[[27,[26]]]],[[],6],[[],6],[[],7],0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[150,150],[151,151],[152,152],[151,[[11,[153,10]]]],[[150,150],2],[[151,151],2],[[152,152],2],[[]],[[]],[[]],[[150,21],151],[150,152],[[150,21],152],[[152,21],[[11,[154,10]]]],[[152,21],[[11,[154,10]]]],[[]],[[]],[[]],[[150,21],[[11,[154,10]]]],[[152,21],[[11,[154,10]]]],0,[151,[[11,[155,10]]]],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],7],[[],7],[[],7],0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[155,155],[153,153],[154,154],[[],155],[[],153],[[],154],[[154,21],2],[[154,21],2],[[155,155],2],[[153,153],2],[[154,154],2],[[]],[[]],[[]],[153,17],[155,2],[153,156],[[]],[[]],[[]],[155,2],[155,2],[153,157],[155,2],[[154,21],2],[[154,21],2],[155,2],[153,158],[155,2],[155,2],[153,159],[155,2],[[154,21,2]],[[154,21,2]],[[153,17]],[[155,2]],[[153,156]],[[155,2]],[[155,2]],[[153,157]],[[155,2]],[[154,21,2]],[[154,21,2]],[[155,2]],[[153,158]],[[155,2]],[[155,2]],[[153,159]],[[155,2]],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],7],[[],7],[[],7],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[160,160],[161,161],[162,162],[163,163],[164,164],[165,165],[166,166],[167,167],[168,168],[169,169],[170,170],[171,171],[172,172],[159,159],[173,173],[174,174],[175,175],[158,158],[176,176],[177,177],[178,178],[179,179],[180,180],[157,157],[181,181],[182,182],[183,183],[184,184],[185,185],[186,186],[187,187],[188,188],[156,156],[189,189],[[160,160],26],[[161,161],26],[[162,162],26],[[163,163],26],[[164,164],26],[[165,165],26],[[166,166],26],[[167,167],26],[[168,168],26],[[169,169],26],[[170,170],26],[[171,171],26],[[172,172],26],[[159,159],26],[[173,173],26],[[174,174],26],[[175,175],26],[[158,158],26],[[176,176],26],[[177,177],26],[[178,178],26],[[179,179],26],[[180,180],26],[[157,157],26],[[181,181],26],[[182,182],26],[[183,183],26],[[184,184],26],[[185,185],26],[[186,186],26],[[187,187],26],[[188,188],26],[[156,156],26],[[189,189],26],[[160,160],2],[[161,161],2],[[162,162],2],[[163,163],2],[[164,164],2],[[165,165],2],[[166,166],2],[[167,167],2],[[168,168],2],[[169,169],2],[[170,170],2],[[171,171],2],[[172,172],2],[[159,159],2],[[173,173],2],[[174,174],2],[[175,175],2],[[158,158],2],[[176,176],2],[[177,177],2],[[178,178],2],[[179,179],2],[[180,180],2],[[157,157],2],[[181,181],2],[[182,182],2],[[183,183],2],[[184,184],2],[[185,185],2],[[186,186],2],[[187,187],2],[[188,188],2],[[156,156],2],[[189,189],2],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[160,160],[[27,[26]]]],[[161,161],[[27,[26]]]],[[162,162],[[27,[26]]]],[[163,163],[[27,[26]]]],[[164,164],[[27,[26]]]],[[165,165],[[27,[26]]]],[[166,166],[[27,[26]]]],[[167,167],[[27,[26]]]],[[168,168],[[27,[26]]]],[[169,169],[[27,[26]]]],[[170,170],[[27,[26]]]],[[171,171],[[27,[26]]]],[[172,172],[[27,[26]]]],[[159,159],[[27,[26]]]],[[173,173],[[27,[26]]]],[[174,174],[[27,[26]]]],[[175,175],[[27,[26]]]],[[158,158],[[27,[26]]]],[[176,176],[[27,[26]]]],[[177,177],[[27,[26]]]],[[178,178],[[27,[26]]]],[[179,179],[[27,[26]]]],[[180,180],[[27,[26]]]],[[157,157],[[27,[26]]]],[[181,181],[[27,[26]]]],[[182,182],[[27,[26]]]],[[183,183],[[27,[26]]]],[[184,184],[[27,[26]]]],[[185,185],[[27,[26]]]],[[186,186],[[27,[26]]]],[[187,187],[[27,[26]]]],[[188,188],[[27,[26]]]],[[156,156],[[27,[26]]]],[[189,189],[[27,[26]]]],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],0,[[]],[[]],[190,190],[[190,190],2],[[]],[[190,21],[[11,[191,10]]]],[[]],0,[[],6],[[],6],[[],7],0,[190,[[11,[192,10]]]],0,0,[[]],[[]],[[]],[[]],[191,191],[192,192],[[],191],[[],192],[191,193],[[191,191],2],[[192,192],2],[[]],[[]],[191,2],[[]],[[]],[191,2],[191,2],[191,2],[191,2],[[191,193]],[[191,2]],[[191,2]],[[191,2]],[[191,2]],[[191,2]],[[191,2]],[[192,194]],[191,2],[[],6],[[],6],[[],6],[[],6],[[],7],[[],7],[192,194],0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[194,194],[193,193],[[194,194],26],[[193,193],26],[[194,194],2],[[193,193],2],[[]],[[]],[[]],[[]],[[194,194],[[27,[26]]]],[[193,193],[[27,[26]]]],[[],6],[[],6],[[],6],[[],6],[[],7],[[],7],0,0,0,[195,[[11,[196,10]]]],[[]],[[]],[[]],[[]],[[]],[[]],[195,[[11,[197,10]]]],[195,195],[198,198],[199,199],[198,[[11,[200,10]]]],[198,[[11,[201,10]]]],[198,[[11,[24,31]]]],[198,[[11,[24,31]]]],[[195,195],2],[[198,198],2],[[199,199],2],[195,[[11,[202,10]]]],[198,[[11,[203,10]]]],[198,[[11,[204,10]]]],[[]],[[]],[[]],[198,[[11,[205,10]]]],[198,[[11,[24,10]]]],[195,[[11,[206,10]]]],[[198,21],[[11,[207,10]]]],[199,[[11,[208,10]]]],[199,[[11,[208,10]]]],[[]],[[]],[[]],[198,[[11,[208,10]]]],[199,[[11,[208,10]]]],[198,[[11,[209,10]]]],[198,[[11,[210,10]]]],[[198,21],199],[195,[[11,[211,10]]]],0,[[198,21],[[11,[24,31]]]],[195,[[11,[212,10]]]],[[198,21],195],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[198,21],[[11,[24,79]]]],[[],7],[[],7],[[],7],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[196,17],[212,2],[212,2],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[200,17],[210,210],[201,201],[197,197],[200,200],[211,211],[203,203],[202,202],[207,207],[208,208],[205,205],[196,196],[204,204],[212,212],[209,209],[206,206],[[],210],[[],201],[[],197],[[],200],[[],211],[[],203],[[],202],[[],207],[[],208],[[],205],[[],196],[[],204],[[],212],[[],209],[[],206],[[210,210],2],[[201,201],2],[[197,197],2],[[200,200],2],[[211,211],2],[[203,203],2],[[202,202],2],[[207,207],2],[[208,208],2],[[205,205],2],[[196,196],2],[[204,204],2],[[212,212],2],[[209,209],2],[[206,206],2],[202,2],[201,17],[212,2],[212,2],[197,17],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[201,17],[211,17],[212,2],[202,2],[206,5],[207,5],[197,5],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[209,17],[210,17],[202,17],[211,17],[211,17],[202,17],[212,2],[202,2],[212,17],[212,17],[204,17],[204,17],[204,17],[204,17],[205,17],[205,17],[203,17],[203,17],[[196,17]],[[212,2]],[[212,2]],[211,17],[[200,17]],[211,17],[[202,2]],[[201,17]],[[212,2]],[[212,2]],[[197,17]],[[201,17]],[[211,17]],[[212,2]],[[202,2]],[[206,5]],[[207,5]],[[197,5]],[[209,17]],[[210,17]],[[202,17]],[[211,17]],[[211,17]],[[202,17]],[[212,2]],[[202,2]],[[212,17]],[[212,17]],[[204,17]],[[204,17]],[[204,17]],[[204,17]],[[205,17]],[[205,17]],[[203,17]],[[203,17]],[[211,17]],[[211,17]],[[202,2]],[[202,2]],[[211,17]],[[211,17]],[[208,2]],[[208,2]],[[208,2]],[[208,2]],[[208,2]],[[208,2]],[[208,2]],[[208,2]],[[208,2]],[[208,2]],[[208,2]],[[208,2]],[[201,17]],[[200,17]],[[200,17]],[[202,17]],[[202,213]],[[204,17]],[[204,17]],[[204,17]],[[204,17]],[[205,17]],[[205,17]],[[203,17]],[[203,17]],[[202,17]],[[202,17]],[202,2],[202,2],[211,17],[211,17],[208,2],[208,2],[208,2],[208,2],[208,2],[208,2],[208,2],[208,2],[208,2],[208,2],[208,2],[208,2],[201,17],[200,17],[200,17],[202,17],[202,213],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[204,17],[204,17],[204,17],[204,17],[205,17],[205,17],[203,17],[203,17],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[202,17],[202,17],0,0,0,[[]],[[]],[213,213],[[213,213],26],[[213,213],2],[[]],[[]],[[213,213],[[27,[26]]]],[[],6],[[],6],[[],7],0,[[]],[[]],[214,214],[214,[[11,[215,10]]]],[[214,214],2],[214,[[11,[216,10]]]],[[]],[[]],[214,[[11,[217,10]]]],[214,[[11,[218,10]]]],0,[[],6],[[],6],[[],7],0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[215,2],[215,215],[216,216],[217,217],[218,218],[[],215],[[],216],[[],217],[[],218],[218,2],[[215,215],2],[[216,216],2],[[217,217],2],[[218,218],2],[216,5],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[215,2],[218,2],[217,17],[217,17],[218,2],[215,17],[[215,2]],[[218,2]],[[216,5]],[[215,2]],[[218,2]],[[217,17]],[[217,17]],[[218,2]],[[215,17]],[[218,2]],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],7],[[],7],[[],7],[[],7],[218,2],0,[[]],[[]],[219,219],[219,[[11,[220,10]]]],[[219,219],2],[219,[[11,[221,10]]]],[219,[[11,[222,10]]]],[[]],[[]],0,[[],6],[[],6],[[],7],[219,[[11,[223,10]]]],0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[222,2],[221,2],[223,2],[220,2],[222,2],[221,2],[223,2],[220,2],[222,222],[221,221],[223,223],[220,220],[[],222],[[],221],[[],223],[[],220],[[222,222],2],[[221,221],2],[[223,223],2],[[220,220],2],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[222,2],[221,2],[223,2],[220,2],[222,2],[221,2],[223,2],[220,2],[222,2],[221,2],[223,2],[220,2],[222,2],[221,2],[223,2],[220,2],[222,2],[221,2],[223,2],[220,2],[[222,2]],[[221,2]],[[223,2]],[[220,2]],[[222,2]],[[221,2]],[[223,2]],[[220,2]],[[222,2]],[[221,2]],[[223,2]],[[220,2]],[[222,2]],[[221,2]],[[223,2]],[[220,2]],[[222,2]],[[221,2]],[[223,2]],[[220,2]],[[222,2]],[[221,2]],[[223,2]],[[220,2]],[[222,2]],[[221,2]],[[223,2]],[[220,2]],[[222,2]],[[221,2]],[[223,2]],[[220,2]],[[222,2]],[[221,2]],[[223,2]],[[220,2]],[[222,2]],[[221,2]],[[223,2]],[[220,2]],[[222,2]],[[221,2]],[[223,2]],[[220,2]],[[222,2]],[[221,2]],[[223,2]],[[220,2]],[[222,2]],[[221,2]],[[223,2]],[[220,2]],[[222,2]],[[221,2]],[[223,2]],[[220,2]],[[222,2]],[[221,2]],[[223,2]],[[220,2]],[[222,2]],[[221,2]],[[223,2]],[[220,2]],[[222,2]],[[221,2]],[[223,2]],[[220,2]],[222,2],[221,2],[223,2],[220,2],[222,2],[221,2],[223,2],[220,2],[222,2],[221,2],[223,2],[220,2],[222,2],[221,2],[223,2],[220,2],[222,2],[221,2],[223,2],[220,2],[222,2],[221,2],[223,2],[220,2],[222,2],[221,2],[223,2],[220,2],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],7],[[],7],[[],7],[[],7],[222,2],[221,2],[223,2],[220,2],[222,2],[221,2],[223,2],[220,2],[222,2],[221,2],[223,2],[220,2],0,0,[[]],[[]],[[]],[[]],[224,[[11,[225,10]]]],[[226,21],224],[226,226],[224,224],[224,[[11,[227,10]]]],[224,[[11,[228,10]]]],[224,[[11,[229,10]]]],[226,[[11,[230,10]]]],[[226,226],2],[[224,224],2],[[]],[[]],[226,[[11,[231,10]]]],[226,[[11,[232,10]]]],[[]],[[]],[226,[[11,[233,10]]]],[226,[[11,[234,10]]]],0,[224,[[11,[235,10]]]],[[],6],[[],6],[[],6],[[],6],[[],7],[[],7],0,0,0,0,0,0,0,0,0,0,0,[225,5],[227,2],[225,5],[227,2],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[232,2],[230,2],[233,2],[231,2],[234,2],[232,2],[230,2],[233,2],[231,2],[234,2],[232,2],[230,2],[233,2],[231,2],[234,2],[232,2],[230,2],[233,2],[231,2],[234,2],[232,2],[230,2],[233,2],[231,2],[234,2],[232,2],[230,2],[233,2],[231,2],[234,2],[232,2],[230,2],[233,2],[231,2],[234,2],[232,2],[230,2],[233,2],[231,2],[234,2],[227,227],[229,229],[225,225],[232,232],[230,230],[228,228],[235,235],[233,233],[231,231],[234,234],[228,5],[[],227],[[],229],[[],225],[[],232],[[],230],[[],228],[[],235],[[],233],[[],231],[[],234],[227,236],[227,2],[[227,227],2],[[229,229],2],[[225,225],2],[[232,232],2],[[230,230],2],[[228,228],2],[[235,235],2],[[233,233],2],[[231,231],2],[[234,234],2],[229,17],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[229,17],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[227,2],[227,2],[227,2],[[225,5]],[[227,2]],[[225,5]],[[227,2]],[[232,2]],[[230,2]],[[233,2]],[[231,2]],[[234,2]],[[232,2]],[[230,2]],[[233,2]],[[231,2]],[[234,2]],[[232,2]],[[230,2]],[[233,2]],[[231,2]],[[234,2]],[[232,2]],[[230,2]],[[233,2]],[[231,2]],[[234,2]],[[232,2]],[[230,2]],[[233,2]],[[231,2]],[[234,2]],[[232,2]],[[230,2]],[[233,2]],[[231,2]],[[234,2]],[[232,2]],[[230,2]],[[233,2]],[[231,2]],[[234,2]],[[232,2]],[[230,2]],[[233,2]],[[231,2]],[[234,2]],[[228,5]],[[227,236]],[[227,2]],[[229,17]],[[229,17]],[[227,2]],[[227,2]],[[227,2]],[[235,5]],[235,5],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],0,0,0,0,0,[[]],[[]],[236,236],[[236,236],26],[[236,236],2],[[]],[[]],[[236,236],[[27,[26]]]],[[],6],[[],6],[[],7],0,[[]],[[]],[237,237],[[237,237],2],[[]],[[]],0,[237,[[11,[238,10]]]],[237,[[11,[238,10]]]],[[],6],[[],6],[[],7],[237,[[11,[239,10]]]],0,0,[238,2],[239,2],[[]],[[]],[[]],[[]],[238,2],[239,2],[238,238],[239,239],[[],238],[[],239],[238,2],[239,2],[[238,238],2],[[239,239],2],[[]],[[]],[238,2],[239,2],[238,2],[239,2],[[]],[[]],[238,2],[239,2],[238,2],[239,2],[238,2],[239,2],[238,2],[239,2],[238,2],[239,2],[238,2],[239,2],[238,2],[239,2],[238,2],[239,2],[238,2],[239,2],[238,2],[239,2],[238,2],[239,2],[[238,2]],[[239,2]],[[238,2]],[[239,2]],[[238,2]],[[239,2]],[[238,2]],[[239,2]],[[238,2]],[[239,2]],[[238,2]],[[239,2]],[[238,2]],[[239,2]],[[238,2]],[[239,2]],[[238,2]],[[239,2]],[[238,2]],[[239,2]],[[238,2]],[[239,2]],[[238,2]],[[239,2]],[[238,2]],[[239,2]],[[238,2]],[[239,2]],[[238,2]],[[239,2]],[[238,2]],[[239,2]],[[238,2]],[[239,2]],[[238,2]],[[239,2]],[[238,2]],[[239,2]],[[238,2]],[[239,2]],[[238,2]],[[239,2]],[[238,2]],[[239,2]],[[238,2]],[[239,2]],[[238,2]],[[239,2]],[[238,2]],[[239,2]],[238,2],[239,2],[238,2],[239,2],[238,2],[239,2],[238,2],[239,2],[238,2],[239,2],[238,2],[239,2],[[],6],[[],6],[[],6],[[],6],[[],7],[[],7],[238,2],[239,2],[238,2],[239,2],[238,2],[239,2],0,[[]],[[]],[240,240],[240,[[11,[241,10]]]],[240,[[11,[242,10]]]],[240,[[11,[243,10]]]],[240,[[11,[24,10]]]],[[240,240],2],[240,[[11,[244,10]]]],[240,[[11,[245,10]]]],[[]],[[]],[240,[[11,[246,10]]]],[240,[[11,[247,10]]]],0,[240,[[11,[248,10]]]],[[],6],[[],6],[[],7],0,0,0,0,0,0,0,0,0,[248,2],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[247,247],[241,241],[246,246],[248,248],[245,245],[244,244],[243,243],[242,242],[241,17],[[],247],[[],241],[[],246],[[],248],[[],245],[[],244],[[],243],[[],242],[243,249],[248,2],[244,17],[244,17],[244,17],[244,17],[245,17],[245,17],[245,17],[245,17],[246,2],[242,250],[248,2],[[247,247],2],[[241,241],2],[[246,246],2],[[248,248],2],[[245,245],2],[[244,244],2],[[243,243],2],[[242,242],2],[246,2],[242,251],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[246,17],[245,252],[244,252],[247,2],[[248,2]],[[241,17]],[[243,249]],[[248,2]],[[244,17]],[[244,17]],[[244,17]],[[244,17]],[[245,17]],[[245,17]],[[245,17]],[[245,17]],[[246,2]],[[242,250]],[[248,2]],[[246,2]],[[242,251]],[[246,17]],[[245,252]],[[244,252]],[[247,2]],[[246,17]],[[248,2]],[246,17],[248,2],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[249,249],[251,251],[252,252],[250,250],[[249,249],26],[[251,251],26],[[252,252],26],[[250,250],26],[[249,249],2],[[251,251],2],[[252,252],2],[[250,250],2],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[249,249],[[27,[26]]]],[[251,251],[[27,[26]]]],[[252,252],[[27,[26]]]],[[250,250],[[27,[26]]]],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],7],[[],7],[[],7],[[],7],0,[[]],[[]],[253,[[11,[254,10]]]],[253,253],[253,[[11,[255,10]]]],[[253,253],2],[[]],[253,[[11,[256,10]]]],[253,[[11,[256,10]]]],[[]],[253,[[11,[256,10]]]],[253,[[11,[256,10]]]],[253,[[11,[257,10]]]],[253,[[11,[258,10]]]],0,[253,[[11,[259,10]]]],[253,[[11,[260,10]]]],[253,[[11,[261,10]]]],[253,[[11,[262,10]]]],[[],6],[[],6],[[],7],0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[254,5],[259,259],[255,255],[256,256],[261,261],[260,260],[262,262],[254,254],[257,257],[258,258],[261,17],[260,17],[257,17],[257,2],[[],259],[[],255],[[],256],[[],261],[[],260],[[],262],[[],254],[[],257],[[],258],[259,17],[262,17],[258,17],[258,2],[[259,259],2],[[255,255],2],[[256,256],2],[[261,261],2],[[260,260],2],[[262,262],2],[[254,254],2],[[257,257],2],[[258,258],2],[255,2],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[259,17],[262,17],[258,17],[258,2],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[255,2],[257,2],[257,2],[259,17],[262,17],[258,17],[258,2],[261,17],[260,17],[257,17],[257,2],[256,2],[255,2],[255,2],[259,17],[262,17],[258,17],[258,2],[[254,5]],[[261,17]],[[260,17]],[[257,17]],[[257,2]],[[259,17]],[[262,17]],[[258,17]],[[258,2]],[[255,2]],[[259,17]],[[262,17]],[[258,17]],[[258,2]],[[255,2]],[[257,2]],[[257,2]],[[259,17]],[[262,17]],[[258,17]],[[258,2]],[[261,17]],[[260,17]],[[257,17]],[[257,2]],[[256,2]],[[255,2]],[[255,2]],[[259,17]],[[262,17]],[[258,17]],[[258,2]],[[261,5]],[[260,5]],[[257,5]],[[257,2]],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[261,5],[260,5],[257,5],[257,2],0,0,0,0,0,[263,[[11,[24,10]]]],[263,[[11,[264,10]]]],[263,[[11,[24,10]]]],[263,[[11,[265,10]]]],[263,[[11,[24,10]]]],[263,[[11,[24,10]]]],[263,[[11,[24,10]]]],[263,[[11,[24,79]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[266,266],[267,267],[268,268],[269,269],[263,263],[268,[[11,[24,31]]]],[267,[[11,[270,10]]]],[263,[[11,[271,10]]]],[263,[[11,[272,10]]]],[268,267],[[266,266],2],[[267,267],2],[[268,268],2],[[269,269],2],[[263,263],2],[268,269],[[]],[[]],[[]],[[]],[[]],[[268,21],[[11,[24,10]]]],[[268,21],266],[[268,21],266],[[268,21],263],[[]],[[]],[[]],[[]],[[]],[263,[[11,[24,31]]]],[263,[[11,[24,31]]]],[263,[[11,[24,31]]]],[263,[[11,[24,31]]]],[263,[[11,[24,31]]]],[263,[[11,[24,31]]]],[267,[[11,[24,10]]]],[269,[[11,[24,31]]]],0,[267,[[11,[24,10]]]],[267,[[11,[24,10]]]],[267,[[11,[24,10]]]],[[268,21],[[11,[24,10]]]],[268,[[11,[24,31]]]],[269,[[11,[273,10]]]],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],7],[[],7],[[],7],[[],7],[[],7],[267,[[11,[24,10]]]],[267,[[11,[24,10]]]],[266,[[11,[24,10]]]],[266,[[11,[24,10]]]],[266,[[11,[24,10]]]],[266,[[11,[24,10]]]],[269,[[11,[24,79]]]],0,0,0,0,0,0,0,0,0,0,[271,2],[272,2],[274,2],[275,2],[274,2],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[271,2],[265,265],[270,270],[271,271],[273,273],[272,272],[274,274],[264,264],[275,275],[276,276],[277,277],[271,2],[272,2],[274,2],[275,2],[271,2],[272,2],[274,2],[275,2],[[],265],[[],270],[[],271],[[],273],[[],272],[[],274],[[],264],[[],275],[[],276],[[],277],[270,2],[[265,265],2],[[270,270],2],[[271,271],2],[[273,273],2],[[272,272],2],[[274,274],2],[[264,264],2],[[275,275],2],[[276,276],2],[[277,277],2],[271,17],[272,17],[274,17],[275,17],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[277,24],[276,24],[264,24],[265,24],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[271,17],[272,17],[274,17],[275,17],[271,17],[272,17],[274,17],[275,17],[271,2],[274,2],[271,2],[274,2],[271,2],[274,2],[273,2],[270,2],[273,2],[[271,2]],[[272,2]],[[274,2]],[[275,2]],[[274,2]],[[271,2]],[[271,2]],[[272,2]],[[274,2]],[[275,2]],[[271,2]],[[272,2]],[[274,2]],[[275,2]],[[270,2]],[[271,17]],[[272,17]],[[274,17]],[[275,17]],[[277,24]],[[276,24]],[[264,24]],[[265,24]],[[271,17]],[[272,17]],[[274,17]],[[275,17]],[[271,17]],[[272,17]],[[274,17]],[[275,17]],[[271,2]],[[274,2]],[[271,2]],[[274,2]],[[271,2]],[[274,2]],[[273,2]],[[270,2]],[[273,2]],[[271,17]],[[272,17]],[[274,17]],[[275,17]],[[271,2]],[[272,2]],[[274,2]],[[275,2]],[[273,2]],[[273,2]],[271,17],[272,17],[274,17],[275,17],[271,2],[272,2],[274,2],[275,2],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[273,2],[273,2],0,[[]],[[]],[278,278],[278,[[11,[279,10]]]],[278,[[11,[280,10]]]],[278,[[11,[281,10]]]],[278,[[11,[282,10]]]],[278,[[11,[283,10]]]],[[278,278],2],[[]],[278,[[11,[284,10]]]],[278,[[11,[285,10]]]],[[]],[278,[[11,[286,10]]]],[278,[[11,[287,10]]]],[278,[[11,[288,10]]]],[278,[[11,[289,10]]]],[278,[[11,[290,10]]]],[278,[[11,[291,10]]]],[278,[[11,[292,10]]]],[278,[[11,[293,10]]]],[278,[[11,[294,10]]]],0,[278,[[11,[295,10]]]],[278,[[11,[296,10]]]],[[],6],[[],6],[[],7],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[296,2],[290,290],[288,288],[287,287],[295,295],[289,289],[283,283],[292,292],[286,286],[284,284],[281,281],[296,296],[291,291],[279,279],[294,294],[280,280],[282,282],[285,285],[293,293],[294,17],[279,17],[283,5],[[],290],[[],288],[[],287],[[],295],[[],289],[[],283],[[],292],[[],286],[[],284],[[],281],[[],296],[[],291],[[],279],[[],294],[[],280],[[],282],[[],285],[[],293],[292,17],[293,17],[280,17],[[290,290],2],[[288,288],2],[[287,287],2],[[295,295],2],[[289,289],2],[[283,283],2],[[292,292],2],[[286,286],2],[[284,284],2],[[281,281],2],[[296,296],2],[[291,291],2],[[279,279],2],[[294,294],2],[[280,280],2],[[282,282],2],[[285,285],2],[[293,293],2],[280,17],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[281,2],[281,2],[291,17],[292,17],[293,17],[296,2],[296,2],[284,2],[285,2],[286,2],[295,2],[284,2],[285,2],[286,2],[295,2],[282,2],[285,2],[286,2],[295,2],[280,17],[[296,2]],[[294,17]],[[279,17]],[[283,5]],[[292,17]],[[293,17]],[[280,17]],[[280,17]],[[281,2]],[[281,2]],[[291,17]],[[292,17]],[[293,17]],[[296,2]],[[296,2]],[[284,2]],[[285,2]],[[286,2]],[[295,2]],[[284,2]],[[285,2]],[[286,2]],[[295,2]],[[282,2]],[[285,2]],[[286,2]],[[295,2]],[[280,17]],[[281,2]],[[280,2]],[[280,2]],[[281,2]],[[287,17]],[[288,17]],[[289,17]],[[290,17]],[[296,2]],[[296,2]],[[282,2]],[[285,2]],[[286,2]],[[295,2]],[281,2],[280,2],[280,2],[281,2],[287,17],[288,17],[289,17],[290,17],[296,2],[296,2],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[282,2],[285,2],[286,2],[295,2],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],0,[[]],[[]],[297,297],[297,[[11,[298,10]]]],[[297,297],2],[[]],[[]],[297,[[11,[299,10]]]],[297,[[11,[24,10]]]],[297,[[11,[24,10]]]],[297,[[11,[300,10]]]],[297,[[11,[301,10]]]],[297,[[11,[302,10]]]],0,[[],6],[[],6],[[],7],0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[302,302],[300,300],[298,298],[301,301],[299,299],[[],302],[[],300],[[],298],[[],301],[[],299],[[302,302],2],[[300,300],2],[[298,298],2],[[301,301],2],[[299,299],2],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[298,2],[300,17],[300,2],[298,2],[298,2],[298,2],[298,2],[300,17],[300,2],[298,2],[298,2],[298,2],[301,24],[302,17],[299,2],[[298,2]],[[300,17]],[[300,2]],[[298,2]],[[298,2]],[[298,2]],[[298,2]],[[300,17]],[[300,2]],[[298,2]],[[298,2]],[[298,2]],[[301,24]],[[302,17]],[[299,2]],[[299,2]],[[299,2]],[[299,2]],[[299,2]],[[299,2]],[[299,2]],[[299,2]],[299,2],[299,2],[299,2],[299,2],[299,2],[299,2],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],7],[[],7],[[],7],[[],7],[[],7],[299,2],0,[[]],[[]],[303,[[11,[304,10]]]],[303,303],[[303,303],2],[[]],[303,[[11,[24,31]]]],[[]],[303,[[11,[305,10]]]],0,[[],6],[[],6],[[],7],0,0,[305,2],[[]],[[]],[[]],[[]],[305,305],[304,304],[[],305],[[],304],[[305,305],2],[[304,304],2],[305,2],[[]],[[]],[[]],[[]],[304,5],[304,5],[304,17],[[305,2]],[[305,2]],[[304,5]],[[304,5]],[[304,17]],[[],6],[[],6],[[],6],[[],6],[[],7],[[],7],0,[[]],[[]],[306,306],[[306,306],2],[[]],[[]],[306,[[11,[307,10]]]],0,[[],6],[[],6],[[],7],0,[307,2],[[]],[[]],[307,307],[[],307],[[307,307],2],[307,2],[[]],[[]],[[307,2]],[[307,2]],[[],6],[[],6],[[],7],0,[[308,21],[[11,[24,10]]]],[308,[[11,[309,10]]]],[[]],[[]],[308,308],[308,[[11,[310,10]]]],[[308,308],2],[[]],[308,[[11,[311,10]]]],[308,[[11,[311,10]]]],[[]],[308,[[11,[311,10]]]],[308,[[11,[311,10]]]],[308,[[11,[312,10]]]],0,[308,[[11,[24,31]]]],[308,[[11,[24,79]]]],[308,[[11,[24,31]]]],[308,[[11,[24,79]]]],[308,[[11,[24,31]]]],[308,[[11,[24,31]]]],[[],6],[[],6],[[],7],0,0,0,0,[[311,21],2],[309,17],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[310,310],[311,311],[312,312],[309,309],[310,2],[310,2],[[],310],[[],311],[[],312],[[],309],[[310,310],2],[[311,311],2],[[312,312],2],[[309,309],2],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[312,2],[[311,21,2]],[[309,17]],[[310,2]],[[310,2]],[[312,2]],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],7],[[],7],[[],7],[[],7],0,[[]],[[]],[313,313],[[313,313],2],[[]],[[]],0,[[],6],[[],6],[[],7],[313,[[11,[314,10]]]],[313,[[11,[315,10]]]],[313,[[11,[316,10]]]],[313,[[11,[317,10]]]],[313,[[11,[318,10]]]],[313,[[11,[319,10]]]],[313,[[11,[320,10]]]],[313,[[11,[321,10]]]],[313,[[11,[322,10]]]],[313,[[11,[323,10]]]],[313,[[11,[324,10]]]],[313,[[11,[325,10]]]],[313,[[11,[326,10]]]],[313,[[11,[327,10]]]],[313,[[11,[328,10]]]],[313,[[11,[329,10]]]],[313,[[11,[330,10]]]],[313,[[11,[331,10]]]],[313,[[11,[332,10]]]],[313,[[11,[333,10]]]],[313,[[11,[334,10]]]],[313,[[11,[335,10]]]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[317,17],[319,5],[316,2],[335,2],[320,2],[323,2],[325,2],[334,2],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[324,2],[318,2],[320,320],[325,325],[319,319],[326,326],[332,332],[318,318],[315,315],[322,322],[314,314],[324,324],[328,328],[316,316],[330,330],[329,329],[333,333],[331,331],[327,327],[323,323],[321,321],[317,317],[334,334],[335,335],[333,17],[318,2],[314,2],[320,2],[323,2],[325,2],[334,2],[316,17],[318,2],[320,2],[323,2],[325,2],[334,2],[[],320],[[],325],[[],319],[[],326],[[],332],[[],318],[[],315],[[],322],[[],314],[[],324],[[],328],[[],316],[[],330],[[],329],[[],333],[[],331],[[],327],[[],323],[[],321],[[],317],[[],334],[[],335],[331,17],[332,17],[315,2],[318,2],[320,2],[323,2],[325,2],[334,2],[314,2],[324,2],[[320,320],2],[[325,325],2],[[319,319],2],[[326,326],2],[[332,332],2],[[318,318],2],[[315,315],2],[[322,322],2],[[314,314],2],[[324,324],2],[[328,328],2],[[316,316],2],[[330,330],2],[[329,329],2],[[333,333],2],[[331,331],2],[[327,327],2],[[323,323],2],[[321,321],2],[[317,317],2],[[334,334],2],[[335,335],2],[316,2],[335,2],[320,2],[323,2],[325,2],[324,2],[334,2],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[322,17],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[314,2],[316,2],[335,2],[320,2],[323,2],[325,2],[334,2],[314,2],[314,2],[330,17],[331,17],[316,2],[335,2],[320,2],[323,2],[325,2],[324,2],[334,2],[332,17],[318,2],[320,2],[323,2],[325,2],[334,2],[320,2],[323,2],[325,2],[334,2],[314,2],[314,2],[315,2],[314,2],[318,2],[318,2],[320,2],[321,17],[323,2],[325,2],[334,2],[[317,17]],[[319,5]],[[316,2]],[[335,2]],[[320,2]],[[323,2]],[[325,2]],[[334,2]],[[324,2]],[[318,2]],[[333,17]],[[318,2]],[[314,2]],[[320,2]],[[323,2]],[[325,2]],[[334,2]],[[316,17]],[[318,2]],[[320,2]],[[323,2]],[[325,2]],[[334,2]],[[331,17]],[[332,17]],[[315,2]],[[318,2]],[[320,2]],[[323,2]],[[325,2]],[[334,2]],[[314,2]],[[324,2]],[[316,2]],[[335,2]],[[320,2]],[[323,2]],[[325,2]],[[324,2]],[[334,2]],[[322,17]],[[314,2]],[[316,2]],[[335,2]],[[320,2]],[[323,2]],[[325,2]],[[334,2]],[[314,2]],[[314,2]],[[330,17]],[[331,17]],[[316,2]],[[335,2]],[[320,2]],[[323,2]],[[325,2]],[[324,2]],[[334,2]],[[332,17]],[[318,2]],[[320,2]],[[323,2]],[[325,2]],[[334,2]],[[320,2]],[[323,2]],[[325,2]],[[334,2]],[[314,2]],[[314,2]],[[315,2]],[[314,2]],[[318,2]],[[318,2]],[[320,2]],[[321,17]],[[323,2]],[[325,2]],[[334,2]],[[314,2]],[[314,2]],[[324,2]],[[324,2]],[[315,2]],[[314,2]],[[318,2]],[[318,2]],[[320,2]],[[321,17]],[[323,2]],[[325,2]],[[334,2]],[[314,2]],[[326,17]],[[327,17]],[[328,17]],[[329,17]],[[324,17]],[314,2],[314,2],[324,2],[324,2],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[315,2],[314,2],[318,2],[318,2],[320,2],[321,17],[323,2],[325,2],[334,2],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[314,2],[326,17],[327,17],[328,17],[329,17],[324,17],0,[336,[[11,[337,10]]]],[[336,21],[[11,[338,10]]]],[[]],[[]],[336,[[11,[339,10]]]],[336,[[11,[340,10]]]],[336,336],[336,[[11,[341,10]]]],[336,[[11,[342,10]]]],[336,[[11,[343,10]]]],[336,[[11,[344,10]]]],[[336,336],2],[[]],[336,[[11,[345,10]]]],[336,[[11,[346,10]]]],[336,[[11,[346,10]]]],[[]],[336,[[11,[346,10]]]],[336,[[11,[346,10]]]],[336,[[11,[347,10]]]],[336,[[11,[348,10]]]],0,[336,[[11,[349,10]]]],[336,[[11,[350,10]]]],[336,[[11,[351,10]]]],[336,[[11,[352,10]]]],[[],6],[[],6],[[],7],[336,[[11,[353,10]]]],[336,[[11,[354,10]]]],[336,[[11,[355,10]]]],[336,[[11,[356,10]]]],[336,[[11,[357,10]]]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[346,2],[350,2],[337,17],[338,17],[350,2],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[346,2],[346,2],[350,2],[346,346],[345,345],[352,352],[337,337],[348,348],[343,343],[342,342],[344,344],[349,349],[347,347],[355,355],[338,338],[351,351],[356,356],[350,350],[357,357],[341,341],[340,340],[353,353],[339,339],[354,354],[350,2],[347,2],[352,5],[351,5],[350,2],[350,2],[[],346],[[],345],[[],352],[[],337],[[],348],[[],343],[[],342],[[],344],[[],349],[[],347],[[],355],[[],338],[[],351],[[],356],[[],350],[[],357],[[],341],[[],340],[[],353],[[],339],[[],354],[348,5],[348,5],[346,2],[346,2],[346,2],[346,2],[349,2],[349,2],[349,2],[355,2],[355,2],[355,2],[356,2],[357,17],[355,2],[355,2],[356,2],[356,2],[355,2],[355,2],[355,2],[356,2],[357,17],[355,2],[356,2],[355,2],[356,2],[337,17],[338,17],[349,2],[343,2],[349,2],[349,2],[349,2],[349,2],[343,2],[[342,21],2],[[344,21],2],[[341,21],2],[[340,21],2],[[339,21],2],[[342,21],2],[[344,21],2],[[341,21],2],[[340,21],2],[[339,21],2],[346,2],[[346,346],2],[[345,345],2],[[352,352],2],[[337,337],2],[[348,348],2],[[343,343],2],[[342,342],2],[[344,344],2],[[349,349],2],[[347,347],2],[[355,355],2],[[338,338],2],[[351,351],2],[[356,356],2],[[350,350],2],[[357,357],2],[[341,341],2],[[340,340],2],[[353,353],2],[[339,339],2],[[354,354],2],[346,2],[346,2],[346,2],[346,2],[346,2],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[346,2],[347,2],[346,2],[346,2],[345,5],[338,2],[338,2],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[349,2],[350,17],[350,2],[354,2],[354,2],[349,2],[349,2],[349,2],[349,2],[349,2],[349,2],[350,2],[349,2],[355,2],[355,2],[355,2],[350,2],[355,2],[356,2],[350,2],[349,2],[349,2],[[346,2]],[[350,2]],[[337,17]],[[338,17]],[[350,2]],[[346,2]],[[346,2]],[[350,2]],[[350,2]],[[347,2]],[[352,5]],[[351,5]],[[350,2]],[[350,2]],[[348,5]],[[348,5]],[[346,2]],[[346,2]],[[346,2]],[[346,2]],[[349,2]],[[349,2]],[[349,2]],[[355,2]],[[355,2]],[[355,2]],[[356,2]],[[357,17]],[[355,2]],[[355,2]],[[356,2]],[[356,2]],[[355,2]],[[355,2]],[[355,2]],[[356,2]],[[357,17]],[[355,2]],[[356,2]],[[355,2]],[[356,2]],[[337,17]],[[338,17]],[[349,2]],[[343,2]],[[349,2]],[[349,2]],[[349,2]],[[349,2]],[[343,2]],[[342,21,2]],[[344,21,2]],[[341,21,2]],[[340,21,2]],[[339,21,2]],[[342,21,2]],[[344,21,2]],[[341,21,2]],[[340,21,2]],[[339,21,2]],[[346,2]],[[346,2]],[[346,2]],[[346,2]],[[346,2]],[[346,2]],[[346,2]],[[347,2]],[[346,2]],[[346,2]],[[345,5]],[[338,2]],[[338,2]],[[349,2]],[[350,17]],[[350,2]],[[354,2]],[[354,2]],[[349,2]],[[349,2]],[[349,2]],[[349,2]],[[349,2]],[[349,2]],[[350,2]],[[349,2]],[[355,2]],[[355,2]],[[355,2]],[[350,2]],[[355,2]],[[356,2]],[[350,2]],[[349,2]],[[349,2]],[[350,2]],[[346,2]],[[347,2]],[[349,2]],[[349,2]],[[353,2]],[[350,17]],[[346,2]],[[350,2]],[[349,2]],[[349,2]],[[350,2]],[[353,2]],[[353,2]],[[353,2]],[[346,2]],[[350,2]],[[349,2]],[[355,2]],[[356,2]],[[355,2]],[[355,2]],[[356,2]],[[356,2]],[[355,2]],[[355,2]],[[356,2]],[[356,2]],[[355,2]],[[356,2]],[[355,2]],[[356,2]],[[346,2]],[[354,2]],[[354,2]],[[350,2]],[[349,2]],[[354,2]],[[354,2]],[[350,2]],[350,2],[346,2],[347,2],[349,2],[349,2],[353,2],[350,17],[346,2],[350,2],[349,2],[349,2],[350,2],[353,2],[353,2],[353,2],[346,2],[350,2],[349,2],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[355,2],[356,2],[355,2],[355,2],[356,2],[356,2],[355,2],[355,2],[356,2],[356,2],[355,2],[356,2],[355,2],[356,2],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[346,2],[354,2],[354,2],[350,2],[349,2],[354,2],[354,2],[350,2],0,[[]],[[]],[358,358],[[358,21],[[11,[359,10]]]],[[358,21],[[11,[360,10]]]],[[358,21],[[11,[359,10]]]],[[358,21],[[11,[360,10]]]],[[358,358],2],[[]],[[]],0,[358,[[11,[361,10]]]],[358,[[11,[362,10]]]],[[],6],[[],6],[[],7],0,0,0,0,0,[[359,21],2],[362,17],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[362,17],[360,5],[361,361],[362,362],[359,359],[360,360],[[],361],[[],362],[[],359],[[],360],[359,363],[360,2],[360,2],[360,364],[[361,361],2],[[362,362],2],[[359,359],2],[[360,360],2],[[]],[[]],[[]],[[]],[[359,21],2],[360,2],[360,2],[360,2],[360,2],[[]],[[]],[[]],[[]],[[359,21],2],[[359,21],5],[[359,21],2],[359,2],[[359,21,2]],[[362,17]],[[362,17]],[[360,5]],[[359,363]],[[360,2]],[[360,2]],[[360,364]],[[359,21,2]],[[360,2]],[[360,2]],[[360,2]],[[360,2]],[[359,21,2]],[[359,21,5]],[[359,21,2]],[[359,2]],[[359,2]],[[361,5]],[[361,5]],[[362,5]],[359,2],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],7],[[],7],[[],7],[[],7],[361,5],[361,5],[362,5],0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[363,363],[364,364],[[363,363],26],[[364,364],26],[[363,363],2],[[364,364],2],[[]],[[]],[[]],[[]],[[363,363],[[27,[26]]]],[[364,364],[[27,[26]]]],[[],6],[[],6],[[],6],[[],6],[[],7],[[],7],0,[365,[[11,[366,10]]]],[[]],[[]],[365,[[11,[367,10]]]],[365,365],[[365,365],2],[[]],[[]],0,[[],6],[[],6],[[],7],[365,[[11,[368,10]]]],0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[368,368],[366,366],[367,367],[[],368],[[],366],[[],367],[368,2],[366,2],[[368,368],2],[[366,366],2],[[367,367],2],[[]],[[]],[[]],[367,2],[367,2],[367,2],[368,2],[[]],[[]],[[]],[367,2],[368,2],[[368,2]],[[366,2]],[[367,2]],[[367,2]],[[367,2]],[[368,2]],[[367,2]],[[368,2]],[[368,17]],[[366,17]],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],7],[[],7],[[],7],[368,17],[366,17],0,[[]],[[]],[369,369],[369,[[11,[370,10]]]],[[369,369],2],[[]],[[]],[369,[[11,[371,10]]]],[369,[[11,[372,10]]]],0,[369,[[11,[24,10]]]],[369,[[11,[24,10]]]],[369,[[11,[24,10]]]],[369,[[11,[24,10]]]],[369,[[11,[24,10]]]],[369,[[11,[24,10]]]],[369,[[11,[24,10]]]],[369,[[11,[24,10]]]],[369,[[11,[373,10]]]],[[],6],[[],6],[[],7],0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[372,372],[371,371],[370,370],[373,373],[373,5],[373,5],[[],372],[[],371],[[],370],[[],373],[370,2],[373,2],[[372,372],2],[[371,371],2],[[370,370],2],[[373,373],2],[372,2],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[371,24],[370,2],[370,2],[370,2],[373,2],[[373,5]],[[373,5]],[[370,2]],[[373,2]],[[372,2]],[[371,24]],[[370,2]],[[370,2]],[[370,2]],[[373,2]],[[370,24]],[[372,2]],[[370,2]],[370,24],[372,2],[370,2],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],7],[[],7],[[],7],[[],7],0,[[]],[[]],[374,374],[374,[[11,[24,10]]]],[374,[[11,[24,10]]]],[374,[[11,[375,10]]]],[[374,374],2],[374,[[11,[376,10]]]],[[]],[[]],0,[374,[[11,[377,10]]]],[374,[[11,[378,10]]]],[374,[[11,[379,10]]]],[374,[[11,[24,31]]]],[[],6],[[],6],[[],7],0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[375,375],[377,377],[376,376],[378,378],[379,379],[[],375],[[],377],[[],376],[[],378],[[],379],[375,2],[[375,375],2],[[377,377],2],[[376,376],2],[[378,378],2],[[379,379],2],[375,2],[377,2],[377,2],[376,2],[377,2],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[375,2],[[375,2]],[[375,2]],[[377,2]],[[377,2]],[[376,2]],[[377,2]],[[375,2]],[[378,24]],[[379,24]],[378,24],[379,24],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],7],[[],7],[[],7],[[],7],[[],7],0,[380,[[11,[381,10]]]],[[]],[[]],[380,380],[380,[[11,[382,10]]]],[380,[[11,[383,10]]]],[380,[[11,[384,10]]]],[380,[[11,[385,10]]]],[380,[[11,[386,10]]]],[380,[[11,[24,10]]]],[[380,380],2],[[]],[380,[[11,[387,10]]]],[380,[[11,[24,10]]]],[380,[[11,[388,10]]]],[[]],[380,[[11,[389,10]]]],[380,[[11,[390,10]]]],[380,[[11,[391,10]]]],0,[380,[[11,[392,10]]]],[380,[[11,[393,10]]]],[380,[[11,[394,10]]]],[380,[[11,[395,10]]]],[380,[[11,[396,10]]]],[380,[[11,[397,10]]]],[380,[[11,[398,10]]]],[380,[[11,[399,10]]]],[380,[[11,[400,10]]]],[380,[[11,[24,10]]]],[380,[[11,[401,10]]]],[[],6],[[],6],[380,[[11,[402,10]]]],[380,[[11,[403,10]]]],[380,[[11,[404,10]]]],[380,[[11,[405,10]]]],[[],7],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[399,17],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[400,2],[382,17],[397,397],[399,399],[388,388],[390,390],[391,391],[382,382],[394,394],[404,404],[385,385],[402,402],[400,400],[383,383],[387,387],[398,398],[386,386],[393,393],[396,396],[403,403],[395,395],[384,384],[389,389],[405,405],[381,381],[392,392],[401,401],[400,2],[[],397],[[],399],[[],388],[[],390],[[],391],[[],382],[[],394],[[],404],[[],385],[[],402],[[],400],[[],383],[[],387],[[],398],[[],386],[[],393],[[],396],[[],403],[[],395],[[],384],[[],389],[[],405],[[],381],[[],392],[[],401],[382,17],[382,17],[385,17],[386,17],[[397,397],2],[[399,399],2],[[388,388],2],[[390,390],2],[[391,391],2],[[382,382],2],[[394,394],2],[[404,404],2],[[385,385],2],[[402,402],2],[[400,400],2],[[383,383],2],[[387,387],2],[[398,398],2],[[386,386],2],[[393,393],2],[[396,396],2],[[403,403],2],[[395,395],2],[[384,384],2],[[389,389],2],[[405,405],2],[[381,381],2],[[392,392],2],[[401,401],2],[382,17],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[387,2],[399,2],[399,406],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[391,2],[391,2],[390,2],[388,2],[392,2],[389,2],[391,2],[383,5],[384,2],[400,2],[400,2],[395,17],[393,17],[388,2],[392,2],[389,2],[396,2],[388,2],[392,2],[389,2],[394,17],[397,2],[388,2],[392,2],[389,2],[381,5],[382,2],[382,2],[398,2],[[399,17]],[[400,2]],[[382,17]],[[400,2]],[[382,17]],[[382,17]],[[385,17]],[[386,17]],[[382,17]],[[387,2]],[[399,2]],[[399,406]],[[391,2]],[[391,2]],[[390,2]],[[388,2]],[[392,2]],[[389,2]],[[391,2]],[[383,5]],[[384,2]],[[400,2]],[[400,2]],[[395,17]],[[393,17]],[[388,2]],[[392,2]],[[389,2]],[[396,2]],[[388,2]],[[392,2]],[[389,2]],[[394,17]],[[397,2]],[[388,2]],[[392,2]],[[389,2]],[[381,5]],[[382,2]],[[382,2]],[[398,2]],[[382,2]],[[399,2]],[[382,407]],[[399,2]],[[382,2]],[[401,2]],[[382,2]],[[402,17]],[[384,2]],[[400,2]],[[400,2]],[[404,17]],[[403,17]],[[382,408]],[[399,409]],[[400,2]],[[388,2]],[[392,2]],[[389,2]],[[405,2]],[[388,2]],[[392,2]],[[389,2]],[[399,17]],[[399,17]],[382,2],[399,2],[382,407],[399,2],[382,2],[401,2],[382,2],[402,17],[384,2],[400,2],[400,2],[404,17],[403,17],[382,408],[399,409],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[400,2],[388,2],[392,2],[389,2],[405,2],[388,2],[392,2],[389,2],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[399,17],[399,17],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[408,408],[407,407],[409,409],[406,406],[[408,408],26],[[407,407],26],[[409,409],26],[[406,406],26],[[408,408],2],[[407,407],2],[[409,409],2],[[406,406],2],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[408,408],[[27,[26]]]],[[407,407],[[27,[26]]]],[[409,409],[[27,[26]]]],[[406,406],[[27,[26]]]],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],7],[[],7],[[],7],[[],7],0,[[]],[[]],[410,410],[410,[[11,[411,10]]]],[410,[[11,[412,10]]]],[410,[[11,[24,10]]]],[[410,410],2],[[]],[[]],0,[410,[[11,[413,10]]]],[410,[[11,[414,10]]]],[[],6],[[],6],[[],7],0,0,0,0,0,[414,2],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[412,412],[414,414],[411,411],[413,413],[411,17],[[],412],[[],414],[[],411],[[],413],[413,5],[412,415],[414,2],[[412,412],2],[[414,414],2],[[411,411],2],[[413,413],2],[412,416],[414,417],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[414,2]],[[411,17]],[[413,5]],[[412,415]],[[414,2]],[[412,416]],[[414,417]],[[414,2]],[[413,2]],[414,2],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],7],[[],7],[[],7],[[],7],[413,2],0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[417,417],[416,416],[415,415],[[417,417],26],[[416,416],26],[[415,415],26],[[417,417],2],[[416,416],2],[[415,415],2],[[]],[[]],[[]],[[]],[[]],[[]],[[417,417],[[27,[26]]]],[[416,416],[[27,[26]]]],[[415,415],[[27,[26]]]],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],7],[[],7],[[],7]],"c":[],"p":[[4,"Interrupt"],[15,"bool"],[3,"Formatter"],[6,"Result"],[15,"u16"],[4,"Result"],[3,"TypeId"],[3,"Adc"],[3,"Cs"],[3,"RW"],[3,"Reg"],[3,"Div"],[3,"Fcs"],[3,"Fifo"],[3,"Int"],[3,"Result"],[15,"u8"],[3,"Busctrl"],[3,"BusPriority"],[3,"BusPriorityAck"],[15,"usize"],[3,"Perfctr"],[3,"Perfsel"],[15,"u32"],[3,"Perfsel"],[4,"Ordering"],[4,"Option"],[3,"Clocks"],[3,"ClkAdcCtrl"],[3,"ClkAdcDiv"],[3,"R"],[3,"ClkGpout0ctrl"],[3,"ClkGpout0div"],[3,"ClkGpout1ctrl"],[3,"ClkGpout1div"],[3,"ClkGpout2ctrl"],[3,"ClkGpout2div"],[3,"ClkGpout3ctrl"],[3,"ClkGpout3div"],[3,"ClkPeriCtrl"],[3,"ClkRefCtrl"],[3,"ClkRefDiv"],[3,"ClkRtcCtrl"],[3,"ClkRtcDiv"],[3,"ClkSysCtrl"],[3,"ClkSysDiv"],[3,"ClkSysResusCtrl"],[3,"ClkSysResusStatus"],[3,"ClkUsbCtrl"],[3,"ClkUsbDiv"],[3,"Enabled0"],[3,"Enabled1"],[3,"Fc0delay"],[3,"Fc0interval"],[3,"Fc0maxKhz"],[3,"Fc0minKhz"],[3,"Fc0refKhz"],[3,"Fc0result"],[3,"Fc0src"],[3,"Fc0status"],[3,"Int"],[3,"SleepEn0"],[3,"SleepEn1"],[3,"WakeEn0"],[3,"WakeEn1"],[3,"ClkUsbCtrlAuxsrc"],[3,"ClkRefCtrlAuxsrc"],[3,"ClkGpout3ctrlAuxsrc"],[3,"ClkPeriCtrlAuxsrc"],[3,"ClkGpout0ctrlAuxsrc"],[3,"ClkSysCtrlAuxsrc"],[3,"ClkGpout2ctrlAuxsrc"],[3,"ClkRtcCtrlAuxsrc"],[3,"ClkGpout1ctrlAuxsrc"],[3,"ClkAdcCtrlAuxsrc"],[3,"Fc0src"],[3,"ClkRefCtrlSrc"],[3,"ClkSysCtrlSrc"],[3,"W"],[8,"Clone"],[8,"Copy"],[8,"Access"],[8,"PartialEq"],[8,"Read"],[8,"Write"],[8,"FnOnce"],[8,"Default"],[3,"Channel"],[3,"Dma"],[3,"ChanAbort"],[3,"CtrlTrig"],[3,"DbgCtdreq"],[3,"FifoLevels"],[3,"Inte0"],[3,"Inte1"],[3,"Intf0"],[3,"Intf1"],[3,"Intr"],[3,"Ints0"],[3,"Ints1"],[3,"MultiChanTrigger"],[3,"Nchannels"],[3,"SniffCtrl"],[3,"Timer"],[3,"Calc"],[3,"DataSize"],[3,"TreqSel"],[3,"I2c"],[3,"IcAckGeneralCall"],[3,"IcClrActivity"],[3,"IcClrGenCall"],[3,"IcClrIntr"],[3,"IcClrRdReq"],[3,"IcClrRestartDet"],[3,"IcClrRxDone"],[3,"IcClrRxOver"],[3,"IcClrRxUnder"],[3,"IcClrStartDet"],[3,"IcClrStopDet"],[3,"IcClrTxAbrt"],[3,"IcClrTxOver"],[3,"IcCompParam1"],[3,"IcCon"],[3,"IcDataCmd"],[3,"IcDmaCr"],[3,"IcDmaRdlr"],[3,"IcDmaTdlr"],[3,"IcEnable"],[3,"IcEnableStatus"],[3,"IcFsSclHcnt"],[3,"IcFsSclLcnt"],[3,"IcFsSpklen"],[3,"IcIntrMask"],[3,"IcIntrStat"],[3,"IcRawIntrStat"],[3,"IcRxTl"],[3,"IcRxflr"],[3,"IcSar"],[3,"IcSdaHold"],[3,"IcSdaSetup"],[3,"IcSlvDataNackOnly"],[3,"IcSsSclHcnt"],[3,"IcSsSclLcnt"],[3,"IcStatus"],[3,"IcTar"],[3,"IcTxAbrtSource"],[3,"IcTxTl"],[3,"IcTxflr"],[3,"Speed"],[3,"Io"],[3,"Gpio"],[3,"Int"],[3,"GpioCtrl"],[3,"Int"],[3,"GpioStatus"],[3,"Inover"],[3,"Irqover"],[3,"Oeover"],[3,"Outover"],[3,"Gpio4ctrlFuncsel"],[3,"Gpio5ctrlFuncsel"],[3,"Gpio22ctrlFuncsel"],[3,"Gpio24ctrlFuncsel"],[3,"Gpio7ctrlFuncsel"],[3,"Gpio1ctrlFuncsel"],[3,"Gpio25ctrlFuncsel"],[3,"Gpio27ctrlFuncsel"],[3,"Gpio2ctrlFuncsel"],[3,"Gpio20ctrlFuncsel"],[3,"Gpio0ctrlFuncsel"],[3,"Gpio14ctrlFuncsel"],[3,"Gpio19ctrlFuncsel"],[3,"Gpio29ctrlFuncsel"],[3,"Gpio17ctrlFuncsel"],[3,"Gpio6ctrlFuncsel"],[3,"Gpio8ctrlFuncsel"],[3,"Gpio3ctrlFuncsel"],[3,"Gpio16ctrlFuncsel"],[3,"Gpio13ctrlFuncsel"],[3,"Gpio11ctrlFuncsel"],[3,"Gpio26ctrlFuncsel"],[3,"Gpio12ctrlFuncsel"],[3,"Gpio9ctrlFuncsel"],[3,"Gpio21ctrlFuncsel"],[3,"Gpio10ctrlFuncsel"],[3,"Gpio18ctrlFuncsel"],[3,"Gpio28ctrlFuncsel"],[3,"Gpio15ctrlFuncsel"],[3,"Gpio23ctrlFuncsel"],[3,"Pads"],[3,"GpioCtrl"],[3,"VoltageSelect"],[3,"Drive"],[3,"VoltageSelect"],[3,"StateMachine"],[3,"SmAddr"],[3,"SmClkdiv"],[3,"Pio"],[3,"Irq"],[3,"Ctrl"],[3,"DbgCfginfo"],[3,"SmExecctrl"],[3,"Fdebug"],[3,"Flevel"],[3,"Fstat"],[3,"SmInstr"],[3,"InstrMem"],[3,"Intr"],[3,"Irq"],[3,"IrqForce"],[3,"SmPinctrl"],[3,"SmShiftctrl"],[3,"SmExecctrlStatusSel"],[3,"Pll"],[3,"Cs"],[3,"FbdivInt"],[3,"Prim"],[3,"Pwr"],[3,"Psm"],[3,"Done"],[3,"FrceOff"],[3,"FrceOn"],[3,"Wdsel"],[3,"Channel"],[3,"ChCc"],[3,"Pwm"],[3,"ChCsr"],[3,"ChCtr"],[3,"ChDiv"],[3,"En"],[3,"Inte"],[3,"Intf"],[3,"Intr"],[3,"Ints"],[3,"ChTop"],[3,"Divmode"],[3,"Resets"],[3,"Peripherals"],[3,"Wdsel"],[3,"Rosc"],[3,"Count"],[3,"Ctrl"],[3,"Div"],[3,"Freqa"],[3,"Freqb"],[3,"Phase"],[3,"Randombit"],[3,"Status"],[3,"Div"],[3,"Enable"],[3,"FreqRange"],[3,"Passwd"],[3,"Rtc"],[3,"ClkdivM1"],[3,"Ctrl"],[3,"Int"],[3,"IrqSetup0"],[3,"IrqSetup1"],[3,"Rtc0"],[3,"Rtc1"],[3,"Setup0"],[3,"Setup1"],[3,"Interp"],[3,"Interp1accum0add"],[3,"Interp1accum1add"],[3,"Gpio"],[3,"Div"],[3,"Sio"],[3,"Fifo"],[3,"DivCsr"],[3,"Interp1ctrlLane0"],[3,"Interp1ctrlLane1"],[3,"FifoSt"],[3,"Interp0ctrlLane0"],[3,"Interp0ctrlLane1"],[3,"Interp0accum1add"],[3,"Interp0accum0add"],[3,"Spi"],[3,"Cpsr"],[3,"Cr0"],[3,"Cr1"],[3,"Dmacr"],[3,"Dr"],[3,"Icr"],[3,"Imsc"],[3,"Mis"],[3,"Pcellid0"],[3,"Pcellid1"],[3,"Pcellid2"],[3,"Pcellid3"],[3,"Periphid0"],[3,"Periphid1"],[3,"Periphid2"],[3,"Periphid3"],[3,"Ris"],[3,"Sr"],[3,"Syscfg"],[3,"Dbgforce"],[3,"Mempowerdown"],[3,"ProcConfig"],[3,"ProcInSyncBypass"],[3,"ProcInSyncBypassHi"],[3,"Sysinfo"],[3,"ChipId"],[3,"Platform"],[3,"Tbman"],[3,"Platform"],[3,"Timer"],[3,"Armed"],[3,"Dbgpause"],[3,"Int"],[3,"Pause"],[3,"Uart"],[3,"Uartcr"],[3,"Uartdmacr"],[3,"Uartdr"],[3,"Uartfbrd"],[3,"Uartfr"],[3,"Uartibrd"],[3,"Uarticr"],[3,"Uartifls"],[3,"Uartilpr"],[3,"Uartimsc"],[3,"UartlcrH"],[3,"Uartmis"],[3,"Uartpcellid0"],[3,"Uartpcellid1"],[3,"Uartpcellid2"],[3,"Uartpcellid3"],[3,"Uartperiphid0"],[3,"Uartperiphid1"],[3,"Uartperiphid2"],[3,"Uartperiphid3"],[3,"Uartris"],[3,"Uartrsr"],[3,"Usb"],[3,"AddrEndp"],[3,"AddrEndpX"],[3,"BuffCpuShouldHandle"],[3,"BuffStatus"],[3,"EpAbort"],[3,"EpAbortDone"],[3,"EpStallArm"],[3,"EpStatusStallNak"],[3,"IntEpCtrl"],[3,"Int"],[3,"MainCtrl"],[3,"NakPoll"],[3,"SieCtrl"],[3,"SieStatus"],[3,"SofRd"],[3,"SofWr"],[3,"UsbMuxing"],[3,"UsbPwr"],[3,"UsbphyDirect"],[3,"UsbphyDirectOverride"],[3,"UsbphyTrim"],[3,"UsbDpram"],[3,"EpBufferControl"],[3,"EpControl"],[3,"SetupPacketHigh"],[3,"SetupPacketLow"],[3,"EpBufferControlDoubleBufferIsoOffset"],[3,"EpControlEndpointType"],[3,"VregAndChipReset"],[3,"Bod"],[3,"ChipReset"],[3,"Vreg"],[3,"Watchdog"],[3,"Ctrl"],[3,"Load"],[3,"Reason"],[3,"Tick"],[3,"XipCtrl"],[3,"Ctrl"],[3,"Flush"],[3,"Stat"],[3,"StreamAddr"],[3,"StreamCtr"],[3,"XipSsi"],[3,"Baudr"],[3,"Ctrlr0"],[3,"Ctrlr1"],[3,"Dmacr"],[3,"Dmardlr"],[3,"Dmatdlr"],[3,"Icr"],[3,"Imr"],[3,"Isr"],[3,"Msticr"],[3,"Mwcr"],[3,"Risr"],[3,"RxSampleDly"],[3,"Rxflr"],[3,"Rxftlr"],[3,"Rxoicr"],[3,"Rxuicr"],[3,"Ser"],[3,"SpiCtrlr0"],[3,"Sr"],[3,"Ssienr"],[3,"TxdDriveEdge"],[3,"Txflr"],[3,"Txftlr"],[3,"Txoicr"],[3,"InstL"],[3,"SpiFrf"],[3,"Tmod"],[3,"TransType"],[3,"Xosc"],[3,"Count"],[3,"Ctrl"],[3,"Startup"],[3,"Status"],[3,"Enable"],[3,"CtrlFreqRange"],[3,"StatusFreqRange"]]},\
"vcell":{"doc":"Just like <code>Cell</code> but with volatile read / write operations","t":"DLLLLLLLLLLL","n":["VolatileCell","as_ptr","borrow","borrow_mut","from","get","into","new","set","try_from","try_into","type_id"],"q":[[0,"vcell"]],"d":["Just like <code>Cell</code> but with volatile read / write operations","Returns a raw pointer to the underlying data in the cell","","","Returns the argument unchanged.","Returns a copy of the contained value","Calls <code>U::from(self)</code>.","Creates a new <code>VolatileCell</code> containing the given value","Sets the contained value","","",""],"i":[0,1,1,1,1,1,1,1,1,1,1,1],"f":[0,[1],[[]],[[]],[[]],[[[1,[2]]],2],[[]],[[],1],[[[1,[2]],2]],[[],3],[[],3],[[],4]],"c":[],"p":[[3,"VolatileCell"],[8,"Copy"],[4,"Result"],[3,"TypeId"]]},\
"void":{"doc":"Void","t":"IIELLLLLLLLLLLLFKK","n":["ResultVoidErrExt","ResultVoidExt","Void","borrow","borrow_mut","clone","eq","fmt","fmt","from","into","partial_cmp","try_from","try_into","type_id","unreachable","void_unwrap","void_unwrap_err"],"q":[[0,"void"]],"d":["Extensions to <code>Result&lt;Void, E&gt;</code>","Extensions to <code>Result&lt;T, Void&gt;</code>","The empty type for cases which can’t occur.","","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","A safe version of <code>intrinsincs::unreachable</code>.","Get the value out of a wrapper.","Get the error out of a wrapper."],"i":[0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,0,10,11],"f":[0,0,0,[[]],[[]],[1,1],[1,2],[[1,3],4],[[1,3],4],[[]],[[]],[1,[[6,[5]]]],[[],7],[[],7],[[],8],[1,9],[[]],[[]]],"c":[],"p":[[4,"Void"],[15,"bool"],[3,"Formatter"],[6,"Result"],[4,"Ordering"],[4,"Option"],[4,"Result"],[3,"TypeId"],[15,"never"],[8,"ResultVoidExt"],[8,"ResultVoidErrExt"]]},\
"volatile_register":{"doc":"Volatile access to memory mapped hardware registers","t":"DDDLLLLLLLLLLLLLLLLLLLLLLLLLL","n":["RO","RW","WO","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","from","from","from","into","into","into","modify","read","read","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","write","write"],"q":[[0,"volatile_register"]],"d":["Read-Only register","Read-Write register","Write-Only register","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Performs a read-modify-write operation","Reads the value of the register","Reads the value of the register","","","","","","","","","","Writes a <code>value</code> into the register","Writes <code>value</code> into the register"],"i":[0,0,0,4,2,7,4,2,7,4,2,7,4,2,7,2,4,2,4,2,7,4,2,7,4,2,7,2,7],"f":[0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[2,[1]],3]],[[[4,[1]]],1],[[[2,[1]]],1],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],6],[[],6],[[],6],[[[2,[1]],1]],[[[7,[1]],1]]],"c":[],"p":[[8,"Copy"],[3,"RW"],[8,"FnOnce"],[3,"RO"],[4,"Result"],[3,"TypeId"],[3,"WO"]]}\
}');
if (typeof window !== 'undefined' && window.initSearch) {window.initSearch(searchIndex)};
if (typeof exports !== 'undefined') {exports.searchIndex = searchIndex};
